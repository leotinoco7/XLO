var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.183,1,2.522]],["body/controllers/AppController.html",[0,1.937,1,4.13,2,1.657,3,0.342,4,0.309,5,0.276,6,4.155,7,0.686,8,1.838,9,5.797,10,1.749,11,0.02,12,4.855,13,5.985,14,5.985,15,4.555,16,0.776,17,4.855,18,1.491,19,0.503,20,0.976,21,3.268,22,2.651,23,1.343,24,3.805,25,4.155,26,4.855,27,0.342,28,0.163,29,1.846,30,1.749,31,2.651,32,1.415,33,4.855,34,0.016,35,0.016]],["title/modules/AppModule.html",[36,1.183,37,2.522]],["body/modules/AppModule.html",[1,4.028,2,1.769,3,0.274,4,0.247,5,0.221,11,0.021,19,0.549,20,0.78,24,3.916,25,3.322,27,0.274,28,0.13,34,0.014,35,0.014,36,1.678,37,5.125,38,1.652,39,2.206,40,3.322,41,3.322,42,3.322,43,4.23,44,4.23,45,4.23,46,4.23,47,4.23,48,2.841,49,4.23,50,2.485,51,1.652,52,1.751,53,3.881,54,2.648,55,2.831,56,3.881,57,3.881,58,3.881,59,3.881,60,3.881,61,3.881,62,3.881,63,0.967,64,2.459,65,3.881]],["title/injectables/AppService.html",[24,2.143,66,1.011]],["body/injectables/AppService.html",[3,0.346,4,0.312,5,0.279,7,0.694,8,1.851,9,5.159,11,0.021,15,4.587,16,0.785,18,1.508,19,0.381,20,0.987,24,3.535,27,0.346,28,0.164,32,1.431,34,0.016,35,0.016,66,1.667,67,2.216,68,4.203,69,6.027,70,1.563,71,4.911,72,1.59,73,1.042,74,0.739,75,1.16,76,6.027,77,6.027,78,4.911,79,4.911,80,4.203,81,4.911]],["title/controllers/AuthController.html",[0,1.183,82,2.522]],["body/controllers/AuthController.html",[0,1.215,2,1.281,3,0.265,4,0.239,5,0.214,7,0.531,8,1.556,10,1.825,11,0.021,16,0.81,18,1.556,19,0.533,20,0.754,21,3.133,22,2.049,23,1.038,27,0.265,28,0.126,29,1.427,30,1.352,31,2.767,32,1.477,34,0.014,35,0.014,63,1.735,72,1.641,73,1.076,74,0.763,75,1.197,82,3.498,83,3.212,84,2.378,85,3.753,86,4.676,87,5.068,88,3.212,89,4.189,90,3.753,91,5.068,92,5.068,93,5.068,94,3.857,95,5.068,96,5.068,97,3.753,98,4.338,99,3.753,100,3.753,101,5.068,102,5.068,103,4.338,104,4.338,105,3.753,106,3.753,107,2.049,108,3.753,109,3.753,110,2.972,111,2.201,112,2.049,113,1.352,114,2.972,115,3.212,116,3.365,117,3.212,118,2.378,119,3.212,120,3.212,121,3.212,122,1.509,123,2.856,124,2.201,125,3.753,126,3.753,127,3.753,128,3.753,129,3.753,130,2.201,131,3.753,132,3.753]],["title/modules/AuthModule.html",[36,1.183,43,2.315]],["body/modules/AuthModule.html",[2,1.896,3,0.304,4,0.274,5,0.245,11,0.021,19,0.542,20,0.867,27,0.304,28,0.144,34,0.015,35,0.015,36,1.798,38,1.836,39,2.364,43,4.573,48,2.925,50,2.663,51,1.836,52,1.946,54,2.838,55,3.034,82,4.241,113,1.554,116,4.032,117,3.692,133,3.692,134,4.314,135,3.692,136,4.355,137,4.314,138,4.314,139,2.53,140,4.314,141,3.283,142,2.53,143,4.314,144,2.53,145,2.53,146,2.068,147,4.314,148,4.314,149,3.692,150,4.314,151,4.314,152,4.314]],["title/injectables/AuthService.html",[66,1.011,116,2.143]],["body/injectables/AuthService.html",[3,0.275,4,0.248,5,0.222,7,0.551,8,1.597,11,0.021,16,0.831,18,1.198,19,0.518,20,0.784,27,0.275,28,0.131,30,1.873,32,1.136,34,0.014,35,0.014,63,1.457,66,1.438,67,1.759,72,1.683,73,1.104,74,0.782,75,1.228,86,3.957,88,4.45,89,4.236,94,2.967,98,4.45,116,3.049,118,2.47,119,3.337,120,3.337,121,3.337,141,2.967,153,3.337,154,2.988,155,2.839,156,2.129,157,2.509,158,6.825,159,3.899,160,2.839,161,3.899,162,2.967,163,2.129,164,3.957,165,4.45,166,2.988,167,3.194,168,3.43,169,2.656,170,2.967,171,3.049,172,2.493,173,5.199,174,4.45,175,5.199,176,5.199,177,3.899,178,3.957,179,1.659,180,3.899]],["title/classes/Card.html",[28,0.122,181,1.39]],["body/classes/Card.html",[3,0.296,4,0.267,5,0.239,7,0.593,11,0.02,16,1.148,19,0.325,27,0.296,28,0.141,34,0.015,35,0.015,70,1.578,73,1.287,74,1.101,75,1.612,181,2.076,182,1.289,183,3.592,184,1.966,185,4.186,186,4.186,187,4.186,188,3.842,189,2.07,190,4.002,191,3.842,192,4.615,193,3.28,194,4.197,195,4.197,196,4.197,197,3.766,198,4.197,199,4.197,200,4.197,201,4.197,202,4.197,203,4.197,204,3.842,205,4.197,206,1.289]],["title/controllers/CardController.html",[0,1.183,207,2.522]],["body/controllers/CardController.html",[0,1.018,2,1.073,3,0.222,4,0.2,5,0.179,7,0.444,8,1.376,10,2.05,11,0.021,16,0.91,18,1.748,19,0.51,20,0.632,21,3.286,22,1.717,23,0.87,27,0.222,28,0.105,29,1.196,30,1.132,31,3.109,32,1.659,34,0.012,35,0.012,63,1.802,70,1.5,72,1.843,73,1.208,74,0.856,75,1.345,84,1.992,107,2.447,110,2.628,111,1.843,112,1.717,113,1.132,114,3.338,122,2.288,124,1.843,130,3.062,179,2.222,181,2.547,189,2.37,206,0.965,207,3.093,208,2.691,209,1.943,210,2.447,211,2.852,212,1.507,213,3.338,214,3.143,215,3.143,216,2.999,217,1.843,218,3.143,219,2.628,220,3.143,221,1.992,222,3.143,223,3.836,224,3.143,225,2.169,226,3.606,227,3.143,228,3.41,229,3.143,230,2.169,231,2.392,232,1.717,233,3.062,234,2.169,235,1.418,236,3.41,237,1.843,238,3.143,239,3.143,240,1.992,241,3.143,242,3.974,243,2.691,244,2.691,245,3.143,246,2.691,247,2.392,248,3.143,249,2.392,250,2.392,251,3.143]],["title/modules/CardModule.html",[36,1.183,44,2.315]],["body/modules/CardModule.html",[2,1.991,3,0.328,4,0.296,5,0.265,11,0.02,19,0.533,20,0.936,27,0.328,28,0.156,34,0.016,35,0.016,36,1.888,38,1.981,39,2.481,44,4.557,48,2.984,50,2.796,51,1.981,52,2.101,54,2.979,55,3.184,113,1.677,139,2.73,142,2.73,144,2.73,145,2.73,146,2.232,207,4.394,233,4.112,234,3.213,252,3.985,253,3.985,254,4.656,255,4.656,256,3.985]],["title/injectables/CardService.html",[66,1.011,233,2.143]],["body/injectables/CardService.html",[3,0.178,4,0.161,5,0.144,7,0.357,8,1.171,11,0.021,16,0.96,18,1.777,19,0.48,20,0.507,27,0.178,28,0.085,29,0.96,30,0.909,32,1.751,34,0.01,35,0.01,66,1.055,67,1.139,70,1.418,72,1.945,73,1.344,74,0.87,75,1.419,122,2.545,154,3.497,155,1.378,156,1.378,157,2.06,160,2.51,163,1.378,166,2.81,169,2.81,171,1.48,172,1.21,179,1.623,181,1.948,185,1.742,186,1.742,189,2.294,190,1.48,206,0.775,209,1.302,210,2.083,211,2.51,212,1.828,213,3.004,216,2.773,217,2.237,221,2.416,225,2.632,226,3.246,233,2.237,235,1.139,236,2.902,237,1.48,257,2.16,258,3.814,259,3.814,260,2.524,261,3.814,262,2.524,263,3.226,264,2.524,265,3.814,266,2.524,267,3.377,268,2.524,269,2.524,270,2.524,271,2.632,272,1.48,273,1.48,274,1.742,275,1.378,276,1.599,277,1.921,278,2.696,279,1.48,280,1.742,281,3.498,282,4.186,283,2.524,284,2.632,285,1.848,286,2.16,287,2.524,288,1.921,289,2.524,290,2.524,291,2.524,292,2.524,293,1.921,294,3.264,295,3.814,296,3.814,297,2.524,298,3.536,299,3.814,300,1.921,301,3.264,302,1.742,303,3.498,304,1.921,305,2.524,306,3.814,307,2.524,308,1.921,309,2.16,310,2.524,311,2.524,312,2.524,313,2.524,314,2.524,315,2.16,316,1.742,317,2.524,318,2.524,319,2.524,320,2.524,321,1.921]],["title/classes/Collection.html",[28,0.122,285,1.469]],["body/classes/Collection.html",[3,0.326,4,0.294,5,0.263,7,0.653,11,0.02,16,1.119,19,0.358,27,0.326,28,0.155,34,0.016,35,0.016,70,1.49,73,1.346,74,1.053,75,1.653,181,2.413,182,1.418,184,2.089,188,4.019,189,2.165,191,4.019,193,2.963,197,3.902,206,1.418,285,2.332,316,4.378,322,3.952,323,4.827,324,4.618,325,4.618,326,4.618,327,4.618,328,4.618,329,4.618]],["title/controllers/CollectionController.html",[0,1.183,330,2.522]],["body/controllers/CollectionController.html",[0,0.968,2,1.02,3,0.211,4,0.19,5,0.17,7,0.423,8,1.327,10,2.125,11,0.021,16,0.943,18,1.812,19,0.504,20,0.601,21,3.359,22,1.632,23,0.827,27,0.211,28,0.1,29,1.137,30,1.077,31,3.222,32,1.72,34,0.012,35,0.012,63,1.791,70,1.482,72,1.801,73,1.181,74,0.837,75,1.314,84,1.894,107,2.36,110,2.535,111,1.753,112,1.632,113,1.077,114,3.262,122,2.236,124,1.753,130,2.977,179,2.16,189,2.259,206,0.918,209,1.899,210,2.36,211,2.772,212,1.433,216,2.949,217,1.753,219,2.535,221,1.894,225,2.063,228,3.289,230,2.063,231,2.275,232,1.632,235,1.349,237,1.753,240,1.894,242,3.863,243,2.558,244,2.558,246,2.558,247,2.275,249,2.275,250,2.275,285,2.611,330,2.983,331,2.558,332,3.524,333,3.262,334,4.073,335,3.897,336,2.989,337,2.989,338,2.989,339,2.989,340,3.839,341,2.989,342,2.989,343,2.989,344,2.989,345,3.524,346,2.989,347,2.989,348,2.977,349,2.558,350,3.289,351,2.989,352,2.989,353,2.989,354,2.558,355,2.989,356,2.989,357,2.989,358,2.989]],["title/modules/CollectionModule.html",[36,1.183,45,2.315]],["body/modules/CollectionModule.html",[2,1.991,3,0.328,4,0.296,5,0.265,11,0.02,19,0.533,20,0.936,27,0.328,28,0.156,34,0.016,35,0.016,36,1.888,38,1.981,39,2.481,45,4.557,48,2.984,50,2.796,51,1.981,52,2.101,54,2.979,55,3.184,113,1.677,139,2.73,142,2.73,144,2.73,145,2.73,146,2.232,330,4.394,348,4.112,349,3.985,359,3.985,360,3.985,361,4.656,362,4.656,363,4.656]],["title/injectables/CollectionService.html",[66,1.011,348,2.143]],["body/injectables/CollectionService.html",[3,0.208,4,0.187,5,0.168,7,0.417,8,1.314,11,0.021,16,0.979,18,1.802,19,0.502,20,0.592,27,0.208,28,0.099,29,1.121,30,1.062,32,1.71,34,0.012,35,0.012,66,1.184,67,1.33,70,1.477,72,1.9,73,1.299,74,0.883,75,1.386,122,2.651,154,3.59,155,1.61,156,1.61,157,2.222,160,2.75,163,1.61,166,2.823,169,2.823,179,2.143,189,2.286,206,0.905,209,1.461,210,2.336,211,2.75,212,2.051,216,2.813,217,2.509,221,2.711,225,2.953,235,1.33,237,1.729,263,3.441,267,3.343,272,1.729,273,1.729,274,2.034,275,1.61,276,1.867,277,2.243,278,2.954,279,1.729,280,2.034,281,3.833,284,2.034,285,2.359,288,2.243,298,3.814,300,2.243,304,2.243,308,2.243,315,3.662,323,2.243,332,3.501,333,3.241,345,3.501,348,2.509,350,3.256,354,2.523,364,2.523,365,2.948,366,2.948,367,2.948,368,2.948,369,2.948,370,2.948,371,2.948,372,2.948,373,2.948,374,2.948,375,5.037,376,2.948,377,2.523,378,2.948]],["title/classes/CreateCardDto.html",[28,0.122,213,2.143]],["body/classes/CreateCardDto.html",[3,0.24,4,0.216,5,0.193,7,0.481,10,2.311,11,0.02,16,1.026,19,0.423,23,0.941,27,0.24,28,0.159,34,0.013,35,0.013,70,1.437,73,1.315,74,1.05,181,2.678,182,1.044,184,1.706,185,3.762,186,3.762,187,3.762,189,1.617,190,3.938,193,3.011,206,1.044,213,2.778,285,1.904,379,5.635,380,2.588,381,4.066,382,5.894,383,4.737,384,3.597,385,3.401,386,3.401,387,4.737,388,3.401,389,3.401,390,4.737,391,4.737,392,4.737,393,4.737,394,4.737,395,3.401,396,3.401,397,4.737,398,3.401,399,3.401,400,3.401,401,3.401,402,4.737,403,4.737,404,3.401,405,3.401,406,3.595,407,3.269,408,4.148,409,4.665,410,4.277,411,3.269,412,1.737,413,3.278,414,3.401,415,3.401,416,3.401,417,2.911,418,2.588,419,3.401]],["title/classes/CreateCollectionDto.html",[28,0.122,333,2.143]],["body/classes/CreateCollectionDto.html",[3,0.323,4,0.291,5,0.261,7,0.648,10,2.079,11,0.02,16,0.923,19,0.448,23,1.267,27,0.323,28,0.193,34,0.016,35,0.016,70,1.293,73,1.452,74,0.868,181,2.195,182,1.407,184,2.079,193,3.389,285,2.32,323,4.81,333,3.385,381,3.657,384,3.389,406,3.451,407,4.362,408,4.393,410,3.983,412,2.34,413,2.948,420,5.409,421,3.486,422,4.58,423,4.58,424,5.772,425,4.58,426,4.58,427,4.58,428,3.486]],["title/classes/CreateDeckDto.html",[28,0.122,429,2.143]],["body/classes/CreateDeckDto.html",[3,0.35,4,0.316,5,0.283,7,0.702,10,1.789,11,0.02,16,0.794,19,0.471,23,1.374,27,0.35,28,0.203,34,0.017,35,0.017,70,1.36,73,1.288,74,0.748,182,1.526,184,2.186,381,3.148,384,3.101,406,3.315,411,4.189,412,2.538,413,2.538,429,3.56,430,5.196,431,3.781,432,5.61,433,2.739,434,5.61,435,4.968,436,4.968]],["title/classes/CreatePackDto.html",[28,0.122,437,2.315]],["body/classes/CreatePackDto.html",[3,0.344,4,0.311,5,0.278,7,0.69,10,1.759,11,0.02,16,0.781,19,0.466,23,1.351,27,0.344,28,0.201,34,0.016,35,0.016,70,1.345,74,0.735,182,1.5,184,2.163,187,4.489,285,2.415,384,3.068,406,3.28,411,4.145,412,2.494,413,2.494,437,3.805,438,3.522,439,5.141,440,4.179,441,4.882,442,6.787,443,5.141,444,4.882]],["title/classes/CreateUserDto.html",[28,0.122,445,2.143]],["body/classes/CreateUserDto.html",[3,0.209,4,0.189,5,0.169,7,0.42,10,2.334,11,0.02,16,1.036,19,0.392,23,0.821,27,0.209,28,0.144,34,0.012,35,0.012,63,1.071,70,1.503,73,1.249,74,0.975,75,1.016,167,3.214,168,2.965,182,0.912,184,1.549,193,3.374,204,1.881,206,0.912,275,2.761,302,2.968,303,2.259,335,3.204,381,4.107,384,3.617,406,3.607,407,4.061,408,3.273,409,4.328,410,4.235,411,2.048,412,1.516,413,3.311,433,1.339,445,2.522,446,5.654,447,2.259,448,4.478,449,4.061,450,3.848,451,4.061,452,4.67,453,2.968,454,2.968,455,5.548,456,4.3,457,2.968,458,2.968,459,2.968,460,2.968,461,2.968,462,4.3,463,2.968,464,2.968,465,3.273,466,3.681,467,2.968,468,2.968,469,2.968,470,2.968,471,4.3,472,2.968,473,2.968,474,3.273,475,4.3,476,2.968,477,2.968,478,4.3,479,3.681,480,4.3,481,4.3,482,2.968,483,2.541,484,2.541,485,2.968,486,2.968,487,2.968,488,2.541,489,2.968,490,2.968,491,2.541,492,2.968,493,4.3,494,2.541,495,2.541,496,2.968,497,2.968,498,2.968,499,2.968]],["title/classes/Deck.html",[28,0.122,433,1.649]],["body/classes/Deck.html",[3,0.335,4,0.302,5,0.27,7,0.671,11,0.02,16,1.105,27,0.335,28,0.159,34,0.016,35,0.016,70,1.578,74,1.04,75,1.732,182,1.458,184,2.126,188,4.069,189,2.193,191,4.069,197,3.941,432,5.498,433,2.663,500,4.063,501,5.498,502,4.746,503,4.746,504,4.746,505,4.746,506,4.746]],["title/controllers/DeckController.html",[0,1.183,507,2.522]],["body/controllers/DeckController.html",[0,1.135,2,1.197,3,0.247,4,0.223,5,0.199,7,0.496,8,1.486,10,1.995,11,0.021,16,0.885,18,1.701,19,0.515,20,0.705,21,3.261,22,1.914,23,0.97,27,0.247,28,0.117,29,1.333,30,1.263,31,3.025,32,1.614,34,0.013,35,0.013,51,2.541,63,1.836,70,1.241,72,1.793,73,1.176,74,0.833,75,1.309,84,2.221,107,1.914,110,2.837,111,2.056,112,1.914,113,1.263,114,2.837,122,2.227,123,4.93,124,2.056,130,2.056,179,2.757,189,1.651,206,1.077,209,2.039,212,1.681,216,2.319,217,2.056,230,2.42,232,1.914,235,1.582,240,2.221,249,2.668,250,2.668,334,3.823,429,3.502,433,2.995,507,3.339,508,3.001,509,3.506,510,3.506,511,3.506,512,3.506,513,3.506,514,3.506,515,3.506,516,3.248,517,3.001,518,2.668,519,3.506,520,3.506,521,3.506,522,4.141,523,3.506,524,3.506,525,3.506]],["title/modules/DeckModule.html",[36,1.183,46,2.315]],["body/modules/DeckModule.html",[2,1.991,3,0.328,4,0.296,5,0.265,11,0.02,19,0.533,20,0.936,27,0.328,28,0.156,34,0.016,35,0.016,36,1.888,38,1.981,39,2.481,46,4.557,48,2.984,50,2.796,51,1.981,52,2.101,54,2.979,55,3.184,113,1.677,139,2.73,142,2.73,144,2.73,145,2.73,146,2.232,507,4.394,516,4.112,517,3.985,526,3.985,527,4.656,528,3.985,529,4.656,530,4.656]],["title/injectables/DeckService.html",[66,1.011,516,2.143]],["body/injectables/DeckService.html",[3,0.23,4,0.208,5,0.186,7,0.461,8,1.413,11,0.021,16,0.925,18,1.637,19,0.491,20,0.656,27,0.23,28,0.109,29,1.241,30,1.176,32,1.554,34,0.013,35,0.013,51,1.958,63,0.813,66,1.273,67,1.473,70,1.514,72,1.874,73,1.229,74,0.871,75,1.368,154,3.498,155,1.782,156,1.782,157,2.327,160,2.911,163,1.782,166,2.351,169,2.351,171,1.914,172,1.565,179,1.958,181,1.241,189,2.162,204,2.068,206,1.002,209,1.571,212,2.206,216,1.565,217,2.699,235,1.473,263,3.126,267,2.513,271,2.253,272,1.914,273,1.914,274,2.253,278,2.699,279,1.914,280,2.253,282,3.502,284,3.176,286,2.794,293,3.502,298,3.176,429,3.395,433,2.405,501,5.689,516,2.699,518,2.484,531,2.794,532,3.264,533,6.104,534,3.264,535,3.264,536,4.602,537,3.264,538,2.484,539,3.264,540,3.264,541,3.264,542,3.264,543,3.264,544,3.264,545,3.264,546,3.264,547,3.264,548,3.264,549,3.264,550,3.264,551,3.264,552,3.264,553,3.264]],["title/injectables/JwtStrategy.html",[66,1.011,136,2.315]],["body/injectables/JwtStrategy.html",[3,0.294,4,0.265,5,0.237,7,0.589,8,1.668,11,0.021,16,0.868,18,1.28,19,0.497,20,0.837,27,0.294,28,0.139,29,1.584,30,1.5,32,1.214,34,0.015,35,0.015,63,1.595,66,1.502,67,1.88,70,0.933,72,1.758,73,1.153,74,0.964,75,1.283,113,1.5,136,3.441,146,1.997,149,3.566,154,3.087,155,2.275,156,2.275,157,2.575,160,2.966,162,4.133,163,2.275,166,2.128,167,2.966,169,2.128,170,3.17,171,2.443,172,1.997,178,3.17,179,1.773,263,2.443,321,3.17,554,3.566,555,5.431,556,4.166,557,5.431,558,5.431,559,4.166,560,4.166,561,4.166,562,4.166,563,4.166,564,3.566,565,2.443,566,4.166,567,3.566,568,4.166,569,4.166,570,4.166,571,4.166,572,4.166,573,4.166,574,4.166,575,4.166]],["title/classes/LoginDto.html",[28,0.122,89,2.315]],["body/classes/LoginDto.html",[3,0.323,4,0.291,5,0.261,7,0.648,10,2.079,11,0.02,16,0.923,19,0.448,23,1.267,27,0.323,28,0.193,34,0.016,35,0.016,70,1.486,74,0.868,89,3.657,167,3.735,168,4.011,182,1.407,184,2.079,384,3.389,406,3.451,407,4.362,410,4.362,412,2.34,413,2.948,455,5.679,479,4.94,483,4.94,484,4.94,576,3.921,577,4.58,578,4.94,579,4.58,580,4.58,581,5.772,582,4.58]],["title/classes/LoginResponseDto.html",[28,0.122,118,2.315]],["body/classes/LoginResponseDto.html",[3,0.329,4,0.297,5,0.266,7,0.66,10,2.104,11,0.02,16,0.934,19,0.453,23,1.291,27,0.329,28,0.156,34,0.016,35,0.016,63,1.748,70,1.308,74,0.879,86,4.445,94,4.852,103,5,104,5,115,3.996,118,3.701,146,2.8,182,1.434,184,2.104,381,3.701,384,2.984,406,3.481,413,2.984,583,5.457,584,3.996,585,5.841,586,5.841,587,5.841,588,4.668,589,5.841,590,4.668]],["title/classes/Pack.html",[28,0.122,591,2.143]],["body/classes/Pack.html",[3,0.327,4,0.295,5,0.264,7,0.656,11,0.02,16,1.098,27,0.327,28,0.155,34,0.016,35,0.016,70,1.304,74,1.033,75,1.655,182,1.426,184,2.097,188,4.029,189,2.171,191,4.029,193,3.406,197,3.91,438,4.109,591,3.414,592,5.997,593,3.974,594,5.443,595,6.359,596,4.643,597,4.643,598,4.643,599,4.643,600,4.643]],["title/controllers/PackController.html",[0,1.183,601,2.522]],["body/controllers/PackController.html",[0,1.362,2,1.436,3,0.297,4,0.268,5,0.239,7,0.595,8,1.679,10,1.515,11,0.021,16,0.673,18,1.292,19,0.539,20,0.845,21,2.985,22,2.297,23,1.164,27,0.297,28,0.141,29,1.6,30,1.515,31,2.297,32,1.226,34,0.015,35,0.015,63,1.775,64,3.463,72,1.362,73,0.893,74,0.633,75,0.994,84,2.665,107,2.297,110,3.206,111,2.467,112,2.297,113,1.515,114,3.206,122,2.198,124,2.467,130,2.467,206,1.292,209,1.866,212,2.017,216,2.621,232,2.297,234,2.904,235,1.898,240,2.665,316,2.904,334,2.904,437,4.073,438,3.206,591,3.561,601,3.773,602,3.601,603,4.679,604,4.207,605,4.207,606,3.601,607,3.561,608,4.207,609,4.207,610,4.207]],["title/modules/PackModule.html",[36,1.183,47,2.315]],["body/modules/PackModule.html",[2,1.977,3,0.325,4,0.293,5,0.262,11,0.02,19,0.531,20,0.925,27,0.325,28,0.154,34,0.016,35,0.016,36,1.875,38,1.96,39,2.465,47,4.548,48,2.975,50,2.777,51,1.96,52,2.078,54,2.958,55,3.163,63,1.443,64,2.918,113,1.659,139,2.701,142,2.701,144,2.701,145,2.701,146,2.208,234,3.178,256,3.942,438,2.701,601,4.372,607,4.101,611,3.942,612,3.942,613,4.605,614,4.605]],["title/injectables/PackService.html",[66,1.011,607,2.143]],["body/injectables/PackService.html",[3,0.205,4,0.185,5,0.165,7,0.41,8,1.299,11,0.021,16,0.877,18,1.533,19,0.425,20,0.583,27,0.205,28,0.097,29,1.104,30,1.045,32,1.455,34,0.012,35,0.012,63,1.453,64,3.695,66,1.17,67,1.31,72,1.776,73,1.164,74,0.637,75,1.296,122,2.007,154,2.55,155,1.585,156,1.585,157,2.206,160,2.31,163,1.585,166,3.493,169,2.55,171,1.702,172,2.028,181,2.086,187,2.003,189,1.444,190,1.702,206,0.891,209,1.444,212,2.028,216,1.391,235,1.31,263,1.702,267,1.585,271,2.92,285,1.701,293,3.22,294,2.484,340,2.92,417,2.484,418,3.22,437,3.476,438,3.42,474,3.799,591,3.217,606,2.484,607,2.481,615,2.484,616,4.231,617,4.231,618,2.902,619,4.231,620,4.992,621,2.902,622,2.902,623,4.231,624,4.992,625,2.902,626,2.902,627,2.902,628,3.621,629,2.902,630,2.902,631,2.902,632,2.902,633,2.902,634,2.902,635,2.902,636,2.902,637,2.902,638,2.902,639,4.231,640,4.231,641,4.992,642,4.992,643,2.902,644,2.902,645,2.902,646,2.902,647,4.175,648,2.902,649,2.902,650,2.902,651,2.902,652,2.902,653,2.484,654,2.902,655,2.902,656,2.902,657,2.902,658,2.902,659,2.902,660,2.902,661,2.902,662,2.902,663,2.902,664,2.902]],["title/modules/PrismaModule.html",[36,1.183,48,1.555]],["body/modules/PrismaModule.html",[3,0.35,4,0.316,5,0.283,11,0.02,19,0.471,20,0.998,27,0.35,28,0.166,34,0.017,35,0.017,36,1.965,38,2.114,39,2.583,48,3.07,50,2.91,51,2.114,52,2.242,54,3.101,157,2.994,665,4.252,666,4.252,667,4.252,668,4.968,669,6.07,670,4.968]],["title/injectables/PrismaService.html",[66,1.011,157,1.469]],["body/injectables/PrismaService.html",[3,0.326,4,0.295,5,0.263,7,0.655,8,1.785,11,0.021,16,0.929,18,1.785,19,0.451,20,0.931,27,0.326,28,0.155,34,0.016,35,0.016,66,1.607,67,2.089,72,1.499,73,0.983,74,0.697,75,1.094,154,3.63,157,2.336,169,2.968,206,1.422,565,3.408,671,3.963,672,6.351,673,5.811,674,7.002,675,5.811,676,6.661,677,4.63,678,3.963,679,4.63,680,4.63,681,4.63,682,4.63,683,4.63]],["title/classes/UpdateCardDto.html",[28,0.122,226,2.315]],["body/classes/UpdateCardDto.html",[3,0.383,4,0.345,5,0.309,11,0.02,19,0.496,23,1.501,27,0.383,28,0.182,34,0.017,35,0.017,182,1.667,209,1.853,213,3.183,226,4.055,236,4.13,380,4.13,565,3.183,684,4.645,685,3.745,686,5.427]],["title/classes/UpdateCollectionDto.html",[28,0.122,345,2.315]],["body/classes/UpdateCollectionDto.html",[3,0.383,4,0.345,5,0.309,11,0.02,19,0.496,23,1.501,27,0.383,28,0.182,34,0.017,35,0.017,182,1.667,209,1.853,333,3.183,345,4.055,350,4.13,421,4.13,565,3.183,685,3.745,687,4.645,688,5.427]],["title/classes/UpdateDeckDto.html",[28,0.122,689,2.781]],["body/classes/UpdateDeckDto.html",[3,0.383,4,0.345,5,0.309,11,0.02,19,0.496,23,1.501,27,0.383,28,0.182,34,0.017,35,0.017,182,1.667,209,1.853,429,3.183,431,4.13,518,4.13,565,3.183,685,3.745,689,4.871,690,4.645,691,5.427]],["title/classes/UpdateUserDto.html",[28,0.122,692,2.315]],["body/classes/UpdateUserDto.html",[3,0.383,4,0.345,5,0.309,11,0.02,19,0.496,23,1.501,27,0.383,28,0.182,34,0.017,35,0.017,182,1.667,209,1.853,445,3.183,447,4.13,565,3.183,685,3.745,692,4.055,693,4.645,694,4.13,695,5.427]],["title/classes/User.html",[28,0.122,63,0.91]],["body/classes/User.html",[3,0.271,4,0.245,5,0.219,7,0.544,11,0.02,16,1.156,19,0.399,27,0.271,28,0.129,34,0.014,35,0.014,63,1.283,70,1.609,73,1.233,74,1.088,75,1.698,167,3.173,168,3.407,182,1.181,184,1.856,188,3.681,189,1.983,191,3.681,192,4.421,193,3.17,197,3.639,204,3.681,206,1.582,275,3.173,433,3.005,448,4.421,449,4.01,450,4.421,451,4.01,465,3.921,696,3.292,697,3.846,698,3.846,699,3.846,700,3.846,701,3.846,702,3.846,703,3.846,704,3.846,705,3.846,706,3.846,707,3.846,708,3.846,709,3.846]],["title/controllers/UsersController.html",[0,1.183,710,2.522]],["body/controllers/UsersController.html",[0,1.172,2,0.804,3,0.166,4,0.15,5,0.134,7,0.333,8,1.112,10,2.18,11,0.021,16,0.968,18,1.859,19,0.469,20,0.474,21,3.39,22,1.287,23,0.652,27,0.166,28,0.079,29,0.896,30,0.849,31,3.305,32,1.764,34,0.01,35,0.01,63,1.844,70,1.262,72,1.959,73,1.285,74,0.911,75,1.43,107,1.287,110,1.382,111,1.382,112,1.287,113,0.849,114,3.55,122,1.455,123,4.606,124,1.382,130,3.439,172,1.735,179,2.27,189,2.066,206,0.724,209,1.688,210,1.977,211,1.977,219,2.123,228,3.763,230,1.626,231,1.793,232,1.287,235,1.063,237,1.382,240,1.493,242,2.754,247,2.754,332,2.293,334,4.177,335,4.015,340,3.413,445,3.303,452,1.793,522,2.017,692,3.568,694,2.754,710,2.498,711,2.017,712,3.098,713,3.098,714,2.356,715,2.356,716,2.356,717,2.356,718,2.356,719,6.053,720,4.407,721,2.356,722,5.731,723,2.356,724,2.356,725,2.356,726,2.356,727,2.356,728,2.356,729,3.619,730,2.356,731,2.356,732,2.356,733,3.619,734,2.356,735,2.356,736,3.619,737,2.356,738,2.356,739,2.356,740,2.356,741,2.356,742,2.356,743,2.356,744,2.356,745,2.584,746,2.017,747,2.356,748,2.356,749,2.356,750,5.865,751,2.356,752,2.356,753,2.356,754,2.356,755,2.356,756,2.356,757,2.356,758,2.356,759,2.356,760,3.619,761,2.356,762,2.356,763,2.356,764,2.356,765,2.356,766,2.356,767,2.356,768,2.356,769,2.356,770,2.356,771,2.356]],["title/modules/UsersModule.html",[36,1.183,49,2.315]],["body/modules/UsersModule.html",[2,1.991,3,0.328,4,0.296,5,0.265,11,0.02,19,0.533,20,0.936,27,0.328,28,0.156,34,0.016,35,0.016,36,1.888,38,1.981,39,2.481,48,2.984,49,4.557,50,2.796,51,1.981,52,2.101,54,2.979,55,3.184,113,1.677,139,2.73,142,2.73,144,2.73,145,2.73,146,2.232,710,4.394,745,4.112,746,3.985,772,3.985,773,4.656,774,3.985,775,4.656,776,4.656]],["title/injectables/UsersService.html",[66,1.011,745,2.143]],["body/injectables/UsersService.html",[3,0.124,4,0.111,5,0.1,7,0.248,8,0.879,11,0.021,16,0.901,18,1.674,19,0.437,20,0.352,27,0.124,28,0.059,29,0.667,30,0.631,32,1.588,34,0.008,35,0.008,63,1.404,66,0.792,67,0.791,70,1.466,72,1.825,73,1.412,74,0.873,75,1.332,122,2.387,154,3.484,155,0.957,156,0.957,157,1.684,160,1.981,162,1.334,163,0.957,164,2.178,166,2.784,167,2.704,168,2.904,169,3.033,170,1.334,171,2.127,172,1.739,179,1.218,181,1.089,185,1.975,186,1.975,189,2.315,190,1.679,192,2.178,204,1.11,206,0.538,209,1.238,210,1.563,211,0.957,212,1.372,216,1.739,219,1.679,221,1.813,235,0.791,237,1.028,263,3.196,267,2.287,271,1.21,272,1.028,273,1.028,274,1.21,275,3.463,276,1.11,277,1.334,278,1.679,279,1.028,280,1.21,281,1.334,284,1.975,285,1.151,288,1.334,298,3.761,300,2.761,302,4.319,303,5.603,308,2.178,309,2.45,321,4.148,332,1.813,335,1.11,377,1.5,433,0.791,445,2.456,448,3.769,449,3.418,450,3.769,451,3.418,465,3.769,647,2.178,692,2.653,694,2.178,712,2.45,713,2.45,722,2.45,745,1.679,777,1.5,778,2.862,779,2.862,780,1.753,781,1.753,782,2.862,783,1.753,784,2.862,785,1.753,786,2.862,787,1.753,788,2.862,789,1.753,790,1.753,791,2.862,792,1.753,793,2.862,794,1.753,795,1.753,796,1.753,797,1.753,798,2.862,799,1.753,800,2.862,801,1.753,802,1.753,803,2.862,804,1.753,805,1.753,806,1.753,807,1.5,808,1.753,809,1.5,810,1.5,811,1.753,812,2.862,813,2.45,814,1.753,815,1.753,816,1.753,817,1.753,818,5.45,819,1.753,820,2.862,821,2.45,822,1.753,823,1.753,824,2.862]],["title/changelog.html",[825,2.11,826,2.11,827,2.617]],["body/changelog.html",[11,0.018,34,0.018,35,0.018]],["title/coverage.html",[828,3.788]],["body/coverage.html",[0,2.084,1,2.169,5,0.179,6,2.691,11,0.02,24,1.843,28,0.239,34,0.012,35,0.012,63,0.783,64,2.839,66,1.853,68,2.691,74,0.473,82,2.169,83,2.691,89,1.992,116,1.843,118,1.992,122,1.264,136,1.992,153,2.691,157,1.264,172,1.507,181,1.196,183,2.691,207,2.169,208,2.691,213,1.843,226,1.992,232,1.717,233,1.843,257,2.691,272,1.843,273,1.843,275,1.717,276,1.992,278,1.843,279,1.843,285,1.264,322,2.691,330,2.169,331,2.691,333,1.843,345,1.992,348,1.843,364,2.691,379,2.691,380,3.41,420,2.691,421,3.41,429,1.843,430,2.691,431,3.41,433,1.418,437,1.992,438,3.338,439,2.691,440,2.691,445,1.843,446,2.691,447,3.41,500,2.691,507,2.169,508,2.691,516,1.843,531,2.691,538,4.332,554,2.691,576,2.691,583,2.691,584,2.691,591,1.843,592,2.691,593,2.691,601,2.169,602,2.691,607,1.843,615,2.691,647,5.708,671,2.691,684,2.691,687,2.691,689,2.392,690,2.691,692,1.992,693,2.691,696,2.691,710,2.169,711,2.691,745,1.843,777,2.691,828,2.392,829,2.691,830,3.143,831,3.143,832,6.018,833,6.438,834,2.691,835,3.143,836,6.698,837,5.222,838,3.143,839,5.222,840,3.143,841,5.222,842,3.143,843,2.691,844,2.691,845,4.481,846,3.143,847,3.143,848,2.691,849,2.691,850,2.691,851,3.143,852,3.143]],["title/dependencies.html",[39,1.869,853,2.617]],["body/dependencies.html",[11,0.021,20,0.978,23,1.347,28,0.201,34,0.016,35,0.016,39,2.072,113,1.754,141,3.705,146,2.334,164,3.705,206,1.495,412,2.487,564,5.561,854,6.496,855,4.869,856,4.869,857,4.869,858,4.869,859,5.132,860,4.869,861,4.869,862,4.869,863,4.869,864,4.869,865,4.869,866,4.869,867,4.869,868,4.167,869,4.869,870,4.869,871,4.869,872,4.869,873,4.869,874,4.869,875,4.869,876,4.869,877,3.705,878,4.869,879,4.869]],["title/miscellaneous/functions.html",[880,2.11,881,3.76]],["body/miscellaneous/functions.html",[7,0.684,11,0.02,18,1.99,34,0.016,35,0.016,70,1.338,72,2.098,73,1.375,74,0.975,75,1.531,267,3.263,272,3.504,273,2.839,275,3.263,276,3.067,278,3.504,279,2.839,304,3.684,843,4.143,844,5.546,848,5.114,849,5.114,850,5.114,880,3.341,881,4.143,882,4.841,883,4.841,884,4.841,885,4.841,886,4.841,887,6.48,888,4.841,889,4.841,890,5.114,891,5.974]],["title/index.html",[7,0.432,825,2.11,826,2.11]],["body/index.html",[11,0.02,34,0.016,35,0.016,181,1.705,443,3.838,451,3.095,488,3.838,567,4.874,678,3.838,827,4.874,829,4.874,877,3.413,892,5.695,893,4.484,894,4.484,895,4.484,896,4.484,897,3.838,898,4.484,899,3.838,900,4.484,901,4.484,902,4.484,903,4.484,904,4.484,905,6.258,906,4.874,907,4.484,908,3.838,909,3.838,910,5.635,911,4.484,912,3.838,913,3.838,914,6.583,915,4.484,916,3.838,917,3.838,918,4.484,919,4.874,920,4.484,921,4.484,922,4.484,923,3.838,924,3.838,925,4.484,926,4.484,927,4.484,928,4.484,929,4.484,930,4.484,931,4.334,932,4.484,933,3.838,934,3.838,935,3.838,936,3.838,937,3.838,938,3.838,939,3.095,940,4.484,941,4.484,942,3.838]],["title/license.html",[825,2.11,826,2.11,939,2.11]],["body/license.html",[4,0.372,5,0.056,8,0.16,11,0.003,15,0.397,16,0.083,19,0.04,28,0.017,32,0.152,34,0.004,35,0.003,52,0.235,63,1.006,74,0.147,80,1.181,107,0.285,165,0.446,168,0.306,172,1.249,174,1.761,193,0.499,197,0.306,219,0.573,223,0.837,267,0.754,282,0.744,301,2.007,340,0.675,384,1.051,418,0.397,428,1.05,434,0.446,452,2.327,466,1.761,474,1.566,491,0.837,494,0.837,495,1.181,578,0.446,594,1.487,603,0.446,628,1.761,653,0.446,807,0.837,809,0.446,810,4.222,813,1.181,821,0.446,828,0.744,859,0.837,868,0.837,890,0.446,899,1.761,906,0.446,908,1.761,909,1.181,910,2.433,912,0.446,913,1.487,916,0.446,917,0.446,919,0.837,923,0.446,924,0.446,939,4.736,942,1.181,943,4.497,944,4.855,945,5.006,946,4.285,947,0.522,948,0.522,949,1.38,950,5.324,951,2.842,952,4.594,953,5.142,954,2.345,955,0.522,956,0.522,957,0.978,958,2.057,959,5.006,960,2.057,961,1.38,962,3.906,963,1.38,964,0.522,965,1.38,966,0.522,967,0.522,968,0.978,969,3.606,970,2.345,971,0.522,972,2.345,973,0.522,974,0.522,975,2.842,976,0.978,977,1.761,978,0.522,979,0.522,980,0.522,981,3.906,982,6.043,983,3.906,984,1.38,985,1.38,986,0.978,987,6.801,988,0.978,989,2.606,990,2.606,991,3.906,992,2.345,993,0.522,994,0.522,995,2.842,996,0.978,997,2.842,998,5.53,999,0.522,1000,0.978,1001,0.522,1002,1.38,1003,4.497,1004,2.057,1005,0.978,1006,1.738,1007,0.522,1008,0.522,1009,0.978,1010,1.738,1011,1.738,1012,0.978,1013,3.606,1014,0.978,1015,4.686,1016,2.057,1017,0.978,1018,1.738,1019,0.522,1020,2.606,1021,2.057,1022,0.522,1023,2.842,1024,2.345,1025,5.432,1026,1.38,1027,2.606,1028,0.522,1029,0.522,1030,0.522,1031,2.057,1032,2.842,1033,0.978,1034,3.438,1035,3.256,1036,0.978,1037,0.522,1038,0.522,1039,4.041,1040,0.978,1041,0.522,1042,0.522,1043,3.762,1044,0.978,1045,0.522,1046,1.38,1047,0.522,1048,0.522,1049,0.978,1050,0.522,1051,0.522,1052,2.345,1053,1.738,1054,0.522,1055,0.522,1056,0.522,1057,0.522,1058,0.522,1059,0.522,1060,0.978,1061,0.522,1062,0.522,1063,0.522,1064,0.978,1065,0.522,1066,1.38,1067,0.978,1068,0.522,1069,0.522,1070,0.978,1071,0.978,1072,3.906,1073,0.522,1074,0.978,1075,0.978,1076,0.522,1077,0.522,1078,0.978,1079,1.38,1080,0.978,1081,1.38,1082,0.978,1083,0.522,1084,0.522,1085,2.345,1086,0.522,1087,0.522,1088,0.522,1089,2.057,1090,0.522,1091,0.522,1092,1.738,1093,0.522,1094,0.522,1095,0.978,1096,1.38,1097,0.522,1098,3.606,1099,0.522,1100,3.058,1101,0.522,1102,3.906,1103,1.738,1104,2.057,1105,2.345,1106,1.38,1107,0.522,1108,1.38,1109,4.394,1110,0.978,1111,0.522,1112,0.522,1113,0.522,1114,5.922,1115,3.256,1116,0.522,1117,0.522,1118,0.978,1119,0.978,1120,0.522,1121,3.256,1122,0.522,1123,1.738,1124,2.842,1125,0.522,1126,1.38,1127,1.38,1128,0.978,1129,2.345,1130,5.82,1131,1.38,1132,3.058,1133,1.738,1134,2.606,1135,0.978,1136,0.522,1137,0.978,1138,1.38,1139,3.058,1140,3.256,1141,1.738,1142,0.522,1143,0.978,1144,0.978,1145,1.738,1146,1.738,1147,3.058,1148,0.522,1149,1.38,1150,0.522,1151,5.076,1152,0.978,1153,0.522,1154,2.842,1155,0.522,1156,1.38,1157,1.738,1158,2.842,1159,0.522,1160,4.041,1161,1.738,1162,2.606,1163,0.978,1164,2.842,1165,3.438,1166,2.345,1167,0.522,1168,0.522,1169,0.522,1170,0.522,1171,2.842,1172,0.522,1173,0.978,1174,3.762,1175,0.522,1176,0.522,1177,1.38,1178,0.522,1179,0.522,1180,1.38,1181,0.522,1182,0.522,1183,0.522,1184,0.522,1185,3.438,1186,1.38,1187,4.686,1188,1.38,1189,0.522,1190,0.522,1191,0.522,1192,0.978,1193,1.38,1194,0.978,1195,3.256,1196,0.522,1197,0.978,1198,2.345,1199,0.522,1200,0.522,1201,1.38,1202,1.38,1203,1.38,1204,1.38,1205,0.522,1206,0.522,1207,2.057,1208,2.057,1209,2.345,1210,0.522,1211,0.522,1212,0.522,1213,0.978,1214,0.522,1215,1.38,1216,0.522,1217,0.522,1218,1.38,1219,0.522,1220,0.522,1221,0.522,1222,0.978,1223,0.522,1224,4.855,1225,2.842,1226,0.522,1227,2.345,1228,0.978,1229,0.522,1230,0.522,1231,0.978,1232,0.978,1233,1.738,1234,0.522,1235,0.522,1236,0.522,1237,0.522,1238,0.978,1239,1.38,1240,2.057,1241,0.522,1242,0.978,1243,0.522,1244,0.522,1245,2.345,1246,0.522,1247,1.738,1248,0.522,1249,3.256,1250,2.606,1251,1.738,1252,0.522,1253,2.057,1254,0.522,1255,0.978,1256,0.522,1257,0.522,1258,1.38,1259,1.38,1260,0.522,1261,0.522,1262,0.522,1263,0.522,1264,1.38,1265,1.38,1266,2.345,1267,0.522,1268,0.522,1269,0.978,1270,0.978,1271,2.057,1272,0.978,1273,0.522,1274,3.762,1275,0.978,1276,0.522,1277,0.522,1278,0.522,1279,0.522,1280,0.522,1281,0.522,1282,1.38,1283,0.522,1284,4.041,1285,0.522,1286,0.522,1287,0.522,1288,2.057,1289,2.057,1290,0.522,1291,0.522,1292,1.38,1293,0.522,1294,0.522,1295,1.738,1296,0.522,1297,0.978,1298,0.522,1299,0.522,1300,0.522,1301,0.522,1302,0.522,1303,0.522,1304,0.978,1305,0.978,1306,0.522,1307,1.38,1308,0.522,1309,0.522,1310,0.978,1311,0.522,1312,0.522,1313,0.522,1314,0.522,1315,0.978,1316,0.978,1317,0.978,1318,3.058,1319,0.978,1320,2.345,1321,0.522,1322,0.522,1323,0.978,1324,1.38,1325,1.38,1326,1.738,1327,1.738,1328,1.38,1329,1.738,1330,0.522,1331,2.057,1332,2.057,1333,1.181,1334,0.522,1335,0.978,1336,0.978,1337,2.057,1338,0.978,1339,1.738,1340,1.738,1341,0.978,1342,1.38,1343,3.906,1344,2.057,1345,0.522,1346,0.522,1347,0.522,1348,1.38,1349,1.38,1350,0.978,1351,0.978,1352,0.522,1353,0.522,1354,0.522,1355,0.522,1356,0.978,1357,0.522,1358,0.522,1359,0.522,1360,1.38,1361,0.522,1362,0.522,1363,0.978,1364,1.38,1365,0.522,1366,0.978,1367,0.522,1368,1.38,1369,0.522,1370,0.522,1371,0.522,1372,0.978,1373,0.978,1374,2.345,1375,4.686,1376,1.38,1377,0.978,1378,0.978,1379,0.978,1380,0.978,1381,1.738,1382,1.738,1383,0.978,1384,0.522,1385,0.522,1386,0.522,1387,0.522,1388,0.522,1389,2.606,1390,2.345,1391,0.978,1392,0.522,1393,0.522,1394,0.522,1395,0.522,1396,0.978,1397,0.522,1398,0.978,1399,0.522,1400,2.057,1401,2.842,1402,1.738,1403,0.522,1404,3.438,1405,0.522,1406,0.522,1407,0.522,1408,0.522,1409,0.522,1410,0.522,1411,0.978,1412,0.522,1413,0.522,1414,0.522,1415,0.978,1416,1.38,1417,1.738,1418,1.738,1419,0.978,1420,0.522,1421,0.522,1422,0.978,1423,0.522,1424,0.522,1425,0.522,1426,0.978,1427,0.522,1428,0.522,1429,1.38,1430,1.738,1431,0.522,1432,0.978,1433,0.522,1434,0.978,1435,0.522,1436,0.522,1437,1.38,1438,0.522,1439,0.522,1440,0.522,1441,0.522,1442,0.522,1443,0.978,1444,0.522,1445,0.522,1446,0.522,1447,0.522,1448,1.38,1449,0.522,1450,0.522,1451,0.522,1452,0.522,1453,0.522,1454,2.057,1455,0.522,1456,0.522,1457,2.842,1458,0.522,1459,0.522,1460,0.522,1461,1.738,1462,0.522,1463,0.522,1464,0.522,1465,0.522,1466,0.522,1467,0.522,1468,0.978,1469,2.606,1470,1.38,1471,0.522,1472,1.738,1473,0.522,1474,0.522,1475,1.38,1476,0.522,1477,0.522,1478,1.38,1479,0.522,1480,0.978,1481,0.837,1482,0.522,1483,0.522,1484,0.522,1485,0.522,1486,0.522,1487,0.522,1488,0.522,1489,0.522,1490,0.522,1491,0.978,1492,0.522,1493,0.522,1494,0.522,1495,0.522,1496,0.978,1497,0.978,1498,0.522,1499,0.522,1500,1.38,1501,0.522,1502,1.38,1503,0.522,1504,0.978,1505,1.487,1506,0.522,1507,0.978,1508,0.522,1509,1.38,1510,2.606,1511,0.522,1512,0.978,1513,0.837,1514,0.522,1515,0.837,1516,0.522,1517,0.522,1518,0.522,1519,0.522,1520,0.522,1521,0.978,1522,0.522,1523,0.978,1524,1.738,1525,0.522,1526,2.057,1527,0.522,1528,0.522,1529,0.522,1530,0.522,1531,0.522,1532,0.522,1533,0.978,1534,0.978,1535,0.978,1536,1.38,1537,0.522,1538,0.978,1539,0.978,1540,0.522,1541,1.38,1542,0.522,1543,0.978,1544,0.522,1545,0.978,1546,0.522,1547,1.38,1548,0.978,1549,0.522,1550,0.522,1551,0.978,1552,4.855,1553,0.978,1554,0.522,1555,2.057,1556,3.256,1557,1.38,1558,0.522,1559,0.522,1560,0.522,1561,1.738,1562,0.522,1563,0.522,1564,1.38,1565,0.978,1566,0.522,1567,0.522,1568,0.522,1569,1.738,1570,0.522,1571,0.522,1572,0.522,1573,0.522,1574,0.522,1575,1.738,1576,0.978,1577,0.978,1578,0.522,1579,0.522,1580,1.38,1581,0.522,1582,0.978,1583,1.38,1584,0.522,1585,0.978,1586,0.522,1587,0.522,1588,0.522,1589,0.522,1590,0.978,1591,1.38,1592,0.522,1593,0.522,1594,0.522,1595,0.978,1596,0.522,1597,0.978,1598,0.522,1599,0.522,1600,0.522,1601,0.522,1602,0.522,1603,1.38,1604,0.978,1605,0.522,1606,0.522,1607,1.738,1608,0.522,1609,1.38,1610,0.522,1611,0.522,1612,0.522,1613,0.978,1614,0.522,1615,0.522,1616,0.522,1617,1.38,1618,0.978,1619,0.978,1620,0.522,1621,2.606,1622,0.978,1623,1.38,1624,1.738,1625,0.522,1626,0.522,1627,0.978,1628,0.522,1629,1.38,1630,0.522,1631,0.978,1632,0.522,1633,0.522,1634,0.522,1635,0.522,1636,1.38,1637,0.522,1638,1.38,1639,0.978,1640,0.522,1641,0.978,1642,0.522,1643,0.522,1644,0.978,1645,0.978,1646,0.522,1647,0.522,1648,0.978,1649,0.522,1650,0.522,1651,0.522,1652,0.522,1653,0.522,1654,1.38,1655,0.522,1656,0.522,1657,0.522,1658,0.522,1659,0.522,1660,1.738,1661,1.38,1662,0.522,1663,0.522,1664,0.522,1665,0.522,1666,0.522,1667,0.978,1668,0.522,1669,0.522,1670,0.522,1671,0.522,1672,0.522,1673,0.522,1674,0.522,1675,0.522,1676,0.522,1677,0.522,1678,0.522,1679,0.522,1680,0.522,1681,0.522,1682,0.522,1683,1.738,1684,0.522,1685,0.978,1686,0.522,1687,0.522,1688,0.522,1689,0.522,1690,0.522,1691,0.522,1692,0.522,1693,0.522,1694,0.522,1695,0.522,1696,1.38,1697,0.522,1698,0.522,1699,0.522,1700,0.522,1701,0.978,1702,0.522,1703,0.522,1704,0.522,1705,0.522,1706,0.522,1707,0.522,1708,0.978,1709,0.978,1710,2.057,1711,1.38,1712,0.522,1713,0.978,1714,0.522,1715,0.522,1716,0.522,1717,0.522,1718,0.522,1719,1.38,1720,0.978,1721,0.522,1722,0.978,1723,0.978,1724,0.978,1725,0.522,1726,0.522,1727,0.522,1728,0.522,1729,0.522,1730,0.522,1731,0.978,1732,0.522,1733,0.522,1734,0.522,1735,0.978,1736,0.522,1737,0.522,1738,1.38,1739,0.522,1740,0.522,1741,0.522,1742,0.522,1743,0.522,1744,0.522,1745,0.522,1746,0.522,1747,0.522,1748,0.522,1749,0.522,1750,0.978,1751,0.522,1752,0.522,1753,0.522,1754,0.522,1755,0.522,1756,0.522,1757,0.522,1758,0.522,1759,0.522,1760,0.522,1761,0.522,1762,0.522,1763,0.522,1764,0.522,1765,0.522,1766,0.522,1767,0.522,1768,0.522,1769,0.522,1770,1.38,1771,0.978,1772,0.522,1773,0.522,1774,0.522,1775,0.522,1776,0.522,1777,0.522,1778,0.522,1779,0.522,1780,0.978,1781,1.38,1782,0.978,1783,0.522,1784,0.522,1785,0.522,1786,0.522,1787,0.522,1788,0.522,1789,0.522,1790,0.522,1791,0.978,1792,0.522,1793,0.522,1794,0.522,1795,0.522,1796,0.522,1797,0.522,1798,0.522,1799,0.522,1800,0.522,1801,0.522,1802,0.522,1803,0.522,1804,0.522,1805,0.522,1806,0.522,1807,0.522,1808,0.522,1809,0.522,1810,0.522,1811,0.522,1812,0.522]],["title/modules.html",[38,2.118]],["body/modules.html",[11,0.017,34,0.017,35,0.017,37,3.553,38,2.191,43,3.262,44,3.262,45,3.262,46,3.262,47,3.262,48,2.191,49,3.262,1333,6.273,1813,7.329,1814,7.329,1815,7.329]],["title/overview.html",[1816,4.26]],["body/overview.html",[2,1.29,11,0.02,24,3.376,34,0.014,35,0.014,37,5.083,38,1.608,39,2.166,40,3.234,41,3.234,42,3.234,43,4.419,44,4.29,45,4.29,46,4.29,47,4.29,48,3.049,49,4.29,50,2.441,51,1.608,52,1.705,67,1.705,116,3.376,133,3.234,135,3.234,136,3.648,157,2.722,182,1.16,233,3.376,252,3.234,253,3.234,348,3.376,359,3.234,360,3.234,428,2.875,516,3.376,526,3.234,528,3.234,607,3.376,611,3.234,612,3.234,665,3.234,666,3.234,667,3.234,745,3.376,772,3.234,774,3.234,1513,3.234,1816,3.234,1817,3.778,1818,3.778]],["title/properties.html",[184,1.582,853,2.617]],["body/properties.html",[11,0.02,34,0.018,35,0.018,184,1.999,413,2.835,933,4.751,934,4.751,935,4.751,936,4.751,937,4.751,938,4.751,939,3.831,946,4.751,1515,4.751,1819,5.551,1820,5.551]],["title/todo.html",[825,2.11,826,2.11,931,2.326]],["body/todo.html",[0,2.083,11,0.018,32,1.229,34,0.015,35,0.015,63,1.733,73,0.895,112,2.303,167,2.303,181,2.312,190,2.473,209,2.487,210,3.32,211,2.303,219,2.473,285,2.681,302,2.911,316,3.779,332,3.852,335,2.672,412,2.154,433,2.47,449,2.911,538,3.21,591,3.565,877,3.21,897,3.61,931,3.21,977,3.61,1481,5.707,1505,5.203,1821,4.218,1822,4.218,1823,4.218,1824,4.218,1825,4.218,1826,4.218,1827,4.218,1828,4.218,1829,6.833,1830,4.218,1831,4.218,1832,4.218,1833,7.285,1834,5.475,1835,5.475,1836,5.475,1837,6.434,1838,4.218,1839,4.218,1840,4.218,1841,4.218]],["title/miscellaneous/variables.html",[880,2.11,1842,3.76]],["body/miscellaneous/variables.html",[7,0.753,11,0.02,32,1.552,34,0.017,35,0.017,63,1.577,122,2.545,166,3.233,178,4.053,179,2.266,232,2.908,834,5.418,880,3.675,1842,4.558,1843,5.325,1844,5.325,1845,5.325,1846,5.325,1847,5.325,1848,5.325,1849,5.325,1850,5.325,1851,5.325]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":647,"title":{},"body":{"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1819,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":474,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PackService.html":{},"license.html":{}}}],["1.0.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":813,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["1000.52",{"_index":499,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["1000.52'})@isnumber()@ispositive",{"_index":453,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["11",{"_index":1297,"title":{},"body":{"license.html":{}}}],["110",{"_index":416,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["110})@isnumber()@ispositive",{"_index":385,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["12",{"_index":485,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12'})@length(13",{"_index":457,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123.123.123",{"_index":456,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["13",{"_index":1698,"title":{},"body":{"license.html":{}}}],["14",{"_index":487,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14)@isstring()@isnotempty",{"_index":458,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["15",{"_index":1512,"title":{},"body":{"license.html":{}}}],["16",{"_index":1513,"title":{},"body":{"license.html":{},"overview.html":{}}}],["1996",{"_index":1303,"title":{},"body":{"license.html":{}}}],["2",{"_index":1031,"title":{},"body":{"license.html":{}}}],["20",{"_index":1301,"title":{},"body":{"license.html":{}}}],["2000",{"_index":475,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2007",{"_index":949,"title":{},"body":{"license.html":{}}}],["2022",{"_index":427,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["2022'})@isstring()@isnotempty",{"_index":425,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["24h",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["28",{"_index":1679,"title":{},"body":{"license.html":{}}}],["29",{"_index":947,"title":{},"body":{"license.html":{}}}],["3",{"_index":628,"title":{},"body":{"injectables/PackService.html":{},"license.html":{}}}],["3.0.2",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["3.15.2",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1571,"title":{},"body":{"license.html":{}}}],["332a",{"_index":392,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["4",{"_index":495,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["4.0.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["42f4",{"_index":393,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["463",{"_index":498,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["463'})@isint()@ispositive",{"_index":476,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":1369,"title":{},"body":{"license.html":{}}}],["5.0.1",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":653,"title":{},"body":{"injectables/PackService.html":{},"license.html":{}}}],["6b",{"_index":1397,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1424,"title":{},"body":{"license.html":{}}}],["7",{"_index":428,"title":{},"body":{"classes/CreateCollectionDto.html":{},"license.html":{},"overview.html":{}}}],["7'})@isnumber()@isnotempty",{"_index":422,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["7.2.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1817,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["8f20f5f2",{"_index":391,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["9",{"_index":1818,"title":{},"body":{"overview.html":{}}}],["95",{"_index":417,"title":{},"body":{"classes/CreateCardDto.html":{},"injectables/PackService.html":{}}}],["95})@isnumber()@ispositive",{"_index":388,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["9d86",{"_index":394,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["_count",{"_index":823,"title":{},"body":{"injectables/UsersService.html":{}}}],["ability",{"_index":1477,"title":{},"body":{"license.html":{}}}],["above",{"_index":1547,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1330,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1760,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1790,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1063,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1576,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1575,"title":{},"body":{"license.html":{}}}],["access",{"_index":1052,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1647,"title":{},"body":{"license.html":{}}}],["accompanied",{"_index":1376,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1764,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1329,"title":{},"body":{"license.html":{}}}],["according",{"_index":1755,"title":{},"body":{"license.html":{}}}],["account",{"_index":722,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["account')@useguards(undefined)@apibearerauth()@delete('my",{"_index":721,"title":{},"body":{"controllers/UsersController.html":{}}}],["account')@useguards(undefined)@apibearerauth()@get('my",{"_index":729,"title":{},"body":{"controllers/UsersController.html":{}}}],["account')@useguards(undefined)@apibearerauth()@patch('my",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["account'})@apitags('user",{"_index":720,"title":{},"body":{"controllers/UsersController.html":{}}}],["account/album",{"_index":733,"title":{},"body":{"controllers/UsersController.html":{}}}],["achieve",{"_index":1769,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1262,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1627,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1584,"title":{},"body":{"license.html":{}}}],["activities",{"_index":1149,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1674,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1652,"title":{},"body":{"license.html":{}}}],["actually",{"_index":1447,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1120,"title":{},"body":{"license.html":{}}}],["add",{"_index":1505,"title":{},"body":{"license.html":{},"todo.html":{}}}],["added",{"_index":1328,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1343,"title":{},"body":{"license.html":{}}}],["address",{"_index":578,"title":{},"body":{"classes/LoginDto.html":{},"license.html":{}}}],["addressed",{"_index":1117,"title":{},"body":{"license.html":{}}}],["admin",{"_index":335,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["admin')@useguards(undefined)@apibearerauth()@delete('user/:id",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{}}}],["admin')@useguards(undefined)@apibearerauth()@get('user",{"_index":726,"title":{},"body":{"controllers/UsersController.html":{}}}],["admin')@useguards(undefined)@apibearerauth()@get('user/:id",{"_index":737,"title":{},"body":{"controllers/UsersController.html":{}}}],["admin'})@isstring()@isnotempty",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin.util",{"_index":277,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["admin.util.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["admin2022",{"_index":484,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["admin2022'})@isstring()@isnotempty",{"_index":472,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin@blue.com.br",{"_index":483,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["admin@blue.com.br'})@isstring()@isnotempty()@isemail",{"_index":460,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["adopted",{"_index":1300,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1485,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1751,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1486,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1696,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1608,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1256,"title":{},"body":{"license.html":{}}}],["against",{"_index":1317,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1360,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1691,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1737,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1638,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1059,"title":{},"body":{"license.html":{}}}],["album",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["album'})@apitags('user",{"_index":732,"title":{},"body":{"controllers/UsersController.html":{}}}],["alleging",{"_index":1616,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1087,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":965,"title":{},"body":{"license.html":{}}}],["allowing",{"_index":901,"title":{},"body":{"index.html":{}}}],["along",{"_index":1332,"title":{},"body":{"license.html":{}}}],["already",{"_index":809,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["alternative",{"_index":1393,"title":{},"body":{"license.html":{}}}],["although",{"_index":1055,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":1578,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["anti",{"_index":1287,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1340,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1133,"title":{},"body":{"license.html":{}}}],["api",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":334,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apioperations",{"_index":1837,"title":{},"body":{"todo.html":{}}}],["apiproperty",{"_index":406,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":381,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('card",{"_index":238,"title":{},"body":{"controllers/CardController.html":{}}}],["apitags('collection",{"_index":351,"title":{},"body":{"controllers/CollectionController.html":{}}}],["apitags('create",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('deck",{"_index":519,"title":{},"body":{"controllers/DeckController.html":{}}}],["apitags('pack",{"_index":608,"title":{},"body":{"controllers/PackController.html":{}}}],["apitags('status",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":678,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":683,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1139,"title":{},"body":{"license.html":{}}}],["application",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":1807,"title":{},"body":{"license.html":{}}}],["applied",{"_index":1094,"title":{},"body":{"license.html":{}}}],["applies",{"_index":986,"title":{},"body":{"license.html":{}}}],["apply",{"_index":991,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1164,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1322,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1759,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":1065,"title":{},"body":{"license.html":{}}}],["arise",{"_index":1073,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1741,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1648,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1661,"title":{},"body":{"license.html":{}}}],["array(n",{"_index":660,"title":{},"body":{"injectables/PackService.html":{}}}],["article",{"_index":1296,"title":{},"body":{"license.html":{}}}],["asking",{"_index":1008,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1030,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1598,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1234,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1730,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1763,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1535,"title":{},"body":{"license.html":{}}}],["assures",{"_index":1097,"title":{},"body":{"license.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["attach",{"_index":1771,"title":{},"body":{"license.html":{}}}],["attack",{"_index":383,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["attempt",{"_index":1550,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":1047,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1516,"title":{},"body":{"license.html":{}}}],["autenticado",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":82,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":581,"title":{},"body":{"classes/LoginDto.html":{}}}],["authguard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"todo.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1515,"title":{},"body":{"license.html":{},"properties.html":{}}}],["authored",{"_index":932,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1459,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1506,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1622,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1665,"title":{},"body":{"license.html":{}}}],["authors",{"_index":990,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":116,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":1588,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1247,"title":{},"body":{"license.html":{}}}],["available",{"_index":1147,"title":{},"body":{"license.html":{}}}],["avatar",{"_index":462,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["avoid",{"_index":1091,"title":{},"body":{"license.html":{}}}],["await",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["away",{"_index":974,"title":{},"body":{"license.html":{}}}],["b",{"_index":1209,"title":{},"body":{"license.html":{}}}],["badrequestexception",{"_index":271,"title":{},"body":{"injectables/CardService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('this",{"_index":806,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('your",{"_index":543,"title":{},"body":{"injectables/DeckService.html":{}}}],["balance",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":1129,"title":{},"body":{"license.html":{}}}],["baseurl",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["basic",{"_index":1248,"title":{},"body":{"license.html":{}}}],["battle",{"_index":1823,"title":{},"body":{"todo.html":{}}}],["bcrypt",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":812,"title":{},"body":{"injectables/UsersService.html":{}}}],["behalf",{"_index":1276,"title":{},"body":{"license.html":{}}}],["being",{"_index":1422,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1658,"title":{},"body":{"license.html":{}}}],["belongs",{"_index":390,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["below",{"_index":923,"title":{},"body":{"index.html":{},"license.html":{}}}],["benefit",{"_index":1651,"title":{},"body":{"license.html":{}}}],["best",{"_index":434,"title":{},"body":{"classes/CreateDeckDto.html":{},"license.html":{}}}],["best'})@isuuid",{"_index":435,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["between",{"_index":1244,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":1362,"title":{},"body":{"license.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["boolean",{"_index":465,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1040,"title":{},"body":{"license.html":{}}}],["box",{"_index":1797,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1815,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1813,"title":{},"body":{"modules.html":{}}}],["built",{"_index":925,"title":{},"body":{"index.html":{}}}],["business",{"_index":1671,"title":{},"body":{"license.html":{}}}],["c",{"_index":951,"title":{},"body":{"license.html":{}}}],["called",{"_index":1127,"title":{},"body":{"license.html":{}}}],["car",{"_index":415,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["car'})@isstring",{"_index":404,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card",{"_index":181,"title":{"classes/Card.html":{}},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["card.controller",{"_index":256,"title":{},"body":{"modules/CardModule.html":{},"modules/PackModule.html":{}}}],["card.controller.ts",{"_index":602,"title":{},"body":{"controllers/PackController.html":{},"coverage.html":{}}}],["card.controller.ts:20",{"_index":605,"title":{},"body":{"controllers/PackController.html":{}}}],["card.dto",{"_index":236,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/UpdateCardDto.html":{}}}],["card.dto.ts",{"_index":380,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["card.dto.ts:17",{"_index":399,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:24",{"_index":405,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:32",{"_index":386,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:40",{"_index":389,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:47",{"_index":401,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:56",{"_index":396,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.entity.ts",{"_index":593,"title":{},"body":{"classes/Pack.html":{},"coverage.html":{}}}],["card.entity.ts:2",{"_index":597,"title":{},"body":{"classes/Pack.html":{}}}],["card.entity.ts:4",{"_index":599,"title":{},"body":{"classes/Pack.html":{}}}],["card.entity.ts:5",{"_index":598,"title":{},"body":{"classes/Pack.html":{}}}],["card.entity.ts:7",{"_index":596,"title":{},"body":{"classes/Pack.html":{}}}],["card.entity.ts:8",{"_index":600,"title":{},"body":{"classes/Pack.html":{}}}],["card.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":614,"title":{},"body":{"modules/PackModule.html":{}}}],["card.rarity",{"_index":642,"title":{},"body":{"injectables/PackService.html":{}}}],["card.service",{"_index":234,"title":{},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{}}}],["card.service.ts",{"_index":615,"title":{},"body":{"injectables/PackService.html":{},"coverage.html":{}}}],["card.service.ts:10",{"_index":622,"title":{},"body":{"injectables/PackService.html":{}}}],["card.service.ts:44",{"_index":625,"title":{},"body":{"injectables/PackService.html":{}}}],["card.service.ts:7",{"_index":618,"title":{},"body":{"injectables/PackService.html":{}}}],["card.service.ts:88",{"_index":621,"title":{},"body":{"injectables/PackService.html":{}}}],["card/card.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["card/dto/create",{"_index":439,"title":{},"body":{"classes/CreatePackDto.html":{},"coverage.html":{}}}],["card/entities/user",{"_index":592,"title":{},"body":{"classes/Pack.html":{},"coverage.html":{}}}],["card/user",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"coverage.html":{}}}],["cardattack",{"_index":185,"title":{},"body":{"classes/Card.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"injectables/UsersService.html":{}}}],["cardcontroller",{"_index":207,"title":{"controllers/CardController.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"coverage.html":{}}}],["carddef",{"_index":186,"title":{},"body":{"classes/Card.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"injectables/UsersService.html":{}}}],["cardgenaretor",{"_index":616,"title":{},"body":{"injectables/PackService.html":{}}}],["cardgenaretor(list",{"_index":619,"title":{},"body":{"injectables/PackService.html":{}}}],["cardmodule",{"_index":44,"title":{"modules/CardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardnumber",{"_index":323,"title":{},"body":{"classes/Collection.html":{},"injectables/CollectionService.html":{},"classes/CreateCollectionDto.html":{}}}],["cards",{"_index":316,"title":{},"body":{"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/PackController.html":{},"todo.html":{}}}],["cards'})@useguards(undefined)@apibearerauth()@post",{"_index":604,"title":{},"body":{"controllers/PackController.html":{}}}],["cardservice",{"_index":233,"title":{"injectables/CardService.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"coverage.html":{},"overview.html":{}}}],["carry",{"_index":1335,"title":{},"body":{"license.html":{}}}],["case",{"_index":1192,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1443,"title":{},"body":{"license.html":{}}}],["catch(handleerror",{"_index":298,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["cause",{"_index":1366,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1554,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1011,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1566,"title":{},"body":{"license.html":{}}}],["challenging",{"_index":904,"title":{},"body":{"index.html":{}}}],["change",{"_index":977,"title":{},"body":{"license.html":{},"todo.html":{}}}],["changed",{"_index":1045,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":827,"title":{"changelog.html":{}},"body":{"index.html":{}}}],["changing",{"_index":964,"title":{},"body":{"license.html":{}}}],["character",{"_index":492,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characterized",{"_index":1474,"title":{},"body":{"license.html":{}}}],["characters",{"_index":496,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":995,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1713,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1718,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1281,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1288,"title":{},"body":{"license.html":{}}}],["civil",{"_index":1762,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1613,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1624,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":182,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cleaned",{"_index":553,"title":{},"body":{"injectables/DeckService.html":{}}}],["clear",{"_index":1407,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":1037,"title":{},"body":{"license.html":{}}}],["closely",{"_index":1758,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":252,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_imports",{"_index":254,"title":{},"body":{"modules/CardModule.html":{}}}],["cluster_cardmodule_providers",{"_index":253,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_collectionmodule",{"_index":359,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_collectionmodule_imports",{"_index":361,"title":{},"body":{"modules/CollectionModule.html":{}}}],["cluster_collectionmodule_providers",{"_index":360,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_deckmodule",{"_index":526,"title":{},"body":{"modules/DeckModule.html":{},"overview.html":{}}}],["cluster_deckmodule_imports",{"_index":527,"title":{},"body":{"modules/DeckModule.html":{}}}],["cluster_deckmodule_providers",{"_index":528,"title":{},"body":{"modules/DeckModule.html":{},"overview.html":{}}}],["cluster_packmodule",{"_index":611,"title":{},"body":{"modules/PackModule.html":{},"overview.html":{}}}],["cluster_packmodule_imports",{"_index":613,"title":{},"body":{"modules/PackModule.html":{}}}],["cluster_packmodule_providers",{"_index":612,"title":{},"body":{"modules/PackModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":665,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":666,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":667,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":772,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":773,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":774,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":998,"title":{},"body":{"license.html":{}}}],["collect",{"_index":1693,"title":{},"body":{"license.html":{}}}],["collection",{"_index":285,"title":{"classes/Collection.html":{}},"body":{"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreatePackDto.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"todo.html":{}}}],["collection'})@useguards(undefined)@apibearerauth()@post",{"_index":336,"title":{},"body":{"controllers/CollectionController.html":{}}}],["collection.controller",{"_index":363,"title":{},"body":{"modules/CollectionModule.html":{}}}],["collection.dto",{"_index":350,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/UpdateCollectionDto.html":{}}}],["collection.dto.ts",{"_index":421,"title":{},"body":{"classes/CreateCollectionDto.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["collection.dto.ts:11",{"_index":426,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["collection.dto.ts:19",{"_index":423,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["collection.map(function",{"_index":641,"title":{},"body":{"injectables/PackService.html":{}}}],["collection.service",{"_index":349,"title":{},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{}}}],["collection/collection.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["collectioncontroller",{"_index":330,"title":{"controllers/CollectionController.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"coverage.html":{}}}],["collectionid",{"_index":187,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{},"classes/CreatePackDto.html":{},"injectables/PackService.html":{}}}],["collectionlimit",{"_index":258,"title":{},"body":{"injectables/CardService.html":{}}}],["collectionlimit(dto",{"_index":261,"title":{},"body":{"injectables/CardService.html":{}}}],["collectionmodule",{"_index":45,"title":{"modules/CollectionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionModule.html":{},"modules.html":{},"overview.html":{}}}],["collections",{"_index":354,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{}}}],["collections'})@get",{"_index":341,"title":{},"body":{"controllers/CollectionController.html":{}}}],["collectionservice",{"_index":348,"title":{"injectables/CollectionService.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"coverage.html":{},"overview.html":{}}}],["com",{"_index":657,"title":{},"body":{"injectables/PackService.html":{}}}],["combination",{"_index":1700,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1697,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1356,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1341,"title":{},"body":{"license.html":{}}}],["commands",{"_index":1177,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1452,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1639,"title":{},"body":{"license.html":{}}}],["common",{"_index":418,"title":{},"body":{"classes/CreateCardDto.html":{},"injectables/PackService.html":{},"license.html":{}}}],["common'})@isstring",{"_index":400,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["common.length",{"_index":646,"title":{},"body":{"injectables/PackService.html":{}}}],["common.push(card",{"_index":643,"title":{},"body":{"injectables/PackService.html":{}}}],["communication",{"_index":1242,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1351,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1361,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1676,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1221,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1594,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1273,"title":{},"body":{"license.html":{}}}],["compodocs",{"_index":930,"title":{},"body":{"index.html":{}}}],["component",{"_index":1208,"title":{},"body":{"license.html":{}}}],["computer",{"_index":1143,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1090,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1699,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1706,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1670,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1102,"title":{},"body":{"license.html":{}}}],["connect",{"_index":293,"title":{},"body":{"injectables/CardService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{}}}],["connection",{"_index":1660,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1580,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1740,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1805,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1537,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1631,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":317,"title":{},"body":{"injectables/CardService.html":{}}}],["console.log(limit.cards.length",{"_index":318,"title":{},"body":{"injectables/CardService.html":{}}}],["console.log(pack",{"_index":632,"title":{},"body":{"injectables/PackService.html":{}}}],["conspicuously",{"_index":1321,"title":{},"body":{"license.html":{}}}],["const",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1084,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1261,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["construed",{"_index":1681,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":1430,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1783,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1677,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1518,"title":{},"body":{"license.html":{}}}],["contains",{"_index":494,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["content",{"_index":1260,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1635,"title":{},"body":{"license.html":{}}}],["context",{"_index":1214,"title":{},"body":{"license.html":{}}}],["continue",{"_index":1480,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1464,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1534,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1687,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":978,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1621,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1623,"title":{},"body":{"license.html":{}}}],["control",{"_index":1227,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1626,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"todo.html":{}}}],["controller('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('card",{"_index":239,"title":{},"body":{"controllers/CardController.html":{}}}],["controller('collection",{"_index":352,"title":{},"body":{"controllers/CollectionController.html":{}}}],["controller('deck",{"_index":520,"title":{},"body":{"controllers/DeckController.html":{}}}],["controller('pack",{"_index":609,"title":{},"body":{"controllers/PackController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convenient",{"_index":1167,"title":{},"body":{"license.html":{}}}],["convey",{"_index":1151,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1663,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1475,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1160,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1533,"title":{},"body":{"license.html":{}}}],["copies",{"_index":962,"title":{},"body":{"license.html":{}}}],["copy",{"_index":959,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1103,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":967,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":950,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1113,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1278,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1734,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1224,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1391,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1614,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1148,"title":{},"body":{"license.html":{}}}],["country",{"_index":1654,"title":{},"body":{"license.html":{}}}],["course",{"_index":1795,"title":{},"body":{"license.html":{}}}],["court",{"_index":1686,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1757,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1642,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":828,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1130,"title":{},"body":{"license.html":{}}}],["cpf",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["create",{"_index":209,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["create(@body",{"_index":240,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":714,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":212,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["createcarddto",{"_index":213,"title":{"classes/CreateCardDto.html":{}},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["createcollectiondto",{"_index":333,"title":{"classes/CreateCollectionDto.html":{}},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCollectionDto.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["createdat",{"_index":188,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{}}}],["createdeckdto",{"_index":429,"title":{"classes/CreateDeckDto.html":{}},"body":{"classes/CreateDeckDto.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["createpack",{"_index":617,"title":{},"body":{"injectables/PackService.html":{}}}],["createpack(collection",{"_index":623,"title":{},"body":{"injectables/PackService.html":{}}}],["createpackdto",{"_index":437,"title":{"classes/CreatePackDto.html":{}},"body":{"classes/CreatePackDto.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":445,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["criterion",{"_index":1183,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1612,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cure",{"_index":1570,"title":{},"body":{"license.html":{}}}],["currency",{"_index":896,"title":{},"body":{"index.html":{}}}],["customarily",{"_index":1379,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1386,"title":{},"body":{"license.html":{}}}],["d",{"_index":1349,"title":{},"body":{"license.html":{}}}],["dados",{"_index":589,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["damages",{"_index":1738,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1093,"title":{},"body":{"license.html":{}}}],["daniel",{"_index":933,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":267,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["data.rarity",{"_index":295,"title":{},"body":{"injectables/CardService.html":{}}}],["datatreatment",{"_index":259,"title":{},"body":{"injectables/CardService.html":{}}}],["datatreatment(data",{"_index":265,"title":{},"body":{"injectables/CardService.html":{}}}],["date",{"_index":197,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{},"license.html":{}}}],["days",{"_index":1565,"title":{},"body":{"license.html":{}}}],["de",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["december",{"_index":1302,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1715,"title":{},"body":{"license.html":{}}}],["deck",{"_index":433,"title":{"classes/Deck.html":{}},"body":{"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"todo.html":{}}}],["deck.controller",{"_index":530,"title":{},"body":{"modules/DeckModule.html":{}}}],["deck.dto",{"_index":518,"title":{},"body":{"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/UpdateDeckDto.html":{}}}],["deck.dto.ts",{"_index":431,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["deck.dto.ts:10",{"_index":436,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["deck.service",{"_index":517,"title":{},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{}}}],["deck/deck.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["deckcontroller",{"_index":507,"title":{"controllers/DeckController.html":{}},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{},"coverage.html":{}}}],["decklimit(3",{"_index":544,"title":{},"body":{"injectables/DeckService.html":{}}}],["decklimit(limitnumber",{"_index":539,"title":{},"body":{"injectables/DeckService.html":{}}}],["deckmodule",{"_index":46,"title":{"modules/DeckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeckModule.html":{},"modules.html":{},"overview.html":{}}}],["deckservice",{"_index":516,"title":{"injectables/DeckService.html":{}},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"coverage.html":{},"overview.html":{}}}],["declining",{"_index":1525,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["deemed",{"_index":1290,"title":{},"body":{"license.html":{}}}],["default",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["defective",{"_index":1729,"title":{},"body":{"license.html":{}}}],["defense",{"_index":387,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["defenses",{"_index":1684,"title":{},"body":{"license.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":1232,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1107,"title":{},"body":{"license.html":{}}}],["delete",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":249,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{}}}],["delete('my",{"_index":769,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('user/:id",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@loggeduser",{"_index":770,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param('id",{"_index":250,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{}}}],["delete(id",{"_index":217,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{}}}],["delete(user",{"_index":718,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":308,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["deletemyacc",{"_index":778,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletemyacc(loggeduser",{"_index":782,"title":{},"body":{"injectables/UsersService.html":{}}}],["denied",{"_index":821,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["denominated",{"_index":1640,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1051,"title":{},"body":{"license.html":{}}}],["denying",{"_index":1007,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":905,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1649,"title":{},"body":{"license.html":{}}}],["description",{"_index":413,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"properties.html":{}}}],["designated",{"_index":1399,"title":{},"body":{"license.html":{}}}],["designed",{"_index":972,"title":{},"body":{"license.html":{}}}],["detail",{"_index":1705,"title":{},"body":{"license.html":{}}}],["details",{"_index":1782,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1793,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1441,"title":{},"body":{"license.html":{}}}],["develop",{"_index":1766,"title":{},"body":{"license.html":{}}}],["developers",{"_index":1026,"title":{},"body":{"license.html":{}}}],["development",{"_index":916,"title":{},"body":{"index.html":{},"license.html":{}}}],["devices",{"_index":1050,"title":{},"body":{"license.html":{}}}],["differ",{"_index":1704,"title":{},"body":{"license.html":{}}}],["different",{"_index":1402,"title":{},"body":{"license.html":{}}}],["differently",{"_index":1511,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1277,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1408,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1135,"title":{},"body":{"license.html":{}}}],["disclaim",{"_index":1313,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1719,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1508,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1667,"title":{},"body":{"license.html":{}}}],["display",{"_index":1350,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1517,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1163,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1707,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":960,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1778,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1672,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1104,"title":{},"body":{"license.html":{}}}],["docs",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["document",{"_index":963,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":829,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":1492,"title":{},"body":{"license.html":{}}}],["doesn`t",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["domains",{"_index":1075,"title":{},"body":{"license.html":{}}}],["done",{"_index":1830,"title":{},"body":{"todo.html":{}}}],["doubtful",{"_index":1442,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1590,"title":{},"body":{"license.html":{}}}],["dto",{"_index":216,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["dto.balance",{"_index":816,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.cardattack",{"_index":290,"title":{},"body":{"injectables/CardService.html":{}}}],["dto.carddef",{"_index":291,"title":{},"body":{"injectables/CardService.html":{}}}],["dto.cardnumber",{"_index":372,"title":{},"body":{"injectables/CollectionService.html":{}}}],["dto.collectionid",{"_index":294,"title":{},"body":{"injectables/CardService.html":{},"injectables/PackService.html":{}}}],["dto.cpf",{"_index":803,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":800,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.imageurl",{"_index":814,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.isadmin",{"_index":817,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.name",{"_index":288,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["dto.password",{"_index":824,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.ranking",{"_index":815,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.rarity",{"_index":292,"title":{},"body":{"injectables/CardService.html":{}}}],["dto.type",{"_index":289,"title":{},"body":{"injectables/CardService.html":{}}}],["dto.utcid",{"_index":546,"title":{},"body":{"injectables/DeckService.html":{}}}],["dto/create",{"_index":235,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":237,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["durable",{"_index":1378,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1440,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":1236,"title":{},"body":{"license.html":{}}}],["d{3}\\x2e\\d{3}\\x2e\\d{3}\\x2d\\d{2",{"_index":489,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["e",{"_index":807,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["each",{"_index":1115,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1128,"title":{},"body":{"license.html":{}}}],["edit",{"_index":228,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["effect",{"_index":1754,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1311,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1291,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":1095,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1606,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1784,"title":{},"body":{"license.html":{}}}],["element",{"_index":402,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["email",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["embodied",{"_index":1373,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1798,"title":{},"body":{"license.html":{}}}],["enable",{"_index":1211,"title":{},"body":{"license.html":{}}}],["enables",{"_index":1153,"title":{},"body":{"license.html":{}}}],["enableshutdownhooks",{"_index":673,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":675,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":1765,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":1822,"title":{},"body":{"todo.html":{}}}],["endpoints",{"_index":1834,"title":{},"body":{"todo.html":{}}}],["enforce",{"_index":1641,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1316,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":1415,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1678,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1339,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1695,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1595,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1264,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":1048,"title":{},"body":{"license.html":{}}}],["error",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":274,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["error.util.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["essential",{"_index":1215,"title":{},"body":{"license.html":{}}}],["even",{"_index":1750,"title":{},"body":{"license.html":{}}}],["event",{"_index":1736,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":957,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1125,"title":{},"body":{"license.html":{}}}],["example",{"_index":384,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"license.html":{}}}],["except",{"_index":1141,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":1497,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1428,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1682,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1774,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1632,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1270,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1688,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1202,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1462,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1142,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise",{"_index":1607,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1312,"title":{},"body":{"license.html":{}}}],["exist",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1450,"title":{},"body":{"license.html":{}}}],["expects",{"_index":1449,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["explains",{"_index":1038,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":1255,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":669,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":859,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1721,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1549,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1078,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1666,"title":{},"body":{"license.html":{}}}],["extends",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{}}}],["extensions",{"_index":1355,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1166,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":1531,"title":{},"body":{"license.html":{}}}],["f760feb22a77",{"_index":419,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["f760feb22a77'})@isuuid()@isstring()@isnotempty",{"_index":395,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["face",{"_index":903,"title":{},"body":{"index.html":{}}}],["facilities",{"_index":1272,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1562,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1748,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1263,"title":{},"body":{"license.html":{}}}],["false",{"_index":321,"title":{},"body":{"injectables/CardService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["family",{"_index":1435,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":1122,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1445,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1170,"title":{},"body":{"license.html":{}}}],["fee",{"_index":1018,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":1233,"title":{},"body":{"license.html":{}}}],["fill(0",{"_index":661,"title":{},"body":{"injectables/PackService.html":{}}}],["finally",{"_index":1082,"title":{},"body":{"license.html":{}}}],["find",{"_index":1411,"title":{},"body":{"license.html":{}}}],["findall",{"_index":332,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["findall(@loggeduser",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(loggeduser",{"_index":784,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(user",{"_index":724,"title":{},"body":{"controllers/UsersController.html":{}}}],["findmany",{"_index":819,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmyacc",{"_index":712,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findmyacc(@loggeduser",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["findmyacc(loggeduser",{"_index":786,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmyacc(user",{"_index":728,"title":{},"body":{"controllers/UsersController.html":{}}}],["findmyalbum",{"_index":713,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findmyalbum(@loggeduser",{"_index":764,"title":{},"body":{"controllers/UsersController.html":{}}}],["findmyalbum(loggeduser",{"_index":788,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmyalbum(user",{"_index":731,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone",{"_index":210,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["findone(@loggeduser",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(@param('id",{"_index":244,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{}}}],["findone(id",{"_index":221,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["findone(user",{"_index":735,"title":{},"body":{"controllers/UsersController.html":{}}}],["findonecollection",{"_index":1828,"title":{},"body":{"todo.html":{}}}],["findunique",{"_index":300,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":491,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["fitness",{"_index":1724,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1836,"title":{},"body":{"todo.html":{}}}],["fixed",{"_index":1377,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1243,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1106,"title":{},"body":{"license.html":{}}}],["following",{"_index":1636,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1310,"title":{},"body":{"license.html":{}}}],["force",{"_index":1267,"title":{},"body":{"license.html":{}}}],["form",{"_index":1185,"title":{},"body":{"license.html":{}}}],["format",{"_index":1490,"title":{},"body":{"license.html":{}}}],["forms",{"_index":1367,"title":{},"body":{"license.html":{}}}],["found",{"_index":906,"title":{},"body":{"index.html":{},"license.html":{}}}],["found.util",{"_index":280,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["found.util.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["foundation",{"_index":954,"title":{},"body":{"license.html":{}}}],["free",{"_index":952,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":975,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":1022,"title":{},"body":{"license.html":{}}}],["fulfilling",{"_index":1294,"title":{},"body":{"license.html":{}}}],["full",{"_index":1777,"title":{},"body":{"license.html":{}}}],["function",{"_index":538,"title":{},"body":{"injectables/DeckService.html":{},"coverage.html":{},"todo.html":{}}}],["functioning",{"_index":1465,"title":{},"body":{"license.html":{}}}],["functions",{"_index":881,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":1057,"title":{},"body":{"license.html":{}}}],["further",{"_index":1401,"title":{},"body":{"license.html":{}}}],["future",{"_index":1080,"title":{},"body":{"license.html":{}}}],["game",{"_index":895,"title":{},"body":{"index.html":{}}}],["general",{"_index":944,"title":{},"body":{"license.html":{}}}],["generally",{"_index":1230,"title":{},"body":{"license.html":{}}}],["generate",{"_index":603,"title":{},"body":{"controllers/PackController.html":{},"license.html":{}}}],["gerado",{"_index":585,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":243,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{}}}],["get(':id')@apioperation({summary",{"_index":222,"title":{},"body":{"controllers/CardController.html":{}}}],["get('my",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user/:id",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":825,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["give",{"_index":1331,"title":{},"body":{"license.html":{}}}],["given",{"_index":1259,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1346,"title":{},"body":{"license.html":{}}}],["giving",{"_index":1033,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":943,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1500,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1027,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1526,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1250,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1583,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":1017,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1767,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":980,"title":{},"body":{"license.html":{}}}],["gui",{"_index":1796,"title":{},"body":{"license.html":{}}}],["handleerror",{"_index":272,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["having",{"_index":1269,"title":{},"body":{"license.html":{}}}],["here",{"_index":443,"title":{},"body":{"classes/CreatePackDto.html":{},"index.html":{}}}],["hereafter",{"_index":1628,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":907,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1556,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1507,"title":{},"body":{"license.html":{}}}],["hope",{"_index":1779,"title":{},"body":{"license.html":{}}}],["hosts",{"_index":1412,"title":{},"body":{"license.html":{}}}],["household",{"_index":1436,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://fsf.org",{"_index":956,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":1802,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1811,"title":{},"body":{"license.html":{}}}],["httpstatus",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["huayra",{"_index":414,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["huayra'})@isstring",{"_index":398,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["hypothetical",{"_index":1794,"title":{},"body":{"license.html":{}}}],["id",{"_index":189,"title":{},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/Pack.html":{},"injectables/PackService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apitags('user",{"_index":736,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@get(':id",{"_index":343,"title":{},"body":{"controllers/CollectionController.html":{}}}],["id'})@useguards(undefined)@apibearerauth()@delete(':id",{"_index":338,"title":{},"body":{"controllers/CollectionController.html":{}}}],["id'})@useguards(undefined)@apibearerauth()@patch(':id",{"_index":346,"title":{},"body":{"controllers/CollectionController.html":{}}}],["identifiable",{"_index":1656,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imageurl",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["implement",{"_index":1212,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1213,"title":{},"body":{"license.html":{}}}],["implements",{"_index":680,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1683,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["importing",{"_index":1620,"title":{},"body":{"license.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["impose",{"_index":1536,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1685,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1742,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1745,"title":{},"body":{"license.html":{}}}],["inc",{"_index":955,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1739,"title":{},"body":{"license.html":{}}}],["include",{"_index":301,"title":{},"body":{"injectables/CardService.html":{},"license.html":{}}}],["included",{"_index":1204,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1146,"title":{},"body":{"license.html":{}}}],["including",{"_index":1225,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1365,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1058,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1803,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1439,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1532,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1353,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1587,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1546,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1363,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1067,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1453,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":676,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inform",{"_index":1420,"title":{},"body":{"license.html":{}}}],["information",{"_index":1457,"title":{},"body":{"license.html":{}}}],["infringe",{"_index":1585,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1617,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1138,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1610,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":1840,"title":{},"body":{"todo.html":{}}}],["inside",{"_index":1054,"title":{},"body":{"license.html":{}}}],["install",{"_index":1053,"title":{},"body":{"license.html":{}}}],["installation",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{}}}],["installed",{"_index":1478,"title":{},"body":{"license.html":{}}}],["installrunning",{"_index":915,"title":{},"body":{"index.html":{}}}],["instead",{"_index":912,"title":{},"body":{"index.html":{},"license.html":{}}}],["intact",{"_index":1325,"title":{},"body":{"license.html":{}}}],["intended",{"_index":979,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1314,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1156,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1161,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1380,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1604,"title":{},"body":{"license.html":{}}}],["interface",{"_index":1162,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":1193,"title":{},"body":{"license.html":{}}}],["interfered",{"_index":1467,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":1753,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1223,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1241,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["invalidate",{"_index":1347,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":1252,"title":{},"body":{"license.html":{}}}],["isadmin",{"_index":275,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isadmin(data",{"_index":889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isadmin(loggeduser",{"_index":281,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":478,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":479,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":480,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":407,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnumber",{"_index":408,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":409,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring",{"_index":410,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":580,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":577,"title":{},"body":{"classes/LoginDto.html":{}}}],["isurl",{"_index":481,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":411,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":441,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["item",{"_index":1181,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1483,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":926,"title":{},"body":{"index.html":{}}}],["june",{"_index":948,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":136,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":1324,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1216,"title":{},"body":{"license.html":{}}}],["key",{"_index":1493,"title":{},"body":{"license.html":{}}}],["keys",{"_index":1460,"title":{},"body":{"license.html":{}}}],["kind",{"_index":1152,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":968,"title":{},"body":{"license.html":{}}}],["know",{"_index":1000,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1644,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1653,"title":{},"body":{"license.html":{}}}],["language",{"_index":1197,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1357,"title":{},"body":{"license.html":{}}}],["later",{"_index":1710,"title":{},"body":{"license.html":{}}}],["law",{"_index":1140,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1110,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1615,"title":{},"body":{"license.html":{}}}],["leg",{"_index":650,"title":{},"body":{"injectables/PackService.html":{}}}],["legal",{"_index":1034,"title":{},"body":{"license.html":{}}}],["legendary",{"_index":640,"title":{},"body":{"injectables/PackService.html":{}}}],["legendary.length",{"_index":649,"title":{},"body":{"injectables/PackService.html":{}}}],["legendary.push(card",{"_index":645,"title":{},"body":{"injectables/PackService.html":{}}}],["length",{"_index":482,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(13",{"_index":486,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["leonardo",{"_index":935,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lesser",{"_index":1808,"title":{},"body":{"license.html":{}}}],["level",{"_index":382,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["lgpl.html",{"_index":1812,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1510,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1137,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1201,"title":{},"body":{"license.html":{}}}],["library",{"_index":1429,"title":{},"body":{"license.html":{}}}],["license",{"_index":939,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":942,"title":{},"body":{"index.html":{},"license.html":{}}}],["licensee",{"_index":1116,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1118,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":970,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1589,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1524,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1581,"title":{},"body":{"license.html":{}}}],["limit",{"_index":282,"title":{},"body":{"injectables/CardService.html":{},"injectables/DeckService.html":{},"license.html":{}}}],["limit.cardnumber",{"_index":320,"title":{},"body":{"injectables/CardService.html":{}}}],["limit.cards.length",{"_index":319,"title":{},"body":{"injectables/CardService.html":{}}}],["limit.length",{"_index":541,"title":{},"body":{"injectables/DeckService.html":{}}}],["limitation",{"_index":1735,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1722,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1509,"title":{},"body":{"license.html":{}}}],["limitnumber",{"_index":542,"title":{},"body":{"injectables/DeckService.html":{}}}],["line",{"_index":1775,"title":{},"body":{"license.html":{}}}],["link",{"_index":924,"title":{},"body":{"index.html":{},"license.html":{}}}],["link.com/image.jpg",{"_index":497,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["link.com/image.jpg'})@isstring()@isurl",{"_index":463,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["linked",{"_index":1237,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1806,"title":{},"body":{"license.html":{}}}],["list",{"_index":340,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["list.foreach((card",{"_index":629,"title":{},"body":{"injectables/PackService.html":{}}}],["list.length",{"_index":664,"title":{},"body":{"injectables/PackService.html":{}}}],["list[math.floor(math.random",{"_index":663,"title":{},"body":{"injectables/PackService.html":{}}}],["literal",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1611,"title":{},"body":{"license.html":{}}}],["local",{"_index":868,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["locally",{"_index":911,"title":{},"body":{"index.html":{}}}],["logged",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeckController.html":{},"controllers/UsersController.html":{}}}],["loggeduser",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggeduser.id",{"_index":636,"title":{},"body":{"injectables/PackService.html":{}}}],["loggeduserid",{"_index":533,"title":{},"body":{"injectables/DeckService.html":{}}}],["login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":89,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":118,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["long",{"_index":1265,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1743,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1746,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1370,"title":{},"body":{"license.html":{}}}],["made",{"_index":1468,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1786,"title":{},"body":{"license.html":{}}}],["mail/cpf",{"_index":808,"title":{},"body":{"injectables/UsersService.html":{}}}],["maintain",{"_index":1406,"title":{},"body":{"license.html":{}}}],["major",{"_index":1207,"title":{},"body":{"license.html":{}}}],["make",{"_index":983,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1285,"title":{},"body":{"license.html":{}}}],["making",{"_index":1124,"title":{},"body":{"license.html":{}}}],["manner",{"_index":1629,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":1056,"title":{},"body":{"license.html":{}}}],["map",{"_index":662,"title":{},"body":{"injectables/PackService.html":{}}}],["marcelo",{"_index":937,"title":{},"body":{"index.html":{},"properties.html":{}}}],["march",{"_index":1680,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1044,"title":{},"body":{"license.html":{}}}],["market",{"_index":898,"title":{},"body":{"index.html":{}}}],["marketplace",{"_index":1824,"title":{},"body":{"todo.html":{}}}],["marks",{"_index":1530,"title":{},"body":{"license.html":{}}}],["masks",{"_index":1112,"title":{},"body":{"license.html":{}}}],["matches",{"_index":488,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1274,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1484,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1540,"title":{},"body":{"license.html":{}}}],["means",{"_index":1109,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1293,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1307,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":900,"title":{},"body":{"index.html":{}}}],["medium",{"_index":1320,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1334,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1182,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1179,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1723,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1155,"title":{},"body":{"license.html":{}}}],["merging",{"_index":1600,"title":{},"body":{"license.html":{}}}],["message",{"_index":284,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["message:'the",{"_index":490,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["met",{"_index":1254,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["miscellaneous",{"_index":880,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1519,"title":{},"body":{"license.html":{}}}],["mit",{"_index":941,"title":{},"body":{"index.html":{}}}],["mode",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":1387,"title":{},"body":{"license.html":{}}}],["modification",{"_index":1105,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1186,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1043,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1338,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1013,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1144,"title":{},"body":{"license.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":1389,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1567,"title":{},"body":{"license.html":{}}}],["myaccount",{"_index":1835,"title":{},"body":{"todo.html":{}}}],["myaccount/album",{"_index":1838,"title":{},"body":{"todo.html":{}}}],["myaccount/cards",{"_index":1827,"title":{},"body":{"todo.html":{}}}],["n",{"_index":620,"title":{},"body":{"injectables/PackService.html":{}}}],["name",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["names",{"_index":1523,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1354,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1731,"title":{},"body":{"license.html":{}}}],["need",{"_index":1004,"title":{},"body":{"license.html":{}}}],["needed",{"_index":1081,"title":{},"body":{"license.html":{}}}],["nest",{"_index":940,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":929,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["network",{"_index":1158,"title":{},"body":{"license.html":{}}}],["new",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{}}}],["next",{"_index":1409,"title":{},"body":{"license.html":{}}}],["nodejs",{"_index":927,"title":{},"body":{"index.html":{}}}],["non",{"_index":1100,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":1395,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1205,"title":{},"body":{"license.html":{}}}],["normalize('nfd",{"_index":310,"title":{},"body":{"injectables/CardService.html":{}}}],["normally",{"_index":1434,"title":{},"body":{"license.html":{}}}],["notfounderror",{"_index":278,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notfounderror(collection",{"_index":376,"title":{},"body":{"injectables/CollectionService.html":{}}}],["notfounderror(data",{"_index":304,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"miscellaneous/functions.html":{}}}],["notfounderror(user",{"_index":822,"title":{},"body":{"injectables/UsersService.html":{}}}],["nothing",{"_index":1582,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1171,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1165,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1568,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1563,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1504,"title":{},"body":{"license.html":{}}}],["npm",{"_index":914,"title":{},"body":{"index.html":{}}}],["number",{"_index":193,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateUserDto.html":{},"classes/Pack.html":{},"classes/User.html":{},"license.html":{}}}],["numbered",{"_index":1709,"title":{},"body":{"license.html":{}}}],["o",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["obj",{"_index":891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1187,"title":{},"body":{"license.html":{}}}],["obligate",{"_index":1692,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1414,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1295,"title":{},"body":{"license.html":{}}}],["occasionally",{"_index":1394,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1579,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1064,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1032,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1423,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1398,"title":{},"body":{"license.html":{}}}],["official",{"_index":1189,"title":{},"body":{"license.html":{}}}],["one",{"_index":1198,"title":{},"body":{"license.html":{}}}],["online",{"_index":893,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":674,"title":{},"body":{"injectables/PrismaService.html":{}}}],["operate",{"_index":1749,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1403,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1219,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1315,"title":{},"body":{"license.html":{}}}],["option",{"_index":1502,"title":{},"body":{"license.html":{}}}],["optional",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1178,"title":{},"body":{"license.html":{}}}],["order",{"_index":1577,"title":{},"body":{"license.html":{}}}],["organization",{"_index":1597,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":1119,"title":{},"body":{"license.html":{}}}],["origin",{"_index":1520,"title":{},"body":{"license.html":{}}}],["original",{"_index":1521,"title":{},"body":{"license.html":{}}}],["others",{"_index":1006,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1266,"title":{},"body":{"license.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1258,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1279,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1816,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1625,"title":{},"body":{"license.html":{}}}],["pack",{"_index":591,"title":{"classes/Pack.html":{}},"body":{"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"coverage.html":{},"todo.html":{}}}],["pack.dto",{"_index":606,"title":{},"body":{"controllers/PackController.html":{},"injectables/PackService.html":{}}}],["pack.dto.ts",{"_index":440,"title":{},"body":{"classes/CreatePackDto.html":{},"coverage.html":{}}}],["pack.dto.ts:10",{"_index":444,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["pack.map((utc",{"_index":634,"title":{},"body":{"injectables/PackService.html":{}}}],["pack.push(card",{"_index":630,"title":{},"body":{"injectables/PackService.html":{}}}],["pack.push(com",{"_index":659,"title":{},"body":{"injectables/PackService.html":{}}}],["pack.push(leg",{"_index":652,"title":{},"body":{"injectables/PackService.html":{}}}],["pack.push(rar",{"_index":656,"title":{},"body":{"injectables/PackService.html":{}}}],["package",{"_index":853,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":1345,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1206,"title":{},"body":{"license.html":{}}}],["packcontroller",{"_index":601,"title":{"controllers/PackController.html":{}},"body":{"controllers/PackController.html":{},"modules/PackModule.html":{},"coverage.html":{}}}],["packmodule",{"_index":47,"title":{"modules/PackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PackModule.html":{},"modules.html":{},"overview.html":{}}}],["packservice",{"_index":607,"title":{"injectables/PackService.html":{}},"body":{"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"coverage.html":{},"overview.html":{}}}],["pagani",{"_index":397,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["paper",{"_index":1785,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1553,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1637,"title":{},"body":{"license.html":{}}}],["param",{"_index":230,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":247,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1121,"title":{},"body":{"license.html":{}}}],["partialtype",{"_index":685,"title":{},"body":{"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcarddto",{"_index":686,"title":{},"body":{"classes/UpdateCardDto.html":{}}}],["partialtype(createcollectiondto",{"_index":688,"title":{},"body":{"classes/UpdateCollectionDto.html":{}}}],["partialtype(createdeckdto",{"_index":691,"title":{},"body":{"classes/UpdateDeckDto.html":{}}}],["partialtype(createuserdto",{"_index":695,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1195,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1154,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1245,"title":{},"body":{"license.html":{}}}],["party",{"_index":1404,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1602,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1019,"title":{},"body":{"license.html":{}}}],["passaword",{"_index":471,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["passport",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["patch",{"_index":231,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":246,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{}}}],["patch('my",{"_index":766,"title":{},"body":{"controllers/UsersController.html":{}}}],["patent",{"_index":1552,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1085,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":1062,"title":{},"body":{"license.html":{}}}],["payload",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":1673,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1418,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1421,"title":{},"body":{"license.html":{}}}],["pelo",{"_index":586,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["performance",{"_index":1727,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1231,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1561,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1035,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1249,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":1327,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1364,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1542,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":958,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1473,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1432,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1690,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1374,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1392,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":999,"title":{},"body":{"license.html":{}}}],["place",{"_index":1400,"title":{},"body":{"license.html":{}}}],["players",{"_index":902,"title":{},"body":{"index.html":{}}}],["please",{"_index":1809,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1605,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":1776,"title":{},"body":{"license.html":{}}}],["portion",{"_index":1426,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":1388,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1342,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1752,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1768,"title":{},"body":{"license.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["post('user",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":1309,"title":{},"body":{"license.html":{}}}],["practical",{"_index":971,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1071,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":966,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1101,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1068,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1603,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1184,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{}}}],["present",{"_index":1703,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1176,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1514,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1005,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1466,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1049,"title":{},"body":{"license.html":{}}}],["price",{"_index":594,"title":{},"body":{"classes/Pack.html":{},"license.html":{}}}],["primarily",{"_index":1675,"title":{},"body":{"license.html":{}}}],["prior",{"_index":1564,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["prisma.cardcreateinput",{"_index":287,"title":{},"body":{"injectables/CardService.html":{}}}],["prisma.cardupdateinput",{"_index":305,"title":{},"body":{"injectables/CardService.html":{}}}],["prisma.collectioncreateinput",{"_index":371,"title":{},"body":{"injectables/CollectionService.html":{}}}],["prisma.deckcreateinput",{"_index":545,"title":{},"body":{"injectables/DeckService.html":{}}}],["prisma.service",{"_index":670,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.usercreateinput",{"_index":811,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":377,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["prisma/client",{"_index":206,"title":{},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":672,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":48,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":157,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["problems",{"_index":1046,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1458,"title":{},"body":{"license.html":{}}}],["process.env.jwt_secret",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procuring",{"_index":1662,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1222,"title":{},"body":{"license.html":{}}}],["product",{"_index":1375,"title":{},"body":{"license.html":{}}}],["production",{"_index":921,"title":{},"body":{"index.html":{}}}],["products",{"_index":1066,"title":{},"body":{"license.html":{}}}],["profile",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["program",{"_index":982,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1319,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1799,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1196,"title":{},"body":{"license.html":{}}}],["programs",{"_index":992,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1826,"title":{},"body":{"todo.html":{}}}],["prohibit",{"_index":1070,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1305,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1669,"title":{},"body":{"license.html":{}}}],["prominent",{"_index":1180,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1168,"title":{},"body":{"license.html":{}}}],["promise",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["propagate",{"_index":1132,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1586,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1145,"title":{},"body":{"license.html":{}}}],["properties",{"_index":184,"title":{"properties.html":{}},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":1433,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":1096,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1002,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1060,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1036,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1489,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1728,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1271,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1174,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["provision",{"_index":1079,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1558,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1714,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1716,"title":{},"body":{"license.html":{}}}],["public",{"_index":945,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1522,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1491,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1323,"title":{},"body":{"license.html":{}}}],["published",{"_index":1711,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1089,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1437,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1659,"title":{},"body":{"license.html":{}}}],["qnt",{"_index":624,"title":{},"body":{"injectables/PackService.html":{}}}],["qualify",{"_index":1574,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1726,"title":{},"body":{"license.html":{}}}],["quantity",{"_index":595,"title":{},"body":{"classes/Pack.html":{}}}],["ranking",{"_index":451,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["rar",{"_index":654,"title":{},"body":{"injectables/PackService.html":{}}}],["rare",{"_index":639,"title":{},"body":{"injectables/PackService.html":{}}}],["rare.length",{"_index":648,"title":{},"body":{"injectables/PackService.html":{}}}],["rare.push(card",{"_index":644,"title":{},"body":{"injectables/PackService.html":{}}}],["rarity",{"_index":190,"title":{},"body":{"classes/Card.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["reached",{"_index":286,"title":{},"body":{"injectables/CardService.html":{},"injectables/DeckService.html":{}}}],["read",{"_index":1810,"title":{},"body":{"license.html":{}}}],["readable",{"_index":1371,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1646,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1495,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":1077,"title":{},"body":{"license.html":{}}}],["realizar",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["reason",{"_index":1657,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1390,"title":{},"body":{"license.html":{}}}],["recebendo",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":1572,"title":{},"body":{"license.html":{}}}],["receive",{"_index":997,"title":{},"body":{"license.html":{}}}],["received",{"_index":1023,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1591,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1664,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1472,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1655,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1020,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1190,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":1770,"title":{},"body":{"license.html":{}}}],["refactor",{"_index":1829,"title":{},"body":{"todo.html":{}}}],["referring",{"_index":994,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1108,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":1694,"title":{},"body":{"license.html":{}}}],["regard",{"_index":1501,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1344,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1246,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1557,"title":{},"body":{"license.html":{}}}],["relation",{"_index":1832,"title":{},"body":{"todo.html":{}}}],["relationship",{"_index":1280,"title":{},"body":{"license.html":{}}}],["released",{"_index":988,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1336,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1543,"title":{},"body":{"license.html":{}}}],["relying",{"_index":1645,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1413,"title":{},"body":{"license.html":{}}}],["remains",{"_index":985,"title":{},"body":{"license.html":{}}}],["removal",{"_index":1503,"title":{},"body":{"license.html":{}}}],["remove",{"_index":219,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{},"todo.html":{}}}],["remove(@loggeduser",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":791,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(user",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{}}}],["removed",{"_index":551,"title":{},"body":{"injectables/DeckService.html":{}}}],["render",{"_index":1099,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1744,"title":{},"body":{"license.html":{}}}],["reorganize",{"_index":1841,"title":{},"body":{"todo.html":{}}}],["repair",{"_index":1733,"title":{},"body":{"license.html":{}}}],["replace(/[^a",{"_index":311,"title":{},"body":{"injectables/CardService.html":{}}}],["represent",{"_index":1455,"title":{},"body":{"license.html":{}}}],["request",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1240,"title":{},"body":{"license.html":{}}}],["required",{"_index":1461,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1337,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":908,"title":{},"body":{"index.html":{},"license.html":{}}}],["requires",{"_index":1042,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1123,"title":{},"body":{"license.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset(@loggeduser",{"_index":524,"title":{},"body":{"controllers/DeckController.html":{}}}],["reset(user",{"_index":513,"title":{},"body":{"controllers/DeckController.html":{}}}],["reset(userid",{"_index":536,"title":{},"body":{"injectables/DeckService.html":{}}}],["resolved",{"_index":1444,"title":{},"body":{"license.html":{}}}],["respect",{"_index":1014,"title":{},"body":{"license.html":{}}}],["response.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":584,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":590,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":588,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1012,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1593,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":1088,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1306,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1541,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1538,"title":{},"body":{"license.html":{}}}],["result",{"_index":1717,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1126,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1476,"title":{},"body":{"license.html":{}}}],["retorna",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":1756,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1701,"title":{},"body":{"license.html":{}}}],["right",{"_index":1470,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1003,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1725,"title":{},"body":{"license.html":{}}}],["rom",{"_index":1479,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":1609,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1488,"title":{},"body":{"license.html":{}}}],["run",{"_index":910,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"license.html":{}}}],["runs",{"_index":1220,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["safest",{"_index":1772,"title":{},"body":{"license.html":{}}}],["sake",{"_index":1041,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1619,"title":{},"body":{"license.html":{}}}],["same",{"_index":1021,"title":{},"body":{"license.html":{}}}],["santos",{"_index":938,"title":{},"body":{"index.html":{},"properties.html":{}}}],["satisfy",{"_index":1416,"title":{},"body":{"license.html":{}}}],["saying",{"_index":1410,"title":{},"body":{"license.html":{}}}],["schema",{"_index":1831,"title":{},"body":{"todo.html":{}}}],["school",{"_index":1800,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1668,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1226,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1136,"title":{},"body":{"license.html":{}}}],["secret",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1284,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1368,"title":{},"body":{"license.html":{}}}],["see",{"_index":1781,"title":{},"body":{"license.html":{}}}],["seed",{"_index":1825,"title":{},"body":{"todo.html":{}}}],["select",{"_index":302,"title":{},"body":{"injectables/CardService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["sell",{"_index":1634,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1618,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1111,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1425,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1352,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1348,"title":{},"body":{"license.html":{}}}],["server",{"_index":466,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["serves",{"_index":1210,"title":{},"body":{"license.html":{}}}],["service",{"_index":1481,"title":{},"body":{"license.html":{},"todo.html":{}}}],["servicing",{"_index":1732,"title":{},"body":{"license.html":{}}}],["shall",{"_index":1289,"title":{},"body":{"license.html":{}}}],["share",{"_index":976,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1235,"title":{},"body":{"license.html":{}}}],["short",{"_index":1788,"title":{},"body":{"license.html":{}}}],["show",{"_index":1024,"title":{},"body":{"license.html":{}}}],["shows",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["sign",{"_index":1801,"title":{},"body":{"license.html":{}}}],["significant",{"_index":1456,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["similar",{"_index":1304,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1689,"title":{},"body":{"license.html":{}}}],["single",{"_index":223,"title":{},"body":{"controllers/CardController.html":{},"license.html":{}}}],["software",{"_index":953,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1438,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1268,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1282,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["spare",{"_index":1385,"title":{},"body":{"license.html":{}}}],["speak",{"_index":993,"title":{},"body":{"license.html":{}}}],["special",{"_index":1092,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1218,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1239,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1194,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1708,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1712,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1702,"title":{},"body":{"license.html":{}}}],["sports",{"_index":403,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["src/.../handle",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../is",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../not",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":583,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":576,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":579,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":582,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":232,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/card/card.controller.ts",{"_index":208,"title":{},"body":{"controllers/CardController.html":{},"coverage.html":{}}}],["src/card/card.controller.ts:30",{"_index":215,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:38",{"_index":224,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:48",{"_index":229,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:62",{"_index":220,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.module.ts",{"_index":255,"title":{},"body":{"modules/CardModule.html":{}}}],["src/card/card.service.ts",{"_index":257,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/card/card.service.ts:11",{"_index":260,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:14",{"_index":264,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:43",{"_index":269,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:60",{"_index":270,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:78",{"_index":268,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:88",{"_index":266,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:94",{"_index":262,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/dto/create",{"_index":379,"title":{},"body":{"classes/CreateCardDto.html":{},"coverage.html":{}}}],["src/card/dto/update",{"_index":684,"title":{},"body":{"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["src/card/entities/card.entity.ts",{"_index":183,"title":{},"body":{"classes/Card.html":{},"coverage.html":{}}}],["src/card/entities/card.entity.ts:10",{"_index":196,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:11",{"_index":205,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:13",{"_index":198,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:14",{"_index":203,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:4",{"_index":199,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:5",{"_index":200,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:6",{"_index":202,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:7",{"_index":194,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:8",{"_index":195,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:9",{"_index":201,"title":{},"body":{"classes/Card.html":{}}}],["src/collection/collection.controller.ts",{"_index":331,"title":{},"body":{"controllers/CollectionController.html":{},"coverage.html":{}}}],["src/collection/collection.controller.ts:30",{"_index":337,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:38",{"_index":342,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:46",{"_index":344,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:56",{"_index":347,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:70",{"_index":339,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.module.ts",{"_index":362,"title":{},"body":{"modules/CollectionModule.html":{}}}],["src/collection/collection.service.ts",{"_index":364,"title":{},"body":{"injectables/CollectionService.html":{},"coverage.html":{}}}],["src/collection/collection.service.ts:11",{"_index":365,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:14",{"_index":366,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:25",{"_index":368,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:32",{"_index":369,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:45",{"_index":370,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:63",{"_index":367,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/dto/create",{"_index":420,"title":{},"body":{"classes/CreateCollectionDto.html":{},"coverage.html":{}}}],["src/collection/dto/update",{"_index":687,"title":{},"body":{"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["src/collection/entities/collection.entity.ts",{"_index":322,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["src/collection/entities/collection.entity.ts:10",{"_index":326,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:11",{"_index":329,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:4",{"_index":327,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:6",{"_index":328,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:7",{"_index":324,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:8",{"_index":325,"title":{},"body":{"classes/Collection.html":{}}}],["src/deck/deck.controller.ts",{"_index":508,"title":{},"body":{"controllers/DeckController.html":{},"coverage.html":{}}}],["src/deck/deck.controller.ts:27",{"_index":510,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:35",{"_index":512,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:43",{"_index":515,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.module.ts",{"_index":529,"title":{},"body":{"modules/DeckModule.html":{}}}],["src/deck/deck.service.ts",{"_index":531,"title":{},"body":{"injectables/DeckService.html":{},"coverage.html":{}}}],["src/deck/deck.service.ts:11",{"_index":534,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:38",{"_index":535,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:47",{"_index":537,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:9",{"_index":532,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/dto/create",{"_index":430,"title":{},"body":{"classes/CreateDeckDto.html":{},"coverage.html":{}}}],["src/deck/dto/update",{"_index":690,"title":{},"body":{"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["src/deck/entities/deck.entity.ts",{"_index":500,"title":{},"body":{"classes/Deck.html":{},"coverage.html":{}}}],["src/deck/entities/deck.entity.ts:2",{"_index":503,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:4",{"_index":505,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:5",{"_index":506,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:7",{"_index":502,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:8",{"_index":504,"title":{},"body":{"classes/Deck.html":{}}}],["src/main.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":668,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":671,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":677,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":679,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user",{"_index":438,"title":{},"body":{"classes/CreatePackDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":693,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["src/user/entities/user.entity.ts",{"_index":696,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:17",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":711,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:109",{"_index":723,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:28",{"_index":717,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:41",{"_index":727,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:52",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:63",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:76",{"_index":730,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:87",{"_index":734,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.controller.ts:98",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/user/user.module.ts",{"_index":775,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/user/user.service.ts",{"_index":777,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:108",{"_index":792,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:129",{"_index":787,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:16",{"_index":780,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:183",{"_index":789,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:19",{"_index":781,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:220",{"_index":794,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:248",{"_index":783,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:60",{"_index":785,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/user/user.service.ts:80",{"_index":790,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/handle",{"_index":273,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/is",{"_index":276,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/not",{"_index":279,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stand",{"_index":1076,"title":{},"body":{"license.html":{}}}],["standard",{"_index":1188,"title":{},"body":{"license.html":{}}}],["standards",{"_index":1191,"title":{},"body":{"license.html":{}}}],["start",{"_index":917,"title":{},"body":{"index.html":{},"license.html":{}}}],["start:dev",{"_index":920,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":922,"title":{},"body":{"index.html":{}}}],["started",{"_index":826,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":1789,"title":{},"body":{"license.html":{}}}],["state",{"_index":1773,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1253,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1545,"title":{},"body":{"license.html":{}}}],["statements",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1086,"title":{},"body":{"license.html":{}}}],["stating",{"_index":1326,"title":{},"body":{"license.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"license.html":{}}}],["steps",{"_index":1029,"title":{},"body":{"license.html":{}}}],["storage",{"_index":1359,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["subdividing",{"_index":1599,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1592,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1630,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1283,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1238,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1804,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":1396,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1451,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":1074,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":309,"title":{},"body":{"injectables/CardService.html":{},"injectables/UsersService.html":{}}}],["sucessfully",{"_index":378,"title":{},"body":{"injectables/CollectionService.html":{}}}],["sucessfuly",{"_index":550,"title":{},"body":{"injectables/DeckService.html":{}}}],["such",{"_index":1015,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1643,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1463,"title":{},"body":{"license.html":{}}}],["summary",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["supplement",{"_index":1496,"title":{},"body":{"license.html":{}}}],["support",{"_index":1333,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":1405,"title":{},"body":{"license.html":{}}}],["sure",{"_index":984,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":1009,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1544,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1747,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1814,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":877,"title":{},"body":{"dependencies.html":{},"index.html":{},"todo.html":{}}}],["system",{"_index":899,"title":{},"body":{"index.html":{},"license.html":{}}}],["systematic",{"_index":1061,"title":{},"body":{"license.html":{}}}],["table",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":973,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1431,"title":{},"body":{"license.html":{}}}],["technological",{"_index":1292,"title":{},"body":{"license.html":{}}}],["tells",{"_index":1172,"title":{},"body":{"license.html":{}}}],["term",{"_index":1251,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1787,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1551,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1573,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1560,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1548,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1025,"title":{},"body":{"license.html":{}}}],["test",{"_index":1821,"title":{},"body":{"todo.html":{}}}],["therefore",{"_index":1010,"title":{},"body":{"license.html":{}}}],["things",{"_index":1001,"title":{},"body":{"license.html":{}}}],["third",{"_index":1318,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":681,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":682,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus('http://localhost:3000",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardgenaretor(collection",{"_index":627,"title":{},"body":{"injectables/PackService.html":{}}}],["this.cardgenaretor(common",{"_index":658,"title":{},"body":{"injectables/PackService.html":{}}}],["this.cardgenaretor(legendary",{"_index":651,"title":{},"body":{"injectables/PackService.html":{}}}],["this.cardgenaretor(rare",{"_index":655,"title":{},"body":{"injectables/PackService.html":{}}}],["this.cardservice.create(dto",{"_index":241,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.delete(id",{"_index":251,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.findone(id",{"_index":245,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.update(id",{"_index":248,"title":{},"body":{"controllers/CardController.html":{}}}],["this.collectionlimit(dto",{"_index":283,"title":{},"body":{"injectables/CardService.html":{}}}],["this.collectionservice.create(dto",{"_index":353,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.delete(id",{"_index":358,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.findall",{"_index":355,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.findone(id",{"_index":356,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.update(id",{"_index":357,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.createpack(collection",{"_index":631,"title":{},"body":{"injectables/PackService.html":{}}}],["this.datatreatment(data.rarity",{"_index":296,"title":{},"body":{"injectables/CardService.html":{}}}],["this.deckservice.create(dto",{"_index":521,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.delete(id",{"_index":523,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.reset(user.id",{"_index":525,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.jwtservice.sign",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.packservice.create(dto",{"_index":610,"title":{},"body":{"controllers/PackController.html":{}}}],["this.prisma.$transaction(transactions",{"_index":638,"title":{},"body":{"injectables/PackService.html":{}}}],["this.prisma.card",{"_index":299,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.create",{"_index":297,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.delete",{"_index":307,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.findmany",{"_index":626,"title":{},"body":{"injectables/PackService.html":{}}}],["this.prisma.card.findunique",{"_index":306,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.collection",{"_index":375,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.collection.create",{"_index":373,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.collection.findmany().catch(handleerror",{"_index":374,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.collection.findunique",{"_index":315,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{}}}],["this.prisma.deck.create",{"_index":547,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.delete",{"_index":549,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.deletemany",{"_index":552,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.findmany",{"_index":540,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.findunique",{"_index":548,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.user",{"_index":818,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":796,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.prisma.usertocard.create",{"_index":635,"title":{},"body":{"injectables/PackService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deletemyacc(user.id",{"_index":771,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(user.isadmin",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findmyacc(user.id",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findmyalbum(user.id",{"_index":765,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatemyacc(updateuserdto",{"_index":768,"title":{},"body":{"controllers/UsersController.html":{}}}],["those",{"_index":1072,"title":{},"body":{"license.html":{}}}],["though",{"_index":1499,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1083,"title":{},"body":{"license.html":{}}}],["three",{"_index":1383,"title":{},"body":{"license.html":{}}}],["through",{"_index":1157,"title":{},"body":{"license.html":{}}}],["throw",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["thus",{"_index":1275,"title":{},"body":{"license.html":{}}}],["time",{"_index":1569,"title":{},"body":{"license.html":{}}}],["tinoco",{"_index":936,"title":{},"body":{"index.html":{},"properties.html":{}}}],["todo",{"_index":931,"title":{"todo.html":{}},"body":{"index.html":{},"todo.html":{}}}],["token",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":587,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["tools",{"_index":1229,"title":{},"body":{"license.html":{}}}],["top",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["touppercase",{"_index":314,"title":{},"body":{"injectables/CardService.html":{}}}],["trade",{"_index":1528,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1527,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1529,"title":{},"body":{"license.html":{}}}],["trading",{"_index":894,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1469,"title":{},"body":{"license.html":{}}}],["transactions",{"_index":633,"title":{},"body":{"injectables/PackService.html":{}}}],["transfer",{"_index":1159,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":1471,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1596,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["transmission",{"_index":1419,"title":{},"body":{"license.html":{}}}],["treat",{"_index":1839,"title":{},"body":{"todo.html":{}}}],["treated",{"_index":1498,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1299,"title":{},"body":{"license.html":{}}}],["true",{"_index":303,"title":{},"body":{"injectables/CardService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["true})@isboolean",{"_index":467,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trump",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["trunfo",{"_index":892,"title":{},"body":{"index.html":{}}}],["two",{"_index":1028,"title":{},"body":{"license.html":{}}}],["type",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["typescript",{"_index":928,"title":{},"body":{"index.html":{}}}],["typical",{"_index":1446,"title":{},"body":{"license.html":{}}}],["ui",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["unacceptable",{"_index":1069,"title":{},"body":{"license.html":{}}}],["unauthorizedexception",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('access",{"_index":820,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception('user",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["under",{"_index":1114,"title":{},"body":{"license.html":{}}}],["unique",{"_index":897,"title":{},"body":{"index.html":{},"todo.html":{}}}],["unknown",{"_index":263,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["unless",{"_index":1454,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1820,"title":{},"body":{"properties.html":{}}}],["unlimited",{"_index":1257,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1131,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1286,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1494,"title":{},"body":{"license.html":{}}}],["until",{"_index":1559,"title":{},"body":{"license.html":{}}}],["update",{"_index":211,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["update(@body",{"_index":767,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":225,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{}}}],["update(updateuserdto",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatecarddto",{"_index":226,"title":{"classes/UpdateCardDto.html":{}},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["updatecollectiondto",{"_index":345,"title":{"classes/UpdateCollectionDto.html":{}},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":191,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{}}}],["updatedeckdto",{"_index":689,"title":{"classes/UpdateDeckDto.html":{}},"body":{"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["updatemyacc",{"_index":779,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatemyacc(dto",{"_index":793,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":1482,"title":{},"body":{"license.html":{}}}],["updateuserdto",{"_index":692,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":810,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["used",{"_index":1098,"title":{},"body":{"license.html":{}}}],["useful",{"_index":1780,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':id')@apioperation({summary",{"_index":218,"title":{},"body":{"controllers/CardController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':id')@apioperation({summary",{"_index":227,"title":{},"body":{"controllers/CardController.html":{}}}],["useguards(undefined)@apibearerauth()@post()@apioperation({summary",{"_index":214,"title":{},"body":{"controllers/CardController.html":{}}}],["user",{"_index":63,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user')@post('user",{"_index":716,"title":{},"body":{"controllers/UsersController.html":{}}}],["user's",{"_index":719,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@apitags('create",{"_index":715,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@delete",{"_index":514,"title":{},"body":{"controllers/DeckController.html":{}}}],["user'})@delete(':id",{"_index":511,"title":{},"body":{"controllers/DeckController.html":{}}}],["user'})@post",{"_index":509,"title":{},"body":{"controllers/DeckController.html":{}}}],["user.controller",{"_index":776,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.cpf",{"_index":802,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.decorator",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":694,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:23",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":461,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":473,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":459,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:60",{"_index":464,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:68",{"_index":477,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:76",{"_index":454,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:83",{"_index":468,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":799,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":522,"title":{},"body":{"controllers/DeckController.html":{},"controllers/UsersController.html":{}}}],["user.isadmin",{"_index":242,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["user.password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["user/user.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["user`s",{"_index":455,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["usercpf",{"_index":801,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercpf.length",{"_index":805,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail",{"_index":797,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail.length",{"_index":804,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":501,"title":{},"body":{"classes/Deck.html":{},"injectables/DeckService.html":{}}}],["userlist",{"_index":795,"title":{},"body":{"injectables/UsersService.html":{}}}],["userlist.filter((user",{"_index":798,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":493,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":452,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["users'})@apitags('user",{"_index":725,"title":{},"body":{"controllers/UsersController.html":{}}}],["userscontroller",{"_index":710,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":49,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":745,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertocard",{"_index":204,"title":{},"body":{"classes/Card.html":{},"classes/CreateUserDto.html":{},"injectables/DeckService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["uses",{"_index":1448,"title":{},"body":{"license.html":{}}}],["using",{"_index":1417,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["utc.id",{"_index":637,"title":{},"body":{"injectables/PackService.html":{}}}],["utcid",{"_index":432,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/Deck.html":{}}}],["utcs",{"_index":192,"title":{},"body":{"classes/Card.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["uuid",{"_index":442,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["valid",{"_index":1382,"title":{},"body":{"license.html":{}}}],["validate",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":412,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{},"todo.html":{}}}],["value",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":961,"title":{},"body":{"license.html":{}}}],["version",{"_index":946,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":981,"title":{},"body":{"license.html":{}}}],["view",{"_index":1175,"title":{},"body":{"license.html":{}}}],["vinhas",{"_index":934,"title":{},"body":{"index.html":{},"properties.html":{}}}],["violates",{"_index":1487,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1555,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1169,"title":{},"body":{"license.html":{}}}],["void",{"_index":890,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["volume",{"_index":1358,"title":{},"body":{"license.html":{}}}],["w",{"_index":1791,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1308,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1761,"title":{},"body":{"license.html":{}}}],["want",{"_index":909,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranties",{"_index":1173,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1039,"title":{},"body":{"license.html":{}}}],["watch",{"_index":918,"title":{},"body":{"index.html":{}}}],["way",{"_index":989,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1372,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":1792,"title":{},"body":{"license.html":{}}}],["well",{"_index":1150,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1601,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1016,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1203,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1427,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1199,"title":{},"body":{"license.html":{}}}],["window",{"_index":1217,"title":{},"body":{"license.html":{}}}],["winter",{"_index":424,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["wipo",{"_index":1298,"title":{},"body":{"license.html":{}}}],["wish",{"_index":996,"title":{},"body":{"license.html":{}}}],["within",{"_index":1539,"title":{},"body":{"license.html":{}}}],["without",{"_index":1134,"title":{},"body":{"license.html":{}}}],["work",{"_index":987,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1228,"title":{},"body":{"license.html":{}}}],["working",{"_index":1200,"title":{},"body":{"license.html":{}}}],["works",{"_index":969,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1633,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1720,"title":{},"body":{"license.html":{}}}],["written",{"_index":1381,"title":{},"body":{"license.html":{}}}],["x",{"_index":1833,"title":{},"body":{"todo.html":{}}}],["years",{"_index":1384,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":1650,"title":{},"body":{"license.html":{}}}],["za",{"_index":312,"title":{},"body":{"injectables/CardService.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zs]/g",{"_index":313,"title":{},"body":{"injectables/CardService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: Shows application status})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: `Shows application status`,\n  })\n  getStatus() {\n    return this.appService.getStatus('http://localhost:3000');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCardModule\n\nCardModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nDeckModule\n\nDeckModule\n\nAppModule -->\n\nDeckModule->AppModule\n\n\n\n\n\nPackModule\n\nPackModule\n\nAppModule -->\n\nPackModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CardModule\n                        \n                        \n                            CollectionModule\n                        \n                        \n                            DeckModule\n                        \n                        \n                            PackModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { DeckModule } from './deck/deck.module';\nimport { CardModule } from './card/card.module';\nimport { CollectionModule } from './collection/collection.module';\nimport { PackModule } from './user-to-card/user-to-card.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    UsersModule,\n    AuthModule,\n    DeckModule,\n    CardModule,\n    CollectionModule,\n    PackModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string) {\n    return {\n      status: 'Top trump is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { user: User; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return { user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/entities/card.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardAttack\n                            \n                            \n                                cardDef\n                            \n                            \n                                collectionId\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rarity\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                utcs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rarity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Rarity\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        utcs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserToCard[]\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Rarity, UserToCard } from '@prisma/client';\n\nexport class Card {\n  id?: string;\n  name: string;\n  type: string;\n  cardAttack: number;\n  cardDef: number;\n  rarity: Rarity;\n  collectionId: string;\n  utcs: UserToCard[];\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CardController.html":{"url":"controllers/CardController.html","title":"controller - CardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                card\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCardDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post()@ApiOperation({summary: 'Create a card'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')@ApiOperation({summary: 'Remove a card by its ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a single card by its ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateCardDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')@ApiOperation({summary: 'Edit a card by ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { CardService } from './card.service';\nimport { CreateCardDto } from './dto/create-card.dto';\nimport { UpdateCardDto } from './dto/update-card.dto';\n\n@ApiTags('card')\n@Controller('card')\nexport class CardController {\n  constructor(private readonly cardService: CardService) {}\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  @ApiOperation({\n    summary: 'Create a card',\n  })\n  create(@Body() dto: CreateCardDto, @LoggedUser() user: User) {\n    return this.cardService.create(dto, user.isAdmin);\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Get a single card by its ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.cardService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Edit a card by ID',\n  })\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateCardDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.cardService.update(id, dto, user.isAdmin);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remove a card by its ID',\n  })\n  delete(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.cardService.delete(id, user.isAdmin);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CardModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nPrismaModule->CardModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/card/card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CardService } from './card.service';\nimport { CardController } from './card.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [CardController],\n  providers: [CardService],\n})\nexport class CardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                collectionLimit\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                dataTreatment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/card/card.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionLimit(dto)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCardDto, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataTreatment\n                        \n                    \n                \n            \n            \n                \ndataTreatment(data)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateCardDto, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { isAdmin } from 'src/utils/is-admin.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateCardDto } from './dto/create-card.dto';\nimport { UpdateCardDto } from './dto/update-card.dto';\n\n@Injectable()\nexport class CardService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateCardDto, loggedUser) {\n    isAdmin(loggedUser);\n\n    const limit = await this.collectionLimit(dto);\n\n    if (!limit) {\n      throw new BadRequestException({\n        message: 'This collection has reached its limit!',\n      });\n    }\n\n    const data: Prisma.CardCreateInput = {\n      name: dto.name,\n      type: dto.type,\n      cardAttack: dto.cardAttack,\n      cardDef: dto.cardDef,\n      rarity: dto.rarity,\n      collection: {\n        connect: {\n          id: dto.collectionId,\n        },\n      },\n    };\n\n    data.rarity = this.dataTreatment(data.rarity);\n\n    return this.prisma.card.create({ data }).catch(handleError);\n  }\n\n  async findOne(id: string) {\n    const data = await this.prisma.card\n      .findUnique({\n        where: { id },\n        include: {\n          collection: {\n            select: {\n              name: true,\n            },\n          },\n        },\n      })\n      .catch(handleError);\n    notFoundError(data, `this card (${id})`);\n    return data;\n  }\n\n  async update(id: string, dto: UpdateCardDto, loggedUser) {\n    isAdmin(loggedUser);\n    const data: Prisma.CardUpdateInput = {\n      ...dto,\n    };\n    data.rarity = this.dataTreatment(data.rarity);\n    notFoundError(\n      await this.prisma.card.findUnique({ where: { id } }),\n      `this card (${id})`,\n    );\n    return this.prisma.card\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string, loggedUser) {\n    isAdmin(loggedUser);\n    await this.prisma.card.delete({ where: { id } }).catch(handleError);\n    notFoundError(\n      this.prisma.card.findUnique({ where: { id } }),\n      `this card (${id})`,\n    );\n    return { message: 'Card deleted successfully!' };\n  }\n\n  dataTreatment(data) {\n    return data\n      .normalize('NFD')\n      .replace(/[^a-zA-Zs]/g, '')\n      .toUpperCase();\n  }\n  async collectionLimit(dto) {\n    const limit = await this.prisma.collection.findUnique({\n      where: { id: dto.collectionId },\n      include: {\n        cards: true,\n      },\n    });\n    console.log({ limit });\n    console.log(limit.cards.length);\n    if (limit.cards.length >= limit.cardNumber) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/entities/collection.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardNumber\n                            \n                            \n                                cards\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card[]\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Card } from '@prisma/client';\n\nexport class Collection {\n  id?: string;\n\n  name: string;\n  cardNumber: number;\n  cards: Card[];\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CollectionController.html":{"url":"controllers/CollectionController.html","title":"controller - CollectionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CollectionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/collection.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                collection\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCollectionDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - Create a collection'})@UseGuards(undefined)@ApiBearerAuth()@Post()\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - Remove a collection by ID'})@UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List all the collections'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List a collection by ID'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateCollectionDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - Edit a collection by ID'})@UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { CollectionService } from './collection.service';\nimport { CreateCollectionDto } from './dto/create-collection.dto';\nimport { UpdateCollectionDto } from './dto/update-collection.dto';\n\n@ApiTags('collection')\n@Controller('collection')\nexport class CollectionController {\n  constructor(private readonly collectionService: CollectionService) {}\n\n  @ApiOperation({\n    summary: 'Admin - Create a collection',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  create(@Body() dto: CreateCollectionDto, @LoggedUser() user: User) {\n    return this.collectionService.create(dto, user.isAdmin);\n  }\n\n  @ApiOperation({\n    summary: 'List all the collections',\n  })\n  @Get()\n  findAll() {\n    return this.collectionService.findAll();\n  }\n\n  @ApiOperation({\n    summary: 'List a collection by ID',\n  })\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.collectionService.findOne(id);\n  }\n\n  @ApiOperation({\n    summary: 'Admin - Edit a collection by ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateCollectionDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.collectionService.update(id, dto, user.isAdmin);\n  }\n\n  @ApiOperation({\n    summary: 'Admin - Remove a collection by ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  delete(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.collectionService.delete(id, user.isAdmin);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectionModule.html":{"url":"modules/CollectionModule.html","title":"module - CollectionModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_CollectionModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCollectionModule\n\nCollectionModule\n\nCollectionModule -->\n\nPrismaModule->CollectionModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/collection/collection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CollectionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CollectionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CollectionService } from './collection.service';\nimport { CollectionController } from './collection.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [CollectionController],\n  providers: [CollectionService],\n})\nexport class CollectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionService.html":{"url":"injectables/CollectionService.html","title":"injectable - CollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/collection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/collection/collection.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCollectionDto, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateCollectionDto, loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { isAdmin } from 'src/utils/is-admin.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateCollectionDto } from './dto/create-collection.dto';\nimport { UpdateCollectionDto } from './dto/update-collection.dto';\n\n@Injectable()\nexport class CollectionService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateCollectionDto, loggedUser) {\n    isAdmin(loggedUser);\n\n    const data: Prisma.CollectionCreateInput = {\n      name: dto.name,\n      cardNumber: dto.cardNumber,\n    };\n\n    return await this.prisma.collection.create({ data }).catch(handleError);\n  }\n\n  async findAll() {\n    const data = await this.prisma.collection.findMany().catch(handleError);\n\n    notFoundError(data, 'the collections');\n\n    return data;\n  }\n  async findOne(id: string) {\n    const collection = await this.prisma.collection\n      .findUnique({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n\n    notFoundError(collection, 'the collection');\n    return collection;\n  }\n\n  async update(id: string, dto: UpdateCollectionDto, loggedUser) {\n    isAdmin(loggedUser);\n\n    const data: Prisma.UserUpdateInput = { ...dto };\n\n    notFoundError(\n      this.prisma.collection.findUnique({ where: { id } }),\n      `this collection (${id})`,\n    );\n\n    return this.prisma.collection\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string, loggedUser) {\n    isAdmin(loggedUser);\n\n    await this.prisma.collection\n      .delete({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n    notFoundError(\n      this.prisma.collection.findUnique({ where: { id } }),\n      `this collection (${id})`,\n    );\n    return { message: 'Sucessfully deleted' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardDto.html":{"url":"classes/CreateCardDto.html","title":"class - CreateCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/dto/create-card.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardAttack\n                            \n                            \n                                cardDef\n                            \n                            \n                                collectionId\n                            \n                            \n                                name\n                            \n                            \n                                rarity\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card level of attack', example: 110})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card level of defense', example: 95})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The collection Id in which the card belongs to', example: '8f20f5f2-332a-42f4-9d86-f760feb22a77'})@IsUUID()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of a card.', example: 'Pagani Huayra'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rarity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Rarity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card rarity', example: 'common'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the element in the card', example: 'Sports car'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Rarity } from '@prisma/client';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUUID,\n} from 'class-validator';\n\nexport class CreateCardDto {\n  @ApiProperty({\n    description: 'Name of a card.',\n    example: 'Pagani Huayra',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'Type of the element in the card',\n    example: 'Sports car',\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: 'Card level of attack',\n    example: 110,\n  })\n  @IsNumber()\n  @IsPositive()\n  cardAttack: number;\n\n  @ApiProperty({\n    description: 'Card level of defense',\n    example: 95,\n  })\n  @IsNumber()\n  @IsPositive()\n  cardDef: number;\n\n  @ApiProperty({\n    description: 'Card rarity',\n    example: 'common',\n  })\n  @IsString()\n  rarity: Rarity;\n\n  @ApiProperty({\n    description: 'The collection Id in which the card belongs to',\n    example: '8f20f5f2-332a-42f4-9d86-f760feb22a77',\n  })\n  @IsUUID()\n  @IsString()\n  @IsNotEmpty()\n  collectionId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCollectionDto.html":{"url":"classes/CreateCollectionDto.html","title":"class - CreateCollectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCollectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/dto/create-collection.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardNumber\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card number', example: '7'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/collection/dto/create-collection.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Collection name', example: 'Winter 2022'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/collection/dto/create-collection.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateCollectionDto {\n  @ApiProperty({\n    description: 'Collection name',\n    example: 'Winter 2022',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Card number',\n    example: '7',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  cardNumber: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeckDto.html":{"url":"classes/CreateDeckDto.html","title":"class - CreateDeckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/dto/create-deck.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                utcId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        utcId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name your deck', example: 'The Best of the best'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/deck/dto/create-deck.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class CreateDeckDto {\n  @ApiProperty({\n    description: 'Name your deck',\n    example: 'The Best of the best',\n  })\n  @IsUUID()\n  utcId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePackDto.html":{"url":"classes/CreatePackDto.html","title":"class - CreatePackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-to-card/dto/create-pack.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'A Collection UUID', example: '--- UUID here ---'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/dto/create-pack.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class CreatePackDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'A Collection UUID',\n    example: '--- UUID here ---',\n  })\n  collectionId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                CPF\n                            \n                            \n                                email\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                ranking\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users balance', example: '1000.52'})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s CPF number', example: '123.123.123-12'})@Length(13, 14)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s Email', example: 'admin@blue.com.br'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users avatar', example: 'link.com/image.jpg'})@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is admin of server', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s name', example: 'Admin'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s Passaword', example: 'Admin2022'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users ranking. Select a number from 1 to 2000', example: '463'})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Deck, UserToCard } from '@prisma/client';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'User`s name',\n    example: 'Admin',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'User`s Email',\n    example: 'admin@blue.com.br',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'User`s Passaword',\n    example: 'Admin2022',\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    description: 'User`s CPF number',\n    example: '123.123.123-12',\n  })\n  @Length(13, 14)\n  @IsString()\n  @IsNotEmpty()\n  // @Matches( (^\\d{3}\\x2E\\d{3}\\x2E\\d{3}\\x2D\\d{2}$), {\n  //   message:'the first character of the username must not be a number. Username must contains at least 4 characters',\n  // })\n  CPF: string;\n\n  @ApiProperty({\n    description: 'Users avatar',\n    example: 'link.com/image.jpg',\n  })\n  @IsString()\n  @IsUrl()\n  imageUrl: string;\n\n  @ApiProperty({\n    description: 'Users ranking. Select a number from 1 to 2000',\n    example: '463',\n  })\n  @IsInt()\n  @IsPositive()\n  ranking: number;\n\n  @ApiProperty({\n    description: 'Users balance',\n    example: '1000.52',\n  })\n  @IsNumber()\n  @IsPositive()\n  balance: number;\n\n  @ApiProperty({\n    description: 'If user is admin of server',\n    example: true,\n  })\n  @IsBoolean()\n  isAdmin?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deck.html":{"url":"classes/Deck.html","title":"class - Deck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/entities/deck.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                            \n                                    Optional\n                                utcId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        utcId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Deck {\n  id?: string;\n\n  userId?: string;\n  utcId?: string;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeckController.html":{"url":"controllers/DeckController.html","title":"controller - DeckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/deck.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                deck\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateDeckDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a deck for the logged user'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete the deck of the logged user'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Reset the deck of the logged user'})@Delete()\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { DeckService } from './deck.service';\nimport { CreateDeckDto } from './dto/create-deck.dto';\n\n@ApiTags('deck')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('deck')\nexport class DeckController {\n  constructor(private readonly deckService: DeckService) {}\n\n  @ApiOperation({\n    summary: 'Create a deck for the logged user',\n  })\n  @Post()\n  create(@Body() dto: CreateDeckDto, @LoggedUser() user: User) {\n    return this.deckService.create(dto, user.id);\n  }\n\n  @ApiOperation({\n    summary: 'Delete the deck of the logged user',\n  })\n  @Delete(':id')\n  delete(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.deckService.delete(id, user.id);\n  }\n\n  @ApiOperation({\n    summary: 'Reset the deck of the logged user',\n  })\n  @Delete()\n  reset(@LoggedUser() user: User) {\n    return this.deckService.reset(user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeckModule.html":{"url":"modules/DeckModule.html","title":"module - DeckModule","body":"\n                   \n\n\n\n\n    Modules\n    DeckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeckModule\n\n\n\ncluster_DeckModule_imports\n\n\n\ncluster_DeckModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nDeckModule\n\nDeckModule\n\nDeckModule -->\n\nPrismaModule->DeckModule\n\n\n\n\n\nDeckService\n\nDeckService\n\nDeckModule -->\n\nDeckService->DeckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/deck/deck.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeckController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeckService } from './deck.service';\nimport { DeckController } from './deck.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [DeckController],\n  providers: [DeckService],\n})\nexport class DeckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeckService.html":{"url":"injectables/DeckService.html","title":"injectable - DeckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/deck.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/deck/deck.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateDeckDto, loggedUserId)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUserId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateDeckDto } from './dto/create-deck.dto';\n\n@Injectable()\nexport class DeckService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(dto: CreateDeckDto, loggedUserId) {\n    async function deckLimit(limitNumber) {\n      const limit = await this.prisma.deck.findMany({\n        where: { userId: loggedUserId },\n      });\n\n      if (limit.length >= limitNumber) {\n        throw new BadRequestException('Your deck has reached its limit.');\n      }\n    }\n\n    deckLimit(3);\n    const data: Prisma.DeckCreateInput = {\n      user: {\n        connect: {\n          id: loggedUserId,\n        },\n      },\n      userToCard: {\n        connect: {\n          id: dto.utcId,\n        },\n      },\n    };\n    return await this.prisma.deck.create({ data }).catch(handleError);\n  }\n\n  async delete(id: string, userId: string) {\n    notFoundError(\n      this.prisma.deck.findUnique({ where: { id, userId } }),\n      `this deck (${id})`,\n    );\n    this.prisma.deck.delete({ where: { id, userId } }).catch(handleError);\n    return { message: 'Card sucessfuly removed.' };\n  }\n\n  async reset(userId: string) {\n    this.prisma.deck.deleteMany({ where: { userId } });\n\n    return { message: 'Your deck have been cleaned.' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Either the user doesn`t exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User`s email address', example: 'admin@blue.com.br'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User`s password for authentication', example: 'Admin2022'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'User`s email address',\n    example: 'admin@blue.com.br',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'User`s password for authentication',\n    example: 'Admin2022',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pack.html":{"url":"classes/Pack.html","title":"class - Pack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-to-card/entities/user-to-card.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/entities/user-to-card.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/entities/user-to-card.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/entities/user-to-card.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/entities/user-to-card.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user-to-card/entities/user-to-card.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Pack {\n  id?: string;\n\n  quantity: number;\n  price: number;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PackController.html":{"url":"controllers/PackController.html","title":"controller - PackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-to-card/user-to-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreatePackDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Generate a pack of cards'})@UseGuards(undefined)@ApiBearerAuth()@Post()\n                \n            \n\n            \n                \n                    Defined in src/user-to-card/user-to-card.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { CreatePackDto } from './dto/create-pack.dto';\nimport { PackService } from './user-to-card.service';\n\n@ApiTags('pack')\n@Controller('pack')\nexport class PackController {\n  constructor(private readonly packService: PackService) {}\n\n  @ApiOperation({\n    summary: 'Generate a pack of cards',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  create(@Body() dto: CreatePackDto, @LoggedUser() user: User) {\n    return this.packService.create(dto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PackModule.html":{"url":"modules/PackModule.html","title":"module - PackModule","body":"\n                   \n\n\n\n\n    Modules\n    PackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PackModule\n\n\n\ncluster_PackModule_providers\n\n\n\ncluster_PackModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nPackModule\n\nPackModule\n\nPackModule -->\n\nPrismaModule->PackModule\n\n\n\n\n\nPackService\n\nPackService\n\nPackModule -->\n\nPackService->PackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-to-card/user-to-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PackService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PackService } from './user-to-card.service';\nimport { PackController } from './user-to-card.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [PackController],\n  providers: [PackService],\n})\nexport class PackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackService.html":{"url":"injectables/PackService.html","title":"injectable - PackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-to-card/user-to-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CardGenaretor\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                CreatePack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user-to-card/user-to-card.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CardGenaretor\n                        \n                    \n                \n            \n            \n                \nCardGenaretor(list, n)\n                \n            \n\n\n            \n                \n                    Defined in src/user-to-card/user-to-card.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreatePackDto, loggedUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user-to-card/user-to-card.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatePack\n                        \n                    \n                \n            \n            \n                \nCreatePack(collection, qnt)\n                \n            \n\n\n            \n                \n                    Defined in src/user-to-card/user-to-card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qnt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreatePackDto } from './dto/create-pack.dto';\n\n@Injectable()\nexport class PackService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreatePackDto, loggedUser: User) {\n    const collection = await this.prisma.card.findMany({\n      where: { collectionId: dto.collectionId },\n    });\n\n    const list = await this.CardGenaretor(collection, 3);\n    const pack = [];\n    list.forEach((card) => {\n      pack.push(card);\n    });\n\n    // const pack = await this.CreatePack(collection, 3);\n\n    console.log(pack);\n\n    const transactions = pack.map((utc) =>\n      this.prisma.userToCard.create({\n        data: {\n          user: {\n            connect: {\n              id: loggedUser.id,\n            },\n          },\n          card: {\n            connect: {\n              id: utc.id,\n            },\n          },\n        },\n      }),\n    );\n    return this.prisma.$transaction(transactions);\n  }\n\n  CreatePack(collection, qnt) {\n    const common = [];\n    const rare = [];\n    const legendary = [];\n    const pack = [];\n\n    collection.map(function (card) {\n      if (card.rarity === 'COMMON') {\n        common.push(card);\n      }\n    });\n\n    collection.map(function (card) {\n      if (card.rarity === 'RARE') {\n        rare.push(card);\n      }\n    });\n    collection.map(function (card) {\n      if (card.rarity === 'LEGENDARY') {\n        legendary.push(card);\n      }\n    });\n\n    if (common.length == 0 || rare.length == 0 || legendary.length == 0) {\n      throw new BadRequestException('');\n    }\n\n    for (let i = 0; i = 95) {\n        const leg = this.CardGenaretor(legendary, 1);\n        pack.push(leg);\n      } else if (rarity >= 60) {\n        const rar = this.CardGenaretor(rare, 1);\n        pack.push(rar);\n      } else {\n        const com = this.CardGenaretor(common, 1);\n        pack.push(com);\n      }\n    }\n    return pack;\n  }\n\n  CardGenaretor(list, n) {\n    return new Array(n)\n      .fill(0)\n      .map(() => list[Math.floor(Math.random() * list.length)]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardDto.html":{"url":"classes/UpdateCardDto.html","title":"class - UpdateCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/dto/update-card.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCardDto } from './create-card.dto';\n\nexport class UpdateCardDto extends PartialType(CreateCardDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCollectionDto.html":{"url":"classes/UpdateCollectionDto.html","title":"class - UpdateCollectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCollectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/dto/update-collection.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCollectionDto } from './create-collection.dto';\n\nexport class UpdateCollectionDto extends PartialType(CreateCollectionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeckDto.html":{"url":"classes/UpdateDeckDto.html","title":"class - UpdateDeckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/dto/update-deck.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeckDto } from './create-deck.dto';\n\nexport class UpdateDeckDto extends PartialType(CreateDeckDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                CPF\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deck\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                ranking\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                utcs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Deck[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        utcs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserToCard[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deck } from '@prisma/client';\nimport { UserToCard } from '@prisma/client';\n\nexport class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  CPF: string;\n  imageUrl: string;\n  ranking: number;\n  balance: number;\n  isAdmin?: boolean;\n  deck?: Deck[];\n  utcs?: UserToCard[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findMyAcc\n                            \n                            \n                                findMyAlbum\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new user'})@ApiTags('create-user')@Post('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete logged user's account'})@ApiTags('user-my-account')@UseGuards(undefined)@ApiBearerAuth()@Delete('my-account')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - List all users'})@ApiTags('user-admin')@UseGuards(undefined)@ApiBearerAuth()@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMyAcc\n                        \n                    \n                \n            \n            \n                \nfindMyAcc(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get logged user's account'})@ApiTags('user-my-account')@UseGuards(undefined)@ApiBearerAuth()@Get('my-account')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMyAlbum\n                        \n                    \n                \n            \n            \n                \nfindMyAlbum(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get logged user's album'})@ApiTags('user-my-account')@UseGuards(undefined)@ApiBearerAuth()@Get('my-account/album')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - List a user by ID'})@ApiTags('user-admin')@UseGuards(undefined)@ApiBearerAuth()@Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Admin - Edit a user by ID'})@ApiTags('user-admin')@UseGuards(undefined)@ApiBearerAuth()@Delete('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Edit logged user's account'})@ApiTags('user-my-account')@UseGuards(undefined)@ApiBearerAuth()@Patch('my-account')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from '@prisma/client';\n\n@Controller()\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ApiOperation({\n    summary: 'Create a new user',\n  })\n  @ApiTags('create-user')\n  @Post('user')\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  // -----------------------------------------------ADMIN------------------------------------------------\n\n  @ApiOperation({\n    summary: 'Admin - List all users',\n  })\n  @ApiTags('user-admin')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get('user')\n  findAll(@LoggedUser() user: User) {\n    return this.usersService.findAll(user.isAdmin);\n  }\n\n  @ApiOperation({\n    summary: 'Admin - List a user by ID',\n  })\n  @ApiTags('user-admin')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get('user/:id')\n  findOne(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.usersService.findOne(id, user.isAdmin);\n  }\n\n  @ApiOperation({\n    summary: 'Admin - Edit a user by ID',\n  })\n  @ApiTags('user-admin')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete('user/:id')\n  remove(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.usersService.remove(id, user.isAdmin);\n  }\n\n  // -----------------------------------------------MY ACCOUNT------------------------------------------------\n\n  @ApiOperation({\n    summary: \"Get logged user's account\",\n  })\n  @ApiTags('user-my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get('my-account')\n  findMyAcc(@LoggedUser() user: User) {\n    return this.usersService.findMyAcc(user.id);\n  }\n\n  @ApiOperation({\n    summary: \"Get logged user's album\",\n  })\n  @ApiTags('user-my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get('my-account/album')\n  findMyAlbum(@LoggedUser() user: User) {\n    return this.usersService.findMyAlbum(user.id);\n  }\n\n  @ApiOperation({\n    summary: \"Edit logged user's account\",\n  })\n  @ApiTags('user-my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch('my-account')\n  update(@Body() updateUserDto: UpdateUserDto, @LoggedUser() user: User) {\n    return this.usersService.updateMyAcc(updateUserDto, user.id);\n  }\n\n  @ApiOperation({\n    summary: \"Delete logged user's account\",\n  })\n  @ApiTags('user-my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete('my-account')\n  delete(@LoggedUser() user: User) {\n    return this.usersService.deleteMyAcc(user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './user.service';\nimport { UsersController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMyAcc\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMyAcc\n                            \n                            \n                                    Async\n                                findMyAlbum\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateMyAcc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyAcc\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyAcc(loggedUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(loggedUser)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedUser\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMyAcc\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyAcc(loggedUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMyAlbum\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyAlbum(loggedUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyAcc\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyAcc(dto: UpdateUserDto, loggedUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loggedUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { isAdmin } from 'src/utils/is-admin.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const userList = await this.prisma.user.findMany();\n\n    const userEmail = userList.filter((user) => user.email === dto.email);\n\n    const userCPF = userList.filter((user) => user.CPF === dto.CPF);\n\n    if (userEmail.length > 0 || userCPF.length > 0) {\n      throw new BadRequestException('This e-mail/CPF is already in use.');\n    }\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 10),\n      CPF: dto.CPF,\n      imageUrl: dto.imageUrl,\n      ranking: dto.ranking,\n      balance: dto.balance,\n      isAdmin: dto.isAdmin,\n    };\n\n    return await this.prisma.user\n      .create({\n        data,\n        select: {\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          imageUrl: false,\n          balance: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  // -----------------------------------------------ADMIN------------------------------------------------\n\n  async findAll(loggedUser) {\n    isAdmin(loggedUser);\n\n    return await this.prisma.user\n      .findMany({\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: false,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: false,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findOne(id: string, isAdmin: boolean) {\n    if (!isAdmin) {\n      throw new UnauthorizedException('Access denied!');\n    }\n    const user = await this.prisma.user\n      .findUnique({\n        where: {\n          id,\n        },\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: true,\n        },\n      })\n      .catch(handleError);\n\n    notFoundError(user, `this user (${id})`);\n\n    return user;\n  }\n\n  async remove(id: string, isAdmin: boolean) {\n    if (!isAdmin) {\n      throw new UnauthorizedException('Access denied!');\n    }\n    notFoundError(\n      await this.prisma.user.findUnique({ where: { id } }),\n      `this user (${id})`,\n    );\n\n    await this.prisma.user\n      .delete({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n    return { message: 'User successfully deleted!' };\n  }\n\n  // -----------------------------------------------MY ACCOUNT------------------------------------------------\n\n  async findMyAcc(loggedUser: string) {\n    const user = await this.prisma.user\n      .findUnique({\n        where: {\n          id: loggedUser,\n        },\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: true,\n          deck: {\n            select: {\n              id: true,\n              userToCard: {\n                select: {\n                  id: true,\n                  card: {\n                    select: {\n                      id: true,\n                      name: true,\n                      rarity: true,\n                      type: true,\n                      cardAttack: true,\n                      cardDef: true,\n                      collection: {\n                        select: {\n                          id: true,\n                          name: true,\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n          _count: {\n            select: {\n              utcs: true,\n            },\n          },\n        },\n      })\n      .catch(handleError);\n\n    return user;\n  }\n\n  async findMyAlbum(loggedUser: string) {\n    const user = await this.prisma.user\n      .findUnique({\n        where: {\n          id: loggedUser,\n        },\n        select: {\n          id: true,\n          name: true,\n          utcs: {\n            select: {\n              id: true,\n              card: {\n                select: {\n                  id: true,\n                  name: true,\n                  rarity: true,\n                  type: true,\n                  cardAttack: true,\n                  cardDef: true,\n                  collection: {\n                    select: {\n                      id: true,\n                      name: true,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n\n    return user;\n  }\n\n  async updateMyAcc(dto: UpdateUserDto, loggedUser: string) {\n    if (dto.password) {\n      dto.password = await bcrypt.hash(dto.password, 10);\n    }\n\n    const data: Prisma.UserUpdateInput = {\n      ...dto,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id: loggedUser },\n        data,\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async deleteMyAcc(loggedUser: string) {\n    await this.prisma.user\n      .delete({\n        where: {\n          id: loggedUser,\n        },\n      })\n      .catch(handleError);\n    return { message: 'Your account was successfully deleted!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/card/card.controller.ts\n            \n            controller\n            CardController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/card/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/card/dto/create-card.dto.ts\n            \n            class\n            CreateCardDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/card/dto/update-card.dto.ts\n            \n            class\n            UpdateCardDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/card/entities/card.entity.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/collection/collection.controller.ts\n            \n            controller\n            CollectionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/collection/collection.service.ts\n            \n            injectable\n            CollectionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/collection/dto/create-collection.dto.ts\n            \n            class\n            CreateCollectionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/collection/dto/update-collection.dto.ts\n            \n            class\n            UpdateCollectionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/collection/entities/collection.entity.ts\n            \n            class\n            Collection\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/deck/deck.controller.ts\n            \n            controller\n            DeckController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/deck/deck.service.ts\n            \n            injectable\n            DeckService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/deck/dto/create-deck.dto.ts\n            \n            class\n            CreateDeckDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/deck/dto/update-deck.dto.ts\n            \n            class\n            UpdateDeckDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/deck/entities/deck.entity.ts\n            \n            class\n            Deck\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user-to-card/dto/create-pack.dto.ts\n            \n            class\n            CreatePackDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user-to-card/entities/user-to-card.entity.ts\n            \n            class\n            Pack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user-to-card/user-to-card.controller.ts\n            \n            controller\n            PackController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user-to-card/user-to-card.service.ts\n            \n            injectable\n            PackService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/is-admin.util.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/not-found.util.ts\n            \n            function\n            notFoundError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                        \n                            isAdmin   (src/.../is-admin.util.ts)\n                        \n                        \n                            notFoundError   (src/.../not-found.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/is-admin.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(data: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/not-found.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notFoundError\n                        \n                    \n                \n            \n            \n                \nnotFoundError(data: any, obj: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    obj\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSuper Trunfo\nSuper trunfo is an online Trading Card Game that has its own currency, and an unique market system.\nIt also has a ranking mechanism, allowing players to face challenging matches.\n🚀 Deploy\nDeploy can be found here:\nHeroku deploy\n📋 Requirements\nIf you want to run it locally instead:\n🔧 Installation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod📦 Documentation\nDocumentation can be found below:\nLINK\n🛠️ Built with:\n\nJavaScript\nNodeJs\nTypeScript\nNestJs\nSwagger\nCompodocs\n\n📌 CHANGELOG / TODO\n\nChangelog.\nTodo.\n\n✒️ Authored by:\n\nDaniel Vinhas\nLeonardo Tinoco\nMarcelo Santos\n\n📄 License\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_DeckModule\n\n\n\ncluster_DeckModule_providers\n\n\n\ncluster_PackModule\n\n\n\ncluster_PackModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCardModule\n\nCardModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nDeckModule\n\nDeckModule\n\nAppModule -->\n\nDeckModule->AppModule\n\n\n\n\n\nPackModule\n\nPackModule\n\nAppModule -->\n\nPackModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nCardModule -->\n\nPrismaModule->CardModule\n\n\n\nCollectionModule -->\n\nPrismaModule->CollectionModule\n\n\n\nDeckModule -->\n\nPrismaModule->DeckModule\n\n\n\nPackModule -->\n\nPrismaModule->PackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\nDeckService\n\nDeckService\n\nDeckModule -->\n\nDeckService->DeckModule\n\n\n\n\n\nPackService\n\nPackService\n\nPackModule -->\n\nPackService->PackModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Daniel Vinhas, Leonardo Tinoco, Marcelo Santos\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\n Test cpf & email validator on create user endpoint\n Create [User] Battle\n Create Marketplace\n Create Seed\n\nIn Progress\n\n Add findAll 'myaccount/cards' [User] controller\n Change '/GET' findOneCollection return\n Add findAll 'cards' [Card] controller\n Refactor findOne [Collection] controller (select cards[])\n\nDone ✓\n\n Schema relation\n Refactor [User] service \n- [x] Create [Admin] endpoints \n- [x] Create [MyAccount] endpoints \n- [x] Fix Update myAccount [User] \n- [x] Create ApiOperations [User]\n- [x] Add findOne 'myaccount/album' [User] controller\n Refactor [Collection] service \n- [x] Fix Create [Collection] unique name \n- [x] Remove AuthGuard [collection] findAll & findOne \n- [x] Create ApiOperations [Collection]\n Refactor [Deck] service\n- [x] Create ApiOperations [Deck]\n Refactor [Card] service - [x] Treat Rarity input [Card]\n Refactor [Pack] service - [x] Create function pack() - [x] Create ApiOperations [Pack]\n Reorganize Swagger\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
