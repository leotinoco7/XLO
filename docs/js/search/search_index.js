var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.266,1,2.54]],["body/controllers/AppController.html",[0,2.048,1,4.108,2,1.648,3,0.328,4,0.296,5,0.234,6,4.093,7,0.697,8,1.846,9,5.79,10,1.737,11,0.02,12,4.093,13,5.938,14,5.938,15,4.526,16,0.785,17,4.777,18,1.485,19,0.627,20,0.98,21,4.526,22,2.621,23,1.273,24,3.803,25,4.093,26,4.777,27,0.328,28,0.173,29,1.833,30,1.737,31,3.642,32,1.564,33,4.777,34,0.016,35,0.016]],["title/modules/AppModule.html",[36,1.202,37,2.54]],["body/modules/AppModule.html",[1,3.989,2,1.756,3,0.259,4,0.234,5,0.185,11,0.02,19,0.687,20,0.774,24,3.912,25,3.23,27,0.259,28,0.137,34,0.014,35,0.014,36,1.667,37,5.148,38,1.616,39,2.183,40,3.23,41,3.23,42,3.23,43,4.224,44,4.224,45,4.224,46,4.224,47,4.224,48,2.849,49,4.224,50,2.456,51,1.818,52,1.712,53,3.77,54,2.615,55,2.793,56,3.77,57,3.77,58,3.77,59,3.77,60,3.77,61,3.77,62,3.77,63,3.77]],["title/injectables/AppService.html",[24,2.162,64,1.03]],["body/injectables/AppService.html",[3,0.332,4,0.3,5,0.237,7,0.706,8,1.86,9,5.126,11,0.02,15,4.562,16,0.795,18,1.504,19,0.469,20,0.993,24,3.523,27,0.332,28,0.176,32,1.584,34,0.016,35,0.016,64,1.678,65,2.197,66,4.144,67,5.984,68,1.51,69,4.838,70,1.584,71,1.047,72,0.75,73,1.163,74,5.984,75,5.984,76,4.838,77,4.838,78,4.144,79,4.838]],["title/controllers/AuthController.html",[0,1.266,80,2.54]],["body/controllers/AuthController.html",[0,1.248,2,1.248,3,0.248,4,0.224,5,0.177,7,0.528,8,1.54,10,1.801,11,0.02,16,0.814,18,1.54,19,0.664,20,0.743,21,4.304,22,1.985,23,0.964,27,0.248,28,0.131,29,1.389,30,1.316,31,3.776,32,1.621,34,0.013,35,0.013,70,1.621,71,1.072,72,0.768,73,1.19,80,3.427,81,3.101,82,2.131,83,3.62,84,4.628,85,4.953,86,3.101,87,4.173,88,3.62,89,4.953,90,4.953,91,4.953,92,3.776,93,4.953,94,4.953,95,3.62,96,3.427,97,3.62,98,2.976,99,3.62,100,4.953,101,4.953,102,4.243,103,4.243,104,3.62,105,3.62,106,1.985,107,3.62,108,3.62,109,2.916,110,2.131,111,2.131,112,1.316,113,2.916,114,3.101,115,3.324,116,3.101,117,2.3,118,3.101,119,3.101,120,3.101,121,2.759,122,3.62,123,3.62,124,3.62,125,3.62,126,3.62,127,3.62,128,3.62,129,2.131,130,3.62,131,3.62]],["title/modules/AuthModule.html",[36,1.202,43,2.334]],["body/modules/AuthModule.html",[2,1.888,3,0.288,4,0.26,5,0.206,11,0.02,19,0.677,20,0.863,27,0.288,28,0.153,34,0.015,35,0.015,36,1.792,38,1.801,39,2.346,43,4.587,48,2.938,50,2.639,51,2.027,52,1.909,54,2.81,55,3.002,80,4.21,112,1.528,115,4.034,116,3.601,132,3.601,133,4.203,134,3.601,135,4.356,136,4.203,137,4.203,138,2.474,139,4.203,140,3.204,141,2.474,142,4.203,143,2.474,144,2.474,145,2.027,146,4.203,147,4.203,148,3.601,149,4.203,150,4.203,151,4.203]],["title/injectables/AuthService.html",[64,1.03,115,2.162]],["body/injectables/AuthService.html",[3,0.259,4,0.234,5,0.185,7,0.55,8,1.583,11,0.02,16,0.837,18,1.172,19,0.645,20,0.774,27,0.259,28,0.137,30,1.852,32,1.234,34,0.014,35,0.014,64,1.428,65,1.712,70,1.667,71,1.102,72,0.789,73,1.224,84,3.882,86,4.363,87,4.224,92,2.874,96,3.523,98,2.472,115,2.998,117,2.396,118,3.23,119,3.23,120,3.23,140,2.874,152,3.23,153,2.961,154,2.793,155,2.068,156,2.502,157,6.794,158,3.77,159,2.793,160,3.77,161,3.23,162,2.068,163,3.882,164,4.363,165,2.961,166,3.395,167,3.395,168,2.615,169,2.874,170,3.882,171,3.236,172,5.092,173,4.363,174,5.092,175,5.092,176,3.77,177,3.882,178,1.446,179,3.77]],["title/classes/Card.html",[28,0.133,180,1.771]],["body/classes/Card.html",[3,0.299,4,0.27,5,0.214,7,0.636,11,0.02,16,1.172,27,0.299,28,0.158,34,0.015,35,0.015,68,1.543,71,1.34,72,1.133,73,1.663,180,2.702,181,1.287,182,3.733,183,2.037,184,5.305,185,5.305,186,3.935,187,2.136,188,5.305,189,3.935,190,2.801,191,4.358,192,4.358,193,3.848,194,4.358,195,4.358,196,4.358,197,4.358,198,4.358,199,4.358]],["title/controllers/CardController.html",[0,1.266,200,2.54]],["body/controllers/CardController.html",[0,1.051,2,1.051,3,0.209,4,0.189,5,0.149,7,0.445,8,1.364,10,2.169,11,0.02,12,2.61,16,0.98,18,1.854,19,0.621,20,0.625,21,4.736,22,1.671,23,0.812,27,0.209,28,0.111,29,1.169,30,1.108,31,4.547,32,1.952,34,0.012,35,0.012,68,1.445,70,1.842,71,1.218,72,0.872,73,1.352,82,1.793,96,3.036,106,2.407,109,2.583,110,1.793,111,1.793,112,1.108,113,3.313,129,3.028,178,1.973,180,3.267,187,2.391,200,3.036,201,2.61,202,1.842,203,2.556,204,1.993,205,1.993,206,1.564,207,3.313,208,3.046,209,3.046,210,2.996,211,1.564,212,3.046,213,3.036,214,3.046,215,3.345,216,2.407,217,3.046,218,1.383,219,3.046,220,3.759,221,3.046,222,1.383,223,3.576,224,3.046,225,4.388,226,3.046,227,1.936,228,1.936,229,3.028,230,2.61,231,1.383,232,3.345,233,1.383,234,2.61,235,3.046,236,3.046,237,1.936,238,3.046,239,3.046,240,1.936,241,1.936,242,3.046,243,1.936,244,1.936,245,3.046,246,1.936,247,2.107,248,3.046]],["title/modules/CardModule.html",[36,1.202,44,2.334]],["body/modules/CardModule.html",[2,1.99,3,0.313,4,0.283,5,0.224,11,0.02,19,0.666,20,0.937,27,0.313,28,0.166,34,0.015,35,0.015,36,1.889,38,1.957,39,2.473,44,4.574,48,3.002,50,2.783,51,2.201,52,2.073,54,2.963,55,3.165,112,1.66,138,2.687,141,2.687,143,2.687,144,2.687,145,2.201,200,4.378,229,4.123,230,3.911,249,3.911,250,3.911,251,4.565,252,4.565,253,4.565]],["title/injectables/CardService.html",[64,1.03,229,2.162]],["body/injectables/CardService.html",[3,0.201,4,0.182,5,0.144,7,0.428,8,1.328,11,0.02,16,1.008,18,1.827,19,0.614,20,0.602,27,0.201,28,0.107,29,1.126,30,1.067,32,1.924,34,0.011,35,0.011,64,1.198,65,1.333,68,1.432,70,1.924,71,1.272,72,0.911,73,1.413,96,2.956,153,3.623,154,1.61,155,1.61,156,2.241,159,2.343,162,1.61,165,2.84,168,3.018,178,1.932,180,2.667,187,2.348,202,1.398,203,2.512,204,1.94,205,2.287,206,2.193,207,3.256,210,2.958,211,2.193,215,2.238,218,1.94,222,1.94,223,3.515,229,2.515,231,1.333,232,3.257,233,1.333,234,2.515,254,2.515,255,2.936,256,2.936,257,3.256,258,2.936,259,2.936,260,2.936,261,2.936,262,1.61,263,1.61,264,1.866,265,2.763,266,1.61,267,1.866,268,2.936,269,3.628,270,3.515,271,2.936,272,3.257,273,5.036,274,2.031,275,2.238,276,4.272]],["title/classes/Collection.html",[28,0.133,216,2.014]],["body/classes/Collection.html",[3,0.315,4,0.284,5,0.225,7,0.67,11,0.019,16,1.153,27,0.315,28,0.167,34,0.015,35,0.015,68,1.442,71,1.373,72,1.087,73,1.686,181,1.356,183,2.106,186,4.033,187,2.188,189,4.033,190,2.856,193,3.923,216,3.177,277,3.934,278,5.436,279,5.436,280,4.592,281,4.592,282,4.592,283,4.592,284,4.592,285,4.592]],["title/controllers/CollectionController.html",[0,1.266,286,2.54]],["body/controllers/CollectionController.html",[0,1.153,2,1.153,3,0.229,4,0.207,5,0.164,7,0.488,8,1.457,10,2.247,11,0.02,16,1.016,18,1.921,19,0.622,20,0.686,22,1.834,23,0.891,27,0.229,28,0.121,29,1.283,30,1.216,32,2.023,34,0.012,35,0.012,68,1.477,70,1.921,71,1.27,72,0.91,73,1.411,82,1.969,106,2.572,109,2.76,110,1.969,111,1.969,112,1.216,113,3.771,129,3.638,178,2.077,187,2.209,202,1.535,203,2.665,204,2.129,205,2.129,206,1.717,210,3.089,211,1.717,216,1.834,218,1.519,222,1.519,227,2.125,228,2.125,231,1.519,233,1.519,237,2.125,240,2.125,241,2.125,243,2.125,244,2.125,246,2.125,247,2.314,286,3.244,287,2.865,288,3.455,289,2.865,290,3.344,291,2.549,292,3.344,293,2.865,294,3.344,295,2.865,296,3.344,297,3.73,298,2.549,299,3.344,300,3.187,301,2.865,302,3.574,303,3.344,304,3.344,305,3.344,306,3.344,307,3.344,308,3.344,309,3.344]],["title/modules/CollectionModule.html",[36,1.202,45,2.334]],["body/modules/CollectionModule.html",[2,1.99,3,0.313,4,0.283,5,0.224,11,0.02,19,0.666,20,0.937,27,0.313,28,0.166,34,0.015,35,0.015,36,1.889,38,1.957,39,2.473,45,4.574,48,3.002,50,2.783,51,2.201,52,2.073,54,2.963,55,3.165,112,1.66,138,2.687,141,2.687,143,2.687,144,2.687,145,2.201,286,4.378,300,4.123,301,3.911,310,3.911,311,3.911,312,4.565,313,4.565,314,4.565]],["title/injectables/CollectionService.html",[64,1.03,300,2.162]],["body/injectables/CollectionService.html",[3,0.204,4,0.184,5,0.146,7,0.433,8,1.339,11,0.02,16,1.012,18,1.835,19,0.617,20,0.609,27,0.204,28,0.108,29,1.139,30,1.08,32,1.933,34,0.011,35,0.011,64,1.208,65,1.349,68,1.436,70,1.933,71,1.278,72,0.915,73,1.419,153,3.629,154,1.629,155,1.629,156,2.254,159,2.363,162,1.629,165,2.212,168,2.855,178,1.945,187,2.324,202,1.66,203,2.526,204,1.956,205,2.302,210,2.682,211,2.212,216,3.239,218,1.956,222,1.956,231,1.349,233,1.349,257,3.476,262,1.629,263,1.629,264,1.887,265,2.781,266,1.629,267,1.887,269,2.781,270,3.534,274,2.054,275,2.264,288,3.625,297,3.534,300,2.536,302,3.284,315,2.544,316,2.97,317,4.308,318,2.97,319,2.97,320,2.97,321,2.97,322,2.97,323,2.97,324,5.561,325,2.97,326,2.97,327,2.97,328,4.308,329,2.264,330,2.544,331,2.264]],["title/classes/CreateCardDto.html",[28,0.133,207,2.162]],["body/classes/CreateCardDto.html",[3,0.248,4,0.224,5,0.177,7,0.527,10,2.31,11,0.02,16,1.044,19,0.48,23,0.962,27,0.248,28,0.18,34,0.013,35,0.013,68,1.42,71,1.375,72,1.088,180,3.385,181,1.066,183,1.798,184,4.832,185,4.832,188,5.443,190,2.6,207,2.911,332,5.621,333,2.753,334,3.74,335,6.066,336,4.237,337,3.385,338,3.611,339,3.611,340,4.237,341,3.611,342,3.611,343,4.945,344,3.611,345,3.611,346,3.611,347,3.611,348,4.945,349,4.945,350,3.611,351,3.611,352,3.599,353,3.902,354,3.902,355,3.855,356,1.981,357,3.064,358,3.611,359,3.611,360,3.611,361,3.611,362,3.094]],["title/classes/CreateCollectionDto.html",[28,0.133,288,2.162]],["body/classes/CreateCollectionDto.html",[3,0.286,4,0.258,5,0.204,7,0.608,10,2.204,11,0.02,16,0.996,19,0.528,23,1.111,27,0.286,28,0.198,34,0.014,35,0.014,68,1.178,71,1.443,72,0.94,180,2.625,181,1.231,183,1.979,190,3.028,216,2.986,278,5.193,279,5.193,288,3.205,334,3.568,337,3.297,352,3.525,353,4.194,355,3.46,356,2.287,357,2.923,363,5.506,364,3.178,365,4.169,366,4.169,367,5.444,368,4.169,369,4.169,370,2.986,371,4.169,372,4.169,373,4.899,374,4.169,375,3.571,376,3.178]],["title/classes/CreateDeckDto.html",[28,0.133,377,2.162]],["body/classes/CreateDeckDto.html",[3,0.261,4,0.236,5,0.187,7,0.556,10,2.254,11,0.02,16,1.019,19,0.497,23,1.015,27,0.261,28,0.186,34,0.014,35,0.014,68,1.11,71,1.401,72,0.961,180,2.472,181,1.124,183,1.864,190,2.857,334,3.65,336,4.392,337,3.339,340,4.392,352,3.55,354,4.289,355,3.258,356,2.089,357,2.99,377,3.018,378,5.544,379,2.903,380,4.965,381,4.965,382,4.965,383,5.126,384,3.908,385,3.808,386,3.808,387,5.312,388,3.924,389,3.808,390,3.808,391,3.808,392,3.808,393,4.392,394,3.808,395,5.126,396,3.808,397,4.726,398,3.262,399,3.808,400,3.808,401,3.262,402,3.808,403,3.808]],["title/classes/CreatePackDto.html",[28,0.133,404,2.162]],["body/classes/CreatePackDto.html",[3,0.308,4,0.278,5,0.22,7,0.655,10,2.075,11,0.02,16,0.938,19,0.554,23,1.195,27,0.308,28,0.207,34,0.015,35,0.015,72,0.885,181,1.324,183,2.075,190,2.832,215,4.35,334,3.359,337,3.186,352,3.443,353,3.948,354,4.342,356,2.46,357,2.752,370,3.624,384,4.785,397,4.35,404,3.359,405,5.377,406,3.419,407,5.2,408,4.485,409,4.485,410,5.706,411,4.485,412,4.485,413,3.842,414,4.485]],["title/classes/CreateUserDto.html",[28,0.133,415,2.162]],["body/classes/CreateUserDto.html",[3,0.196,4,0.177,5,0.14,7,0.417,10,2.341,11,0.02,16,1.058,19,0.407,23,0.762,27,0.196,28,0.152,34,0.011,35,0.011,68,1.446,71,1.259,72,0.998,73,1.007,98,1.796,166,3.423,167,2.92,181,0.844,183,1.524,190,2.816,334,3.791,337,3.41,352,3.604,353,2.899,354,3.432,355,3.862,356,1.568,357,3.105,373,4.433,397,3.195,398,2.45,415,2.467,416,5.629,417,2.18,418,4.433,419,4.433,420,3.782,421,3.782,422,4.023,423,4.633,424,2.859,425,2.859,426,5.517,427,4.191,428,2.859,429,2.859,430,2.859,431,2.859,432,2.859,433,4.191,434,2.859,435,2.859,436,3.59,437,4.961,438,3.59,439,2.859,440,2.859,441,2.859,442,2.859,443,4.191,444,2.859,445,2.859,446,3.59,447,3.59,448,4.191,449,2.859,450,2.859,451,4.191,452,3.59,453,4.191,454,2.45,455,2.45,456,2.859,457,2.859,458,2.859,459,2.45,460,2.859,461,2.859,462,2.18,463,2.859,464,4.191,465,2.45,466,2.45,467,2.859,468,2.859,469,2.859,470,2.859,471,2.45]],["title/classes/Deck.html",[28,0.133,388,2.162]],["body/classes/Deck.html",[3,0.305,4,0.275,5,0.218,7,0.649,11,0.019,16,1.162,27,0.305,28,0.161,34,0.015,35,0.015,68,1.425,71,1.353,72,1.096,73,1.721,181,1.313,183,2.063,186,3.973,187,2.156,189,3.973,190,2.982,193,3.876,380,5.355,381,5.355,382,5.355,388,3.341,472,3.809,473,4.446,474,4.446,475,4.446,476,4.446,477,4.446,478,4.446,479,4.446]],["title/controllers/DeckController.html",[0,1.266,480,2.54]],["body/controllers/DeckController.html",[0,1.176,2,1.176,3,0.234,4,0.211,5,0.167,7,0.498,8,1.478,10,2.263,11,0.02,16,1.023,18,1.935,19,0.626,20,0.7,22,1.871,23,0.909,27,0.234,28,0.124,29,1.309,30,1.24,32,2.038,34,0.013,35,0.013,68,1.483,70,1.938,71,1.281,72,0.918,73,1.423,82,2.008,106,2.608,109,3.221,110,2.008,111,2.008,112,1.24,113,2.799,129,2.008,178,2.099,187,2.223,202,1.556,203,2.688,204,2.159,205,2.159,206,1.751,210,3.109,211,1.751,218,1.549,222,1.549,227,2.168,228,2.168,231,1.549,233,1.549,237,2.168,240,3.021,241,2.168,243,3.021,244,2.168,246,3.021,247,2.36,377,3.485,388,2.008,480,3.289,481,2.922,482,3.411,483,3.411,484,3.411,485,3.411,486,3.762,487,3.411,488,3.221,489,2.922,490,3.624,491,3.411,492,3.411,493,3.411,494,3.411,495,3.411,496,3.411,497,3.411]],["title/modules/DeckModule.html",[36,1.202,46,2.334]],["body/modules/DeckModule.html",[2,1.99,3,0.313,4,0.283,5,0.224,11,0.02,19,0.666,20,0.937,27,0.313,28,0.166,34,0.015,35,0.015,36,1.889,38,1.957,39,2.473,46,4.574,48,3.002,50,2.783,51,2.201,52,2.073,54,2.963,55,3.165,112,1.66,138,2.687,141,2.687,143,2.687,144,2.687,145,2.201,480,4.378,488,4.123,489,3.911,498,3.911,499,4.565,500,3.911,501,4.565,502,4.565]],["title/injectables/DeckService.html",[64,1.03,488,2.162]],["body/injectables/DeckService.html",[3,0.206,4,0.186,5,0.147,7,0.438,8,1.349,11,0.02,16,1.016,18,1.843,19,0.6,20,0.615,27,0.206,28,0.109,29,1.15,30,1.09,32,1.94,34,0.012,35,0.012,64,1.217,65,1.362,68,1.439,70,1.94,71,1.283,72,0.919,73,1.425,153,3.635,154,1.645,155,1.645,156,2.264,159,2.38,162,1.645,165,2.617,168,2.868,178,1.664,187,2.329,202,1.42,203,2.537,204,1.97,205,2.315,206,2.227,210,2.98,211,2.227,218,1.97,222,1.97,231,1.362,233,1.362,257,3.489,262,1.645,263,1.645,264,1.906,265,2.796,266,1.645,267,1.906,269,3.579,270,3.24,272,3.307,274,2.074,329,2.286,330,2.569,331,2.286,377,3.289,388,3.001,486,3.55,488,2.554,490,3.307,503,2.569,504,2.999,505,2.999,506,2.999,507,2.999,508,2.999,509,2.999,510,2.999,511,2.999,512,2.999,513,4.338,514,4.338,515,2.999]],["title/injectables/JwtStrategy.html",[64,1.03,135,2.334]],["body/injectables/JwtStrategy.html",[3,0.278,4,0.251,5,0.199,7,0.591,8,1.66,11,0.02,16,0.878,18,1.258,19,0.617,20,0.831,27,0.278,28,0.147,29,1.553,30,1.472,32,1.325,34,0.014,35,0.014,64,1.498,65,1.838,68,0.876,70,1.748,71,1.156,72,0.985,73,1.283,98,2.723,112,1.472,135,3.394,145,1.952,148,3.468,153,3.068,154,2.221,155,2.221,156,2.575,159,2.929,161,4.575,162,2.221,165,2.078,166,3.143,168,2.078,169,3.086,170,3.086,171,2.573,177,3.086,178,1.553,257,2.383,516,3.468,517,5.34,518,4.048,519,5.34,520,5.34,521,4.048,522,4.048,523,4.048,524,4.048,525,4.048,526,3.468,527,2.221,528,4.048,529,3.468,530,4.048,531,4.048,532,4.048,533,3.468,534,4.048,535,4.048,536,4.048,537,4.048,538,4.048]],["title/classes/LoginDto.html",[28,0.133,87,2.334]],["body/classes/LoginDto.html",[3,0.308,4,0.278,5,0.22,7,0.655,10,2.075,11,0.02,16,0.938,19,0.554,23,1.195,27,0.308,28,0.207,34,0.015,35,0.015,68,1.43,72,0.885,87,3.627,166,4.015,167,4.015,181,1.324,183,2.075,337,3.186,352,3.443,355,3.989,356,2.46,357,2.752,373,4.785,426,5.66,452,4.889,454,4.889,455,4.889,539,3.842,540,4.485,541,4.889,542,4.485,543,4.485,544,5.706,545,4.485]],["title/classes/LoginResponseDto.html",[28,0.133,117,2.334]],["body/classes/LoginResponseDto.html",[3,0.314,4,0.284,5,0.225,7,0.668,10,2.102,11,0.02,16,0.95,19,0.561,23,1.22,27,0.314,28,0.166,34,0.015,35,0.015,68,1.251,72,0.896,84,4.407,92,4.831,98,3.004,102,4.953,103,4.953,114,3.922,117,3.674,145,2.788,181,1.352,183,2.102,334,3.403,337,2.788,352,3.476,357,2.788,546,5.429,547,3.922,548,5.782,549,5.782,550,5.782,551,4.578,552,5.782,553,4.578]],["title/classes/Pack.html",[28,0.133,370,2.014]],["body/classes/Pack.html",[3,0.324,4,0.292,5,0.231,7,0.689,11,0.019,16,1.138,27,0.324,28,0.171,34,0.016,35,0.016,68,1.275,72,1.074,73,1.698,181,1.393,183,2.142,186,4.083,187,2.216,189,4.083,190,2.884,193,3.961,370,3.232,384,4.898,407,4.898,554,4.043,555,4.719,556,4.719,557,4.719,558,4.719,559,4.719]],["title/controllers/PackController.html",[0,1.266,560,2.54]],["body/controllers/PackController.html",[0,1.166,2,1.166,3,0.232,4,0.209,5,0.166,7,0.493,8,1.469,10,2.256,11,0.02,16,1.02,18,1.929,19,0.624,20,0.694,22,1.854,23,0.901,27,0.232,28,0.123,29,1.297,30,1.229,32,2.031,34,0.013,35,0.013,68,1.48,70,1.93,71,1.276,72,0.914,73,1.417,82,1.99,106,2.592,109,2.781,110,1.99,111,1.99,112,1.229,113,3.471,129,3.206,178,2.09,187,2.217,202,1.547,203,2.678,204,2.146,205,2.146,206,1.736,210,3.1,211,1.736,218,1.535,222,1.535,227,2.149,228,2.149,231,1.535,233,1.535,237,2.149,240,3.003,241,2.149,243,2.149,244,2.149,246,2.149,247,2.339,289,2.896,291,2.577,298,2.577,370,1.854,404,3.471,560,3.269,561,2.896,562,3.381,563,3.381,564,3.381,565,3.381,566,3.748,567,3.381,568,3.206,569,2.896,570,3.602,571,3.381,572,3.381,573,3.381,574,3.381,575,3.381,576,3.381,577,3.381]],["title/modules/PackModule.html",[36,1.202,47,2.334]],["body/modules/PackModule.html",[2,1.99,3,0.313,4,0.283,5,0.224,11,0.02,19,0.666,20,0.937,27,0.313,28,0.166,34,0.015,35,0.015,36,1.889,38,1.957,39,2.473,47,4.574,48,3.002,50,2.783,51,2.201,52,2.073,54,2.963,55,3.165,112,1.66,138,2.687,141,2.687,143,2.687,144,2.687,145,2.201,560,4.378,568,4.123,569,3.911,578,3.911,579,3.911,580,4.565,581,4.565,582,4.565]],["title/injectables/PackService.html",[64,1.03,568,2.162]],["body/injectables/PackService.html",[3,0.247,4,0.223,5,0.176,7,0.525,8,1.532,11,0.02,16,1.077,18,1.972,19,0.636,20,0.738,27,0.247,28,0.131,29,1.379,30,1.307,34,0.013,35,0.013,64,1.383,65,1.632,68,1.418,70,2.076,71,1.373,72,0.983,73,1.524,153,3.636,154,1.971,155,1.971,156,2.453,159,2.704,162,1.971,165,1.845,168,1.845,178,1.891,187,1.94,202,1.842,203,2.555,204,2.239,205,2.239,206,2.531,210,2.919,211,1.845,218,1.632,222,1.632,231,1.632,233,1.632,257,3.734,262,1.971,263,1.971,264,2.284,265,1.971,266,1.971,267,2.284,269,1.971,270,2.284,370,1.971,404,3.564,566,3.575,568,2.902,570,3.758,583,3.079,584,3.594,585,3.594,586,3.594,587,3.594,588,3.594,589,3.594,590,3.079,591,3.594,592,3.594]],["title/modules/PrismaModule.html",[36,1.202,48,1.574]],["body/modules/PrismaModule.html",[3,0.336,4,0.303,5,0.24,11,0.02,19,0.585,20,1.005,27,0.336,28,0.178,34,0.016,35,0.016,36,1.974,38,2.1,39,2.585,48,3.096,50,2.908,51,2.362,52,2.225,54,3.096,156,3.027,593,4.197,594,4.197,595,4.197,596,4.899,597,6.031,598,4.899]],["title/injectables/PrismaService.html",[64,1.03,156,1.488]],["body/injectables/PrismaService.html",[3,0.311,4,0.281,5,0.223,7,0.662,8,1.787,11,0.02,16,0.945,18,1.787,19,0.558,20,0.931,27,0.311,28,0.165,34,0.015,35,0.015,64,1.613,65,2.061,70,1.485,71,0.982,72,0.703,73,1.091,153,3.647,156,2.33,168,2.952,527,3.154,599,3.888,600,6.311,601,5.749,602,6.994,603,5.749,604,6.635,605,4.538,606,3.888,607,4.538,608,3.888,609,4.538,610,4.538,611,4.538,612,4.538]],["title/classes/UpdateCardDto.html",[28,0.133,223,2.334]],["body/classes/UpdateCardDto.html",[3,0.37,4,0.334,5,0.265,11,0.02,19,0.621,23,1.438,27,0.37,28,0.196,34,0.017,35,0.017,181,1.594,202,1.767,207,3.177,223,4.064,232,4.115,333,4.115,527,2.961,613,4.624,614,3.43,615,5.398]],["title/classes/UpdateCollectionDto.html",[28,0.133,297,2.334]],["body/classes/UpdateCollectionDto.html",[3,0.37,4,0.334,5,0.265,11,0.02,19,0.621,23,1.438,27,0.37,28,0.196,34,0.017,35,0.017,181,1.594,202,1.767,288,3.177,297,4.064,302,4.115,364,4.115,527,2.961,614,3.43,616,4.624,617,5.398]],["title/classes/UpdateDeckDto.html",[28,0.133,486,2.334]],["body/classes/UpdateDeckDto.html",[3,0.37,4,0.334,5,0.265,11,0.02,19,0.621,23,1.438,27,0.37,28,0.196,34,0.017,35,0.017,181,1.594,202,1.767,377,3.177,379,4.115,486,4.064,490,4.115,527,2.961,614,3.43,618,4.624,619,5.398]],["title/classes/UpdatePackDto.html",[28,0.133,566,2.334]],["body/classes/UpdatePackDto.html",[3,0.37,4,0.334,5,0.265,11,0.02,19,0.621,23,1.438,27,0.37,28,0.196,34,0.017,35,0.017,181,1.594,202,1.767,404,3.177,406,4.115,527,2.961,566,4.064,570,4.115,614,3.43,620,4.624,621,5.398]],["title/classes/UpdateUserDto.html",[28,0.133,622,2.334]],["body/classes/UpdateUserDto.html",[3,0.37,4,0.334,5,0.265,11,0.02,19,0.621,23,1.438,27,0.37,28,0.196,34,0.017,35,0.017,181,1.594,202,1.767,415,3.177,417,4.115,527,2.961,614,3.43,622,4.064,623,4.624,624,4.115,625,5.398]],["title/classes/User.html",[28,0.133,98,1.574]],["body/classes/User.html",[3,0.276,4,0.249,5,0.197,7,0.588,11,0.02,16,1.187,27,0.276,28,0.146,34,0.014,35,0.014,68,1.573,71,1.29,72,1.119,73,1.685,98,2.281,166,3.509,167,3.509,181,1.189,183,1.935,186,3.788,187,2.056,189,3.788,190,2.718,193,3.733,418,4.544,419,4.544,420,4.544,421,4.544,422,4.123,436,4.559,626,3.45,627,4.027,628,4.027,629,4.027,630,4.027,631,4.027,632,4.027,633,4.027,634,4.027,635,4.027,636,4.027,637,4.027]],["title/controllers/UsersController.html",[0,1.266,638,2.54]],["body/controllers/UsersController.html",[0,1.158,2,1.158,3,0.23,4,0.208,5,0.165,7,0.49,8,1.462,10,2.251,11,0.02,16,1.017,18,1.924,19,0.623,20,0.689,22,1.842,23,0.895,27,0.23,28,0.122,29,1.289,30,1.221,32,2.026,34,0.013,35,0.013,68,1.478,70,1.925,71,1.273,72,0.911,73,1.413,82,1.977,106,2.58,109,3.195,110,1.977,111,1.977,112,1.221,113,3.644,129,3.461,178,1.289,187,2.213,202,1.54,203,2.67,204,2.136,205,2.136,213,3.254,218,1.525,222,1.525,227,2.135,228,2.135,231,1.525,233,1.525,237,2.135,240,2.135,241,2.135,243,2.135,244,2.135,246,2.135,291,2.56,293,2.877,295,2.877,298,2.56,415,3.776,423,2.56,622,4.271,624,3.585,638,3.254,639,2.877,640,3.359,641,3.359,642,3.359,643,3.359,644,2.877,645,3.359,646,3.359,647,3.195,648,2.877,649,3.359,650,3.359,651,3.359,652,3.359,653,3.359,654,3.359,655,3.359,656,3.359]],["title/modules/UsersModule.html",[36,1.202,49,2.334]],["body/modules/UsersModule.html",[2,1.99,3,0.313,4,0.283,5,0.224,11,0.02,19,0.666,20,0.937,27,0.313,28,0.166,34,0.015,35,0.015,36,1.889,38,1.957,39,2.473,48,3.002,49,4.574,50,2.783,51,2.201,52,2.073,54,2.963,55,3.165,112,1.66,138,2.687,141,2.687,143,2.687,144,2.687,145,2.201,638,4.378,647,4.123,648,3.911,657,3.911,658,4.565,659,3.911,660,4.565,661,4.565]],["title/injectables/UsersService.html",[64,1.03,647,2.162]],["body/injectables/UsersService.html",[3,0.158,4,0.143,5,0.113,7,0.337,8,1.108,11,0.02,16,0.921,18,1.647,19,0.585,20,0.473,27,0.158,28,0.084,29,0.885,30,0.839,32,1.734,34,0.009,35,0.009,64,1,65,1.047,68,1.34,70,1.734,71,1.34,72,0.821,73,1.273,98,2.586,153,3.471,154,1.265,155,1.265,156,1.986,159,1.955,162,1.265,163,2.717,165,2.876,166,2.885,167,3.119,168,3.179,169,2.717,170,1.758,171,1.466,178,0.885,187,2.309,202,1.426,203,2.226,204,1.619,205,1.978,206,1.83,210,2.701,213,2.466,218,1.619,222,1.619,231,1.047,233,1.047,257,3.119,262,1.265,263,1.265,264,1.466,265,2.39,266,1.265,267,1.466,269,2.688,270,3.367,274,1.595,275,1.758,329,1.758,331,1.758,415,2.885,418,3.736,419,3.736,420,3.736,421,3.736,422,3.391,446,4.199,471,6.188,533,5.003,590,1.976,622,3.115,624,2.717,644,3.054,647,2.098,662,1.976,663,2.306,664,2.306,665,2.306,666,2.306,667,2.306,668,2.306,669,2.306,670,2.306,671,2.306,672,2.306,673,3.564,674,2.306,675,2.306,676,2.306,677,2.306,678,2.306,679,2.306,680,3.054,681,2.306,682,2.306,683,1.976,684,2.306,685,1.976,686,1.976,687,2.306,688,3.054,689,5.299,690,2.306,691,2.306,692,3.564,693,2.306,694,2.306]],["title/changelog.html",[695,2.125,696,2.125,697,2.631]],["body/changelog.html",[11,0.018,34,0.018,35,0.018]],["title/coverage.html",[698,3.813]],["body/coverage.html",[0,2.207,1,2.103,5,0.149,6,2.604,11,0.02,24,1.79,28,0.261,34,0.012,35,0.012,64,1.871,66,2.604,72,0.471,80,2.103,81,2.604,87,1.932,98,1.303,115,1.79,117,1.932,121,2.317,135,1.932,152,2.604,156,1.232,171,1.932,180,1.466,182,2.604,200,2.103,201,2.604,207,1.79,216,1.668,223,1.932,229,1.79,254,2.604,262,1.668,263,1.668,265,1.668,266,1.668,277,2.604,286,2.103,287,2.604,288,1.79,297,1.932,300,1.79,315,2.604,332,2.604,333,3.34,363,2.604,364,3.34,370,1.668,377,1.79,378,2.604,379,3.34,388,1.79,404,1.79,405,2.604,406,3.34,415,1.79,416,2.604,417,3.34,472,2.604,480,2.103,481,2.604,486,1.932,488,1.79,503,2.604,516,2.604,539,2.604,546,2.604,547,2.604,554,2.604,560,2.103,561,2.604,566,1.932,568,1.79,583,2.604,599,2.604,613,2.604,616,2.604,618,2.604,620,2.604,622,1.932,623,2.604,626,2.604,638,2.103,639,2.604,647,1.79,662,2.604,680,6.444,698,2.317,699,2.604,700,3.04,701,3.04,702,4.382,703,6.399,704,2.604,705,2.604,706,3.04,707,6.672,708,6.399,709,6.208,710,4.382,711,3.04,712,3.04,713,3.04,714,2.604,715,5.137,716,2.604,717,3.04,718,2.604,719,2.604,720,3.04,721,3.04]],["title/dependencies.html",[39,1.892,722,2.631]],["body/dependencies.html",[11,0.02,20,0.984,23,1.277,28,0.216,34,0.016,35,0.016,39,2.054,112,1.742,140,3.653,145,2.311,163,3.653,356,2.629,526,5.543,608,4.106,723,6.47,724,4.792,725,4.792,726,4.792,727,4.792,728,5.097,729,4.792,730,4.792,731,4.792,732,4.792,733,4.792,734,4.792,735,4.792,736,4.792,737,4.106,738,4.792,739,4.792,740,4.792,741,4.792,742,4.792,743,4.792,744,4.792,745,4.792,746,4.106,747,4.792,748,4.792]],["title/miscellaneous/functions.html",[749,2.125,750,3.781]],["body/miscellaneous/functions.html",[7,0.731,11,0.019,18,1.901,34,0.016,35,0.016,68,1.324,70,2.002,71,1.324,72,0.948,73,1.47,262,3.354,263,2.749,265,3.354,266,2.749,269,2.749,272,3.82,714,4.293,716,5.654,718,5.239,719,5.239,749,3.467,750,4.293,751,5.011,752,5.011,753,5.011,754,5.011,755,6.599,756,5.011,757,6.115,758,4.293]],["title/index.html",[7,0.448,695,2.125,696,2.125]],["body/index.html",[11,0.02,34,0.015,35,0.015,180,2.113,422,3.032,459,3.755,529,4.817,606,3.755,697,4.817,699,4.817,746,3.755,759,5.623,760,4.383,761,4.383,762,4.383,763,4.383,764,4.383,765,4.383,766,3.755,767,4.383,768,4.383,769,4.383,770,4.383,771,4.383,772,6.209,773,4.817,774,4.383,775,4.383,776,3.755,777,3.755,778,5.611,779,4.383,780,3.755,781,3.755,782,6.55,783,4.383,784,3.755,785,3.755,786,4.383,787,4.817,788,4.383,789,4.383,790,4.383,791,3.755,792,3.755,793,4.383,794,4.383,795,4.383,796,4.383,797,4.383,798,4.383,799,4.287,800,4.383,801,4.383,802,4.383,803,4.383,804,4.383,805,4.383,806,4.383,807,3.032,808,4.383,809,4.383,810,3.755]],["title/license.html",[695,2.125,696,2.125,807,2.125]],["body/license.html",[4,0.355,5,0.044,8,0.148,11,0.002,15,0.362,16,0.078,19,0.046,28,0.017,32,0.156,34,0.003,35,0.002,52,0.216,72,0.139,78,1.089,98,1.653,106,0.261,164,0.407,167,0.28,171,1.55,173,1.638,190,0.384,193,0.28,213,0.62,220,0.768,269,0.697,337,0.922,362,0.407,375,0.407,376,0.969,387,0.407,393,0.407,407,1.226,413,0.768,423,2.196,438,1.638,447,1.638,462,0.683,465,0.768,466,1.089,541,0.407,683,0.768,685,0.407,686,4.082,688,1.089,698,0.683,728,0.768,737,0.768,758,0.407,766,1.638,773,0.407,776,1.638,777,1.089,778,2.287,780,0.407,781,1.378,784,0.407,785,0.407,787,0.768,791,0.407,792,0.407,807,4.71,810,1.089,811,4.319,812,4.685,813,4.841,814,4.147,815,1.912,816,0.475,817,0.475,818,1.272,819,5.171,820,2.669,821,4.418,822,4.982,823,2.188,824,0.475,825,0.475,826,0.896,827,1.912,828,4.841,829,1.912,830,1.272,831,3.721,832,1.272,833,0.475,834,1.272,835,0.475,836,0.475,837,0.896,838,3.422,839,2.188,840,0.475,841,2.188,842,0.475,843,0.475,844,2.669,845,0.896,846,1.912,847,0.475,848,0.475,849,0.475,850,3.721,851,5.928,852,3.721,853,1.272,854,1.272,855,0.896,856,5.776,857,0.896,858,2.439,859,2.439,860,3.721,861,2.188,862,0.475,863,0.475,864,2.669,865,0.896,866,2.669,867,5.386,868,0.475,869,0.896,870,0.475,871,1.272,872,4.319,873,1.912,874,0.896,875,1.608,876,0.475,877,0.475,878,0.896,879,1.608,880,1.608,881,0.896,882,3.422,883,0.896,884,4.512,885,1.912,886,0.896,887,1.608,888,0.475,889,2.439,890,1.912,891,0.475,892,2.669,893,2.188,894,5.283,895,1.272,896,2.439,897,0.475,898,0.475,899,0.475,900,1.912,901,2.669,902,0.896,903,3.255,904,3.075,905,0.896,906,0.475,907,0.475,908,3.857,909,0.896,910,0.475,911,0.475,912,3.577,913,0.896,914,0.475,915,1.272,916,0.475,917,0.475,918,0.896,919,0.475,920,0.475,921,2.188,922,1.608,923,0.475,924,0.475,925,0.475,926,0.475,927,0.475,928,0.475,929,0.896,930,0.475,931,0.475,932,0.475,933,0.896,934,0.475,935,1.272,936,0.896,937,0.475,938,0.475,939,0.896,940,0.896,941,3.721,942,0.475,943,0.896,944,0.896,945,0.475,946,0.475,947,0.896,948,1.272,949,0.896,950,1.272,951,0.896,952,0.475,953,0.475,954,2.188,955,0.475,956,0.475,957,0.475,958,1.912,959,0.475,960,0.475,961,1.608,962,0.475,963,0.475,964,0.896,965,1.272,966,0.475,967,3.422,968,0.475,969,2.88,970,0.475,971,3.721,972,1.608,973,1.912,974,2.188,975,1.272,976,0.475,977,1.272,978,4.213,979,0.896,980,0.475,981,0.475,982,0.475,983,5.799,984,3.075,985,0.475,986,0.475,987,0.896,988,0.896,989,0.475,990,3.075,991,0.475,992,1.608,993,2.669,994,0.475,995,1.272,996,1.272,997,0.896,998,2.188,999,5.691,1000,1.272,1001,2.88,1002,1.608,1003,2.439,1004,0.896,1005,0.475,1006,0.896,1007,1.272,1008,2.88,1009,3.075,1010,1.608,1011,0.475,1012,0.896,1013,0.896,1014,1.608,1015,1.608,1016,2.88,1017,0.475,1018,1.272,1019,0.475,1020,4.913,1021,0.896,1022,0.475,1023,2.669,1024,0.475,1025,1.272,1026,1.608,1027,2.669,1028,0.475,1029,3.857,1030,1.608,1031,2.439,1032,0.896,1033,2.669,1034,3.255,1035,2.188,1036,0.475,1037,0.475,1038,0.475,1039,0.475,1040,2.669,1041,0.475,1042,0.896,1043,3.577,1044,0.407,1045,0.475,1046,0.896,1047,1.272,1048,0.475,1049,0.475,1050,1.272,1051,0.475,1052,0.475,1053,0.475,1054,0.475,1055,3.255,1056,1.272,1057,4.512,1058,1.272,1059,0.475,1060,0.475,1061,0.475,1062,0.896,1063,1.272,1064,0.896,1065,3.075,1066,0.475,1067,0.896,1068,2.188,1069,0.475,1070,0.475,1071,1.272,1072,1.272,1073,2.188,1074,1.272,1075,1.272,1076,0.475,1077,0.475,1078,1.912,1079,1.912,1080,2.188,1081,0.475,1082,0.475,1083,0.475,1084,0.896,1085,0.475,1086,1.272,1087,0.475,1088,0.475,1089,1.272,1090,0.475,1091,0.475,1092,0.475,1093,0.896,1094,0.475,1095,4.685,1096,0.475,1097,2.669,1098,0.475,1099,2.188,1100,0.896,1101,0.475,1102,0.475,1103,0.896,1104,0.896,1105,1.608,1106,0.475,1107,0.475,1108,0.475,1109,0.475,1110,0.896,1111,1.272,1112,1.912,1113,0.475,1114,0.896,1115,0.475,1116,0.475,1117,2.188,1118,0.475,1119,1.608,1120,0.475,1121,3.075,1122,2.439,1123,1.608,1124,0.475,1125,1.912,1126,0.475,1127,0.896,1128,0.475,1129,0.475,1130,1.272,1131,1.272,1132,0.407,1133,0.475,1134,0.475,1135,0.475,1136,1.272,1137,1.272,1138,2.188,1139,0.475,1140,0.475,1141,0.896,1142,0.896,1143,1.912,1144,0.896,1145,0.475,1146,3.577,1147,0.896,1148,0.475,1149,0.475,1150,0.475,1151,0.475,1152,0.475,1153,0.475,1154,1.272,1155,0.475,1156,3.857,1157,0.475,1158,0.475,1159,0.475,1160,1.912,1161,1.912,1162,0.475,1163,0.475,1164,1.272,1165,0.475,1166,0.475,1167,1.608,1168,0.475,1169,0.896,1170,0.475,1171,0.475,1172,0.475,1173,0.407,1174,0.475,1175,0.475,1176,0.896,1177,0.896,1178,0.475,1179,1.272,1180,0.475,1181,0.896,1182,0.475,1183,0.475,1184,0.475,1185,0.475,1186,0.896,1187,0.896,1188,0.896,1189,0.896,1190,2.88,1191,0.896,1192,2.188,1193,0.475,1194,0.475,1195,0.896,1196,1.272,1197,1.272,1198,1.608,1199,1.608,1200,1.272,1201,1.608,1202,0.475,1203,1.912,1204,1.912,1205,1.089,1206,0.475,1207,0.896,1208,0.896,1209,1.912,1210,0.896,1211,1.608,1212,1.608,1213,0.896,1214,1.272,1215,3.721,1216,1.912,1217,0.475,1218,0.475,1219,0.475,1220,1.272,1221,1.272,1222,0.896,1223,0.896,1224,0.475,1225,0.475,1226,0.475,1227,0.475,1228,0.896,1229,0.475,1230,0.475,1231,0.475,1232,1.272,1233,0.475,1234,0.475,1235,0.896,1236,1.272,1237,0.475,1238,0.896,1239,0.475,1240,1.272,1241,0.475,1242,0.475,1243,0.475,1244,0.896,1245,0.896,1246,2.188,1247,4.512,1248,1.272,1249,0.896,1250,0.896,1251,0.896,1252,0.896,1253,1.608,1254,1.608,1255,0.896,1256,0.475,1257,0.475,1258,0.475,1259,0.475,1260,0.475,1261,2.439,1262,2.188,1263,0.896,1264,0.475,1265,0.475,1266,0.475,1267,0.475,1268,0.896,1269,0.475,1270,0.896,1271,0.475,1272,1.912,1273,2.669,1274,1.608,1275,0.475,1276,3.255,1277,0.475,1278,0.475,1279,0.475,1280,0.475,1281,0.475,1282,0.475,1283,0.896,1284,0.475,1285,0.475,1286,0.475,1287,0.896,1288,1.272,1289,1.608,1290,1.608,1291,0.896,1292,0.475,1293,0.475,1294,0.896,1295,0.475,1296,0.475,1297,0.475,1298,0.896,1299,0.475,1300,0.475,1301,1.272,1302,1.608,1303,0.475,1304,0.896,1305,0.475,1306,0.896,1307,0.475,1308,0.475,1309,1.272,1310,0.475,1311,0.475,1312,0.475,1313,0.475,1314,0.475,1315,0.896,1316,0.475,1317,0.475,1318,0.475,1319,0.475,1320,1.272,1321,0.475,1322,0.475,1323,0.475,1324,0.475,1325,0.475,1326,1.912,1327,0.475,1328,0.475,1329,2.669,1330,0.475,1331,0.475,1332,0.475,1333,1.608,1334,0.475,1335,0.475,1336,0.475,1337,0.475,1338,0.475,1339,0.475,1340,0.896,1341,2.439,1342,1.272,1343,0.475,1344,1.608,1345,0.475,1346,0.475,1347,1.272,1348,0.475,1349,0.475,1350,1.272,1351,0.475,1352,0.896,1353,0.896,1354,0.475,1355,0.475,1356,0.475,1357,0.475,1358,0.475,1359,0.475,1360,0.475,1361,0.475,1362,0.475,1363,0.407,1364,0.896,1365,0.475,1366,0.475,1367,0.475,1368,0.475,1369,0.896,1370,0.896,1371,0.475,1372,0.475,1373,1.272,1374,0.475,1375,1.272,1376,0.475,1377,0.896,1378,1.608,1379,0.475,1380,0.896,1381,0.475,1382,1.272,1383,2.439,1384,0.475,1385,0.896,1386,0.475,1387,0.768,1388,0.475,1389,0.475,1390,0.475,1391,0.475,1392,0.475,1393,0.896,1394,0.475,1395,0.896,1396,1.608,1397,0.475,1398,1.912,1399,0.475,1400,0.475,1401,0.475,1402,0.475,1403,0.475,1404,0.475,1405,0.896,1406,0.896,1407,0.896,1408,1.272,1409,0.475,1410,0.896,1411,0.896,1412,0.475,1413,1.272,1414,0.475,1415,0.896,1416,0.475,1417,0.896,1418,0.475,1419,1.272,1420,0.896,1421,0.475,1422,0.475,1423,0.896,1424,4.685,1425,0.896,1426,0.475,1427,1.912,1428,3.075,1429,1.272,1430,0.475,1431,0.475,1432,0.475,1433,1.608,1434,0.475,1435,0.475,1436,1.272,1437,0.475,1438,0.896,1439,0.475,1440,0.475,1441,0.475,1442,1.608,1443,0.475,1444,0.475,1445,0.475,1446,0.475,1447,0.475,1448,1.608,1449,0.896,1450,0.896,1451,0.475,1452,0.475,1453,1.272,1454,0.475,1455,0.896,1456,1.272,1457,0.475,1458,0.896,1459,0.475,1460,0.475,1461,0.475,1462,0.475,1463,0.896,1464,1.272,1465,0.475,1466,0.475,1467,0.475,1468,0.896,1469,0.475,1470,0.896,1471,0.475,1472,0.475,1473,0.475,1474,0.475,1475,0.475,1476,1.272,1477,0.896,1478,0.475,1479,0.475,1480,1.608,1481,0.475,1482,1.272,1483,0.475,1484,0.475,1485,0.475,1486,0.896,1487,0.475,1488,0.475,1489,0.475,1490,1.272,1491,0.896,1492,0.896,1493,0.475,1494,2.439,1495,0.896,1496,1.272,1497,1.608,1498,0.475,1499,0.475,1500,0.896,1501,0.475,1502,1.272,1503,0.475,1504,0.896,1505,0.475,1506,0.475,1507,0.475,1508,0.475,1509,1.272,1510,0.475,1511,1.272,1512,0.896,1513,0.475,1514,0.896,1515,0.475,1516,0.475,1517,0.896,1518,0.896,1519,0.475,1520,0.475,1521,0.896,1522,0.475,1523,0.475,1524,0.475,1525,0.475,1526,0.475,1527,1.272,1528,0.475,1529,0.475,1530,0.475,1531,0.475,1532,0.475,1533,1.608,1534,1.272,1535,0.475,1536,0.475,1537,0.475,1538,0.475,1539,0.475,1540,0.896,1541,0.475,1542,0.475,1543,0.475,1544,0.475,1545,0.475,1546,0.475,1547,0.475,1548,0.475,1549,0.475,1550,0.475,1551,0.475,1552,0.475,1553,0.475,1554,0.475,1555,0.475,1556,1.608,1557,0.475,1558,0.896,1559,0.475,1560,0.475,1561,0.475,1562,0.475,1563,0.475,1564,0.475,1565,0.475,1566,0.475,1567,0.475,1568,0.475,1569,1.272,1570,0.475,1571,0.475,1572,0.475,1573,0.896,1574,0.475,1575,0.475,1576,0.475,1577,0.475,1578,0.475,1579,0.475,1580,0.896,1581,0.896,1582,1.912,1583,1.272,1584,0.475,1585,0.896,1586,0.475,1587,0.475,1588,0.475,1589,0.475,1590,0.475,1591,1.272,1592,0.896,1593,0.475,1594,0.896,1595,0.896,1596,0.896,1597,0.475,1598,0.475,1599,0.475,1600,0.475,1601,0.475,1602,0.475,1603,0.896,1604,0.475,1605,0.475,1606,0.475,1607,0.896,1608,0.475,1609,0.475,1610,1.272,1611,0.475,1612,0.475,1613,0.475,1614,0.475,1615,0.475,1616,0.475,1617,0.475,1618,0.475,1619,0.475,1620,0.475,1621,0.475,1622,0.896,1623,0.475,1624,0.475,1625,0.475,1626,0.475,1627,0.475,1628,0.475,1629,0.475,1630,0.475,1631,0.475,1632,0.475,1633,0.475,1634,0.475,1635,0.475,1636,0.475,1637,0.475,1638,0.475,1639,0.475,1640,0.475,1641,0.475,1642,1.272,1643,0.896,1644,0.475,1645,0.475,1646,0.475,1647,0.475,1648,0.475,1649,0.475,1650,0.475,1651,0.475,1652,0.896,1653,1.272,1654,0.896,1655,0.475,1656,0.475,1657,0.475,1658,0.475,1659,0.475,1660,0.475,1661,0.475,1662,0.475,1663,0.896,1664,0.475,1665,0.475,1666,0.475,1667,0.475,1668,0.475,1669,0.475,1670,0.475,1671,0.475,1672,0.475,1673,0.475,1674,0.475,1675,0.475,1676,0.475,1677,0.475,1678,0.475,1679,0.475,1680,0.475,1681,0.475,1682,0.475,1683,0.475,1684,0.475]],["title/modules.html",[38,2.144]],["body/modules.html",[11,0.016,34,0.016,35,0.016,37,3.524,38,2.183,43,3.237,44,3.237,45,3.237,46,3.237,47,3.237,48,2.183,49,3.237,1205,6.294,1685,7.347,1686,7.347,1687,7.347]],["title/overview.html",[1688,4.285]],["body/overview.html",[2,1.257,11,0.02,24,3.336,34,0.013,35,0.013,37,5.099,38,1.562,39,2.133,40,3.123,41,3.123,42,3.123,43,4.419,44,4.28,45,4.28,46,4.28,47,4.28,48,3.067,49,4.28,50,2.4,51,1.758,52,1.655,65,1.655,115,3.336,132,3.123,134,3.123,135,3.602,156,2.729,181,1.076,229,3.336,249,3.123,250,3.123,300,3.336,310,3.123,311,3.123,376,2.779,401,3.123,488,3.336,498,3.123,500,3.123,568,3.336,578,3.123,579,3.123,593,3.123,594,3.123,595,3.123,647,3.336,657,3.123,659,3.123,1688,3.123,1689,3.645,1690,3.645]],["title/properties.html",[183,1.605,722,2.631]],["body/properties.html",[11,0.02,34,0.017,35,0.017,183,2.056,357,2.727,807,3.913,814,4.845,1387,4.845,1691,5.656,1692,5.656]],["title/todo.html",[695,2.125,696,2.125,799,2.341]],["body/todo.html",[5,0.252,11,0.018,34,0.017,35,0.017,202,1.684,337,2.996,357,2.481,462,3.922,799,3.922,856,5.323,1044,4.408,1132,4.408,1173,4.408,1363,4.408,1693,6.676,1694,5.145,1695,5.145,1696,5.145,1697,5.145,1698,5.145,1699,5.145,1700,5.145,1701,5.145,1702,5.145,1703,5.145,1704,5.145,1705,5.145,1706,5.145,1707,5.145,1708,5.145,1709,5.145,1710,5.145,1711,5.145,1712,5.145,1713,5.145,1714,5.145]],["title/miscellaneous/variables.html",[749,2.125,1715,3.781]],["body/miscellaneous/variables.html",[7,0.772,11,0.02,32,1.73,34,0.017,35,0.017,98,2.707,121,4.815,165,3.243,177,4.03,178,2.028,704,4.529,705,5.411,749,3.657,1715,4.529,1716,5.286,1717,5.286,1718,5.286,1719,5.286,1720,5.286,1721,5.286,1722,5.286,1723,5.286,1724,5.286]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":680,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1691,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":1701,"title":{},"body":{"todo.html":{}}}],["1",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["1.0.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["1000.52",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["1000.52'})@isnumber()@ispositive",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["11",{"_index":1169,"title":{},"body":{"license.html":{}}}],["110",{"_index":360,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["110})@isnumber()@ispositive",{"_index":338,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["12",{"_index":456,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12'})@length(13",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12.99",{"_index":414,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["12.99'})@isnumber()@ispositive",{"_index":408,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["123.123.123",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["13",{"_index":375,"title":{},"body":{"classes/CreateCollectionDto.html":{},"license.html":{}}}],["13'})@isnumber()@isnotempty",{"_index":371,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["14",{"_index":458,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14)@isstring()@isnotempty",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["15",{"_index":413,"title":{},"body":{"classes/CreatePackDto.html":{},"license.html":{}}}],["15'})@isint()@ispositive",{"_index":411,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["16",{"_index":1385,"title":{},"body":{"license.html":{}}}],["17",{"_index":401,"title":{},"body":{"classes/CreateDeckDto.html":{},"overview.html":{}}}],["17})@isint()@ispositive",{"_index":389,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["1996",{"_index":1175,"title":{},"body":{"license.html":{}}}],["1d",{"_index":1704,"title":{},"body":{"todo.html":{}}}],["2",{"_index":900,"title":{},"body":{"license.html":{}}}],["20",{"_index":1173,"title":{},"body":{"license.html":{},"todo.html":{}}}],["2000",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2007",{"_index":818,"title":{},"body":{"license.html":{}}}],["2020",{"_index":1700,"title":{},"body":{"todo.html":{}}}],["2022",{"_index":374,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["2022'})@isstring()@isnotempty",{"_index":368,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["23",{"_index":403,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["23})@isint()@ispositive",{"_index":391,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["24h",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["25",{"_index":395,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["28",{"_index":1552,"title":{},"body":{"license.html":{}}}],["29",{"_index":816,"title":{},"body":{"license.html":{}}}],["3",{"_index":815,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["3.15.2",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1444,"title":{},"body":{"license.html":{}}}],["345",{"_index":1713,"title":{},"body":{"todo.html":{}}}],["3d",{"_index":1697,"title":{},"body":{"todo.html":{}}}],["4",{"_index":466,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["4.0.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["463",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["463'})@isint()@ispositive",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":1241,"title":{},"body":{"license.html":{}}}],["5.0.1",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":402,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["60",{"_index":1437,"title":{},"body":{"license.html":{}}}],["6b",{"_index":1269,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1296,"title":{},"body":{"license.html":{}}}],["6})@isint()@ispositive",{"_index":385,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["7",{"_index":376,"title":{},"body":{"classes/CreateCollectionDto.html":{},"license.html":{},"overview.html":{}}}],["7'})@isnumber()@isnotempty",{"_index":365,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["7.2.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1689,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1690,"title":{},"body":{"overview.html":{}}}],["95",{"_index":361,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["95})@isnumber()@ispositive",{"_index":341,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["ability",{"_index":1349,"title":{},"body":{"license.html":{}}}],["above",{"_index":1419,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1202,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1632,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1662,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":932,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1449,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1448,"title":{},"body":{"license.html":{}}}],["access",{"_index":921,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1520,"title":{},"body":{"license.html":{}}}],["accompanied",{"_index":1248,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1636,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1201,"title":{},"body":{"license.html":{}}}],["according",{"_index":1627,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1641,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1134,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1500,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1457,"title":{},"body":{"license.html":{}}}],["activities",{"_index":1018,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1547,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1525,"title":{},"body":{"license.html":{}}}],["actually",{"_index":1319,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":989,"title":{},"body":{"license.html":{}}}],["add",{"_index":1378,"title":{},"body":{"license.html":{}}}],["added",{"_index":1200,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1215,"title":{},"body":{"license.html":{}}}],["address",{"_index":541,"title":{},"body":{"classes/LoginDto.html":{},"license.html":{}}}],["addressed",{"_index":986,"title":{},"body":{"license.html":{}}}],["admin",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin'})@isstring()@isnotempty",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin2022",{"_index":455,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["admin2022'})@isstring()@isnotempty",{"_index":444,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin@blue.com.br",{"_index":454,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["admin@blue.com.br'})@isstring()@isnotempty()@isemail",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["adopted",{"_index":1172,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1358,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1623,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1359,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1569,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1481,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1128,"title":{},"body":{"license.html":{}}}],["against",{"_index":1189,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1232,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1564,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1609,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1511,"title":{},"body":{"license.html":{}}}],["aim",{"_index":928,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1489,"title":{},"body":{"license.html":{}}}],["allow",{"_index":956,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":834,"title":{},"body":{"license.html":{}}}],["allowing",{"_index":768,"title":{},"body":{"index.html":{}}}],["along",{"_index":1204,"title":{},"body":{"license.html":{}}}],["already",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["alternative",{"_index":1265,"title":{},"body":{"license.html":{}}}],["although",{"_index":924,"title":{},"body":{"license.html":{}}}],["amount",{"_index":410,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["ancillary",{"_index":1451,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["anti",{"_index":1159,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1212,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1002,"title":{},"body":{"license.html":{}}}],["api",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{}}}],["apiproperty",{"_index":352,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":334,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('card",{"_index":235,"title":{},"body":{"controllers/CardController.html":{}}}],["apitags('collection",{"_index":303,"title":{},"body":{"controllers/CollectionController.html":{}}}],["apitags('deck",{"_index":491,"title":{},"body":{"controllers/DeckController.html":{}}}],["apitags('pack",{"_index":571,"title":{},"body":{"controllers/PackController.html":{}}}],["apitags('status",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":649,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":606,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":612,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1008,"title":{},"body":{"license.html":{}}}],["application",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":1679,"title":{},"body":{"license.html":{}}}],["applied",{"_index":963,"title":{},"body":{"license.html":{}}}],["applies",{"_index":855,"title":{},"body":{"license.html":{}}}],["apply",{"_index":860,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1033,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1194,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1631,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":934,"title":{},"body":{"license.html":{}}}],["arise",{"_index":942,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1613,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1521,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1534,"title":{},"body":{"license.html":{}}}],["article",{"_index":1168,"title":{},"body":{"license.html":{}}}],["asking",{"_index":877,"title":{},"body":{"license.html":{}}}],["assert",{"_index":899,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1471,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1106,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1602,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1635,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1407,"title":{},"body":{"license.html":{}}}],["assures",{"_index":966,"title":{},"body":{"license.html":{}}}],["async",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["attach",{"_index":1643,"title":{},"body":{"license.html":{}}}],["attack",{"_index":336,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateDeckDto.html":{}}}],["attempt",{"_index":1422,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":916,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1388,"title":{},"body":{"license.html":{}}}],["autenticado",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":80,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":544,"title":{},"body":{"classes/LoginDto.html":{}}}],["authguard",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1387,"title":{},"body":{"license.html":{},"properties.html":{}}}],["authored",{"_index":800,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1331,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1379,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1495,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1538,"title":{},"body":{"license.html":{}}}],["authors",{"_index":859,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":115,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":1461,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1119,"title":{},"body":{"license.html":{}}}],["available",{"_index":1016,"title":{},"body":{"license.html":{}}}],["avatar",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["avoid",{"_index":960,"title":{},"body":{"license.html":{}}}],["await",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["away",{"_index":843,"title":{},"body":{"license.html":{}}}],["b",{"_index":1080,"title":{},"body":{"license.html":{}}}],["badrequestexception",{"_index":590,"title":{},"body":{"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('this",{"_index":682,"title":{},"body":{"injectables/UsersService.html":{}}}],["balance",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":998,"title":{},"body":{"license.html":{}}}],["baseurl",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["basic",{"_index":1120,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(dto.password",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["behalf",{"_index":1148,"title":{},"body":{"license.html":{}}}],["being",{"_index":1294,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1531,"title":{},"body":{"license.html":{}}}],["below",{"_index":791,"title":{},"body":{"index.html":{},"license.html":{}}}],["benefit",{"_index":1524,"title":{},"body":{"license.html":{}}}],["best",{"_index":393,"title":{},"body":{"classes/CreateDeckDto.html":{},"license.html":{}}}],["bests",{"_index":399,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["bests'})@isstring()@length(3",{"_index":394,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["between",{"_index":1116,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":1234,"title":{},"body":{"license.html":{}}}],["body",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["boolean",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":909,"title":{},"body":{"license.html":{}}}],["box",{"_index":1669,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1687,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1685,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1705,"title":{},"body":{"todo.html":{}}}],["built",{"_index":793,"title":{},"body":{"index.html":{}}}],["business",{"_index":1544,"title":{},"body":{"license.html":{}}}],["c",{"_index":820,"title":{},"body":{"license.html":{}}}],["called",{"_index":996,"title":{},"body":{"license.html":{}}}],["car",{"_index":359,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["car'})@isstring",{"_index":350,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card",{"_index":180,"title":{"classes/Card.html":{}},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"coverage.html":{},"index.html":{}}}],["card.controller",{"_index":253,"title":{},"body":{"modules/CardModule.html":{}}}],["card.dto",{"_index":232,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/UpdateCardDto.html":{}}}],["card.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["card.dto.ts:10",{"_index":345,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:17",{"_index":351,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:25",{"_index":339,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:33",{"_index":342,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.dto.ts:40",{"_index":347,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["card.service",{"_index":230,"title":{},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{}}}],["card/card.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["cardattack",{"_index":184,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["cardcontroller",{"_index":200,"title":{"controllers/CardController.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"coverage.html":{}}}],["carddef",{"_index":185,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["cardmodule",{"_index":44,"title":{"modules/CardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardnumber",{"_index":278,"title":{},"body":{"classes/Collection.html":{},"classes/CreateCollectionDto.html":{}}}],["cardquantity",{"_index":380,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/Deck.html":{}}}],["cards",{"_index":215,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/CreatePackDto.html":{}}}],["cardservice",{"_index":229,"title":{"injectables/CardService.html":{}},"body":{"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"coverage.html":{},"overview.html":{}}}],["carry",{"_index":1207,"title":{},"body":{"license.html":{}}}],["case",{"_index":1062,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1315,"title":{},"body":{"license.html":{}}}],["catch(handleerror",{"_index":270,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["cause",{"_index":1238,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1426,"title":{},"body":{"license.html":{}}}],["certain",{"_index":880,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1439,"title":{},"body":{"license.html":{}}}],["challenging",{"_index":771,"title":{},"body":{"index.html":{}}}],["change",{"_index":846,"title":{},"body":{"license.html":{}}}],["changed",{"_index":914,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":697,"title":{"changelog.html":{}},"body":{"index.html":{}}}],["changing",{"_index":833,"title":{},"body":{"license.html":{}}}],["character",{"_index":463,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characterized",{"_index":1346,"title":{},"body":{"license.html":{}}}],["characters",{"_index":467,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":864,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1585,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1590,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1153,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1160,"title":{},"body":{"license.html":{}}}],["civil",{"_index":1634,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1486,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1497,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":181,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1279,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":906,"title":{},"body":{"license.html":{}}}],["closely",{"_index":1630,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":249,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_imports",{"_index":251,"title":{},"body":{"modules/CardModule.html":{}}}],["cluster_cardmodule_providers",{"_index":250,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_collectionmodule",{"_index":310,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_collectionmodule_imports",{"_index":312,"title":{},"body":{"modules/CollectionModule.html":{}}}],["cluster_collectionmodule_providers",{"_index":311,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_deckmodule",{"_index":498,"title":{},"body":{"modules/DeckModule.html":{},"overview.html":{}}}],["cluster_deckmodule_imports",{"_index":499,"title":{},"body":{"modules/DeckModule.html":{}}}],["cluster_deckmodule_providers",{"_index":500,"title":{},"body":{"modules/DeckModule.html":{},"overview.html":{}}}],["cluster_packmodule",{"_index":578,"title":{},"body":{"modules/PackModule.html":{},"overview.html":{}}}],["cluster_packmodule_imports",{"_index":580,"title":{},"body":{"modules/PackModule.html":{}}}],["cluster_packmodule_providers",{"_index":579,"title":{},"body":{"modules/PackModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":593,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":594,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":595,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":657,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":658,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":659,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":867,"title":{},"body":{"license.html":{}}}],["collect",{"_index":1566,"title":{},"body":{"license.html":{}}}],["collection",{"_index":216,"title":{"classes/Collection.html":{}},"body":{"controllers/CardController.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCollectionDto.html":{},"coverage.html":{}}}],["collection.controller",{"_index":314,"title":{},"body":{"modules/CollectionModule.html":{}}}],["collection.dto",{"_index":302,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/UpdateCollectionDto.html":{}}}],["collection.dto.ts",{"_index":364,"title":{},"body":{"classes/CreateCollectionDto.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["collection.dto.ts:11",{"_index":369,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["collection.dto.ts:19",{"_index":372,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["collection.dto.ts:27",{"_index":366,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["collection.service",{"_index":301,"title":{},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{}}}],["collection/collection.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["collectioncontroller",{"_index":286,"title":{"controllers/CollectionController.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"coverage.html":{}}}],["collectionmodule",{"_index":45,"title":{"modules/CollectionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionModule.html":{},"modules.html":{},"overview.html":{}}}],["collections",{"_index":327,"title":{},"body":{"injectables/CollectionService.html":{}}}],["collectionservice",{"_index":300,"title":{"injectables/CollectionService.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"coverage.html":{},"overview.html":{}}}],["combination",{"_index":1572,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1570,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1228,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1213,"title":{},"body":{"license.html":{}}}],["commands",{"_index":1047,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1324,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1512,"title":{},"body":{"license.html":{}}}],["common",{"_index":362,"title":{},"body":{"classes/CreateCardDto.html":{},"license.html":{}}}],["common'})@isstring",{"_index":346,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["communication",{"_index":1114,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1223,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1233,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1549,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1092,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1467,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1145,"title":{},"body":{"license.html":{}}}],["compodocs",{"_index":798,"title":{},"body":{"index.html":{}}}],["component",{"_index":1079,"title":{},"body":{"license.html":{}}}],["computer",{"_index":1012,"title":{},"body":{"license.html":{}}}],["computers",{"_index":959,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1571,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1578,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1543,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":971,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1533,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1453,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1612,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1677,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1409,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1504,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1193,"title":{},"body":{"license.html":{}}}],["const",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":953,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1133,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["construed",{"_index":1554,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":1302,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1655,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1550,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1390,"title":{},"body":{"license.html":{}}}],["contains",{"_index":465,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["content",{"_index":1132,"title":{},"body":{"license.html":{},"todo.html":{}}}],["contents",{"_index":1508,"title":{},"body":{"license.html":{}}}],["context",{"_index":1085,"title":{},"body":{"license.html":{}}}],["continue",{"_index":1352,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1336,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1406,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1560,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":847,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1494,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1496,"title":{},"body":{"license.html":{}}}],["control",{"_index":1099,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1499,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('card",{"_index":236,"title":{},"body":{"controllers/CardController.html":{}}}],["controller('collection",{"_index":304,"title":{},"body":{"controllers/CollectionController.html":{}}}],["controller('deck",{"_index":492,"title":{},"body":{"controllers/DeckController.html":{}}}],["controller('pack",{"_index":572,"title":{},"body":{"controllers/PackController.html":{}}}],["controller('users",{"_index":650,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convenient",{"_index":1036,"title":{},"body":{"license.html":{}}}],["convey",{"_index":1020,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1536,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1347,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1029,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1405,"title":{},"body":{"license.html":{}}}],["copies",{"_index":831,"title":{},"body":{"license.html":{}}}],["copy",{"_index":828,"title":{},"body":{"license.html":{}}}],["copying",{"_index":972,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":836,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":819,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":982,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1150,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1606,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1095,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1263,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1487,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1017,"title":{},"body":{"license.html":{}}}],["country",{"_index":1527,"title":{},"body":{"license.html":{}}}],["course",{"_index":1667,"title":{},"body":{"license.html":{}}}],["court",{"_index":1559,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1629,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1515,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":698,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":999,"title":{},"body":{"license.html":{}}}],["cpf",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["create",{"_index":202,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"todo.html":{}}}],["create(@body",{"_index":237,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["create(createcollectiondto",{"_index":317,"title":{},"body":{"injectables/CollectionService.html":{}}}],["create(createuserdto",{"_index":640,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":206,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["createcarddto",{"_index":207,"title":{"classes/CreateCardDto.html":{}},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/CreateCardDto.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["createcollectiondto",{"_index":288,"title":{"classes/CreateCollectionDto.html":{}},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCollectionDto.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["createdat",{"_index":186,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{}}}],["createdeckdto",{"_index":377,"title":{"classes/CreateDeckDto.html":{}},"body":{"classes/CreateDeckDto.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["createpackdto",{"_index":404,"title":{"classes/CreatePackDto.html":{}},"body":{"classes/CreatePackDto.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/UpdatePackDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":415,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["criterion",{"_index":1053,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1485,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cure",{"_index":1443,"title":{},"body":{"license.html":{}}}],["currency",{"_index":763,"title":{},"body":{"index.html":{}}}],["customarily",{"_index":1251,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1258,"title":{},"body":{"license.html":{}}}],["d",{"_index":1221,"title":{},"body":{"license.html":{}}}],["dados",{"_index":552,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["damages",{"_index":1610,"title":{},"body":{"license.html":{}}}],["danger",{"_index":962,"title":{},"body":{"license.html":{}}}],["daniel",{"_index":801,"title":{},"body":{"index.html":{}}}],["data",{"_index":269,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["data.password",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":193,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{},"license.html":{}}}],["days",{"_index":1438,"title":{},"body":{"license.html":{}}}],["de",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["december",{"_index":1174,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1587,"title":{},"body":{"license.html":{}}}],["deck",{"_index":388,"title":{"classes/Deck.html":{}},"body":{"classes/CreateDeckDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"coverage.html":{}}}],["deck.controller",{"_index":502,"title":{},"body":{"modules/DeckModule.html":{}}}],["deck.dto",{"_index":490,"title":{},"body":{"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/UpdateDeckDto.html":{}}}],["deck.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["deck.dto.ts:11",{"_index":396,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["deck.dto.ts:19",{"_index":390,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["deck.dto.ts:27",{"_index":386,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["deck.dto.ts:35",{"_index":392,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["deck.service",{"_index":489,"title":{},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{}}}],["deck/deck.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["deckattack",{"_index":381,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/Deck.html":{}}}],["deckcontroller",{"_index":480,"title":{"controllers/DeckController.html":{}},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{},"coverage.html":{}}}],["deckdefense",{"_index":382,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/Deck.html":{}}}],["deckmodule",{"_index":46,"title":{"modules/DeckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeckModule.html":{},"modules.html":{},"overview.html":{}}}],["decks",{"_index":512,"title":{},"body":{"injectables/DeckService.html":{}}}],["deckservice",{"_index":488,"title":{"injectables/DeckService.html":{}},"body":{"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"coverage.html":{},"overview.html":{}}}],["deck´s",{"_index":383,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["declining",{"_index":1397,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["deemed",{"_index":1162,"title":{},"body":{"license.html":{}}}],["default",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["defective",{"_index":1601,"title":{},"body":{"license.html":{}}}],["defense",{"_index":340,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateDeckDto.html":{}}}],["defenses",{"_index":1557,"title":{},"body":{"license.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":1104,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":976,"title":{},"body":{"license.html":{}}}],["delete",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":246,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["delete(@param('id",{"_index":247,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{}}}],["delete(id",{"_index":211,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{}}}],["deleted",{"_index":331,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1355,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":1513,"title":{},"body":{"license.html":{}}}],["deny",{"_index":920,"title":{},"body":{"license.html":{}}}],["denying",{"_index":876,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":772,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1522,"title":{},"body":{"license.html":{}}}],["description",{"_index":357,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"properties.html":{},"todo.html":{}}}],["designated",{"_index":1271,"title":{},"body":{"license.html":{}}}],["designed",{"_index":841,"title":{},"body":{"license.html":{}}}],["detail",{"_index":1577,"title":{},"body":{"license.html":{}}}],["details",{"_index":1654,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1665,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1313,"title":{},"body":{"license.html":{}}}],["develop",{"_index":1638,"title":{},"body":{"license.html":{}}}],["developers",{"_index":895,"title":{},"body":{"license.html":{}}}],["development",{"_index":784,"title":{},"body":{"index.html":{},"license.html":{}}}],["devices",{"_index":919,"title":{},"body":{"license.html":{}}}],["differ",{"_index":1576,"title":{},"body":{"license.html":{}}}],["different",{"_index":1274,"title":{},"body":{"license.html":{}}}],["differently",{"_index":1384,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1149,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1280,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1004,"title":{},"body":{"license.html":{}}}],["disclaim",{"_index":1184,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1591,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1381,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1540,"title":{},"body":{"license.html":{}}}],["display",{"_index":1222,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1389,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1032,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1579,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":829,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1650,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1545,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":973,"title":{},"body":{"license.html":{}}}],["docs",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["document",{"_index":832,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":699,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":1365,"title":{},"body":{"license.html":{}}}],["doesn`t",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["domains",{"_index":944,"title":{},"body":{"license.html":{}}}],["done",{"_index":1714,"title":{},"body":{"todo.html":{}}}],["doubtful",{"_index":1314,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1463,"title":{},"body":{"license.html":{}}}],["dto",{"_index":210,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["dto.cpf",{"_index":678,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":675,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":231,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":233,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["durable",{"_index":1250,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1312,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":1108,"title":{},"body":{"license.html":{}}}],["d{3}\\x2e\\d{3}\\x2e\\d{3}\\x2d\\d{2",{"_index":460,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["e",{"_index":683,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["each",{"_index":984,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":997,"title":{},"body":{"license.html":{}}}],["edit",{"_index":225,"title":{},"body":{"controllers/CardController.html":{}}}],["effect",{"_index":1626,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1182,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1163,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":964,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1479,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1656,"title":{},"body":{"license.html":{}}}],["element",{"_index":348,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["email",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["embodied",{"_index":1245,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1670,"title":{},"body":{"license.html":{}}}],["enable",{"_index":1082,"title":{},"body":{"license.html":{}}}],["enables",{"_index":1022,"title":{},"body":{"license.html":{}}}],["enableshutdownhooks",{"_index":601,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":603,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":1637,"title":{},"body":{"license.html":{}}}],["enforce",{"_index":1514,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1188,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":1287,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1551,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1211,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1568,"title":{},"body":{"license.html":{}}}],["entities/card.entity",{"_index":234,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{}}}],["entities/collection.entity",{"_index":323,"title":{},"body":{"injectables/CollectionService.html":{}}}],["entities/user.entity",{"_index":669,"title":{},"body":{"injectables/UsersService.html":{}}}],["entity",{"_index":1468,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1136,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":917,"title":{},"body":{"license.html":{}}}],["error",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":264,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["error.util.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["essential",{"_index":1086,"title":{},"body":{"license.html":{}}}],["even",{"_index":1622,"title":{},"body":{"license.html":{}}}],["event",{"_index":1608,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":826,"title":{},"body":{"license.html":{}}}],["exact",{"_index":994,"title":{},"body":{"license.html":{}}}],["example",{"_index":337,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":1010,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":1370,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1300,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1555,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1646,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1505,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1142,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1561,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1072,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1334,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1011,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise",{"_index":1480,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1183,"title":{},"body":{"license.html":{}}}],["exist",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1322,"title":{},"body":{"license.html":{}}}],["expects",{"_index":1321,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["explains",{"_index":907,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":1127,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":597,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":728,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1593,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1421,"title":{},"body":{"license.html":{}}}],["extend",{"_index":947,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1539,"title":{},"body":{"license.html":{}}}],["extends",{"_index":527,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{}}}],["extensions",{"_index":1227,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1035,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":524,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":531,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":1403,"title":{},"body":{"license.html":{}}}],["face",{"_index":770,"title":{},"body":{"index.html":{}}}],["facilities",{"_index":1144,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1434,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1620,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1135,"title":{},"body":{"license.html":{}}}],["false",{"_index":533,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["family",{"_index":1307,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":991,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1317,"title":{},"body":{"license.html":{}}}],["feat",{"_index":1698,"title":{},"body":{"todo.html":{}}}],["feature",{"_index":1039,"title":{},"body":{"license.html":{}}}],["fee",{"_index":887,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"todo.html":{}}}],["files",{"_index":1105,"title":{},"body":{"license.html":{}}}],["finally",{"_index":951,"title":{},"body":{"license.html":{}}}],["find",{"_index":1283,"title":{},"body":{"license.html":{}}}],["findall",{"_index":203,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findmany",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":204,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":241,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":218,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findunique",{"_index":274,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":462,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{},"todo.html":{}}}],["fitness",{"_index":1596,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1702,"title":{},"body":{"todo.html":{}}}],["fixed",{"_index":1249,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1115,"title":{},"body":{"license.html":{}}}],["follow",{"_index":975,"title":{},"body":{"license.html":{}}}],["following",{"_index":1509,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1181,"title":{},"body":{"license.html":{}}}],["force",{"_index":1139,"title":{},"body":{"license.html":{}}}],["form",{"_index":1055,"title":{},"body":{"license.html":{}}}],["format",{"_index":1363,"title":{},"body":{"license.html":{},"todo.html":{}}}],["forms",{"_index":1239,"title":{},"body":{"license.html":{}}}],["found",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{}}}],["found.util",{"_index":267,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["found.util.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["foundation",{"_index":823,"title":{},"body":{"license.html":{}}}],["free",{"_index":821,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":844,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":891,"title":{},"body":{"license.html":{}}}],["fulfilling",{"_index":1166,"title":{},"body":{"license.html":{}}}],["full",{"_index":1649,"title":{},"body":{"license.html":{}}}],["function",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["functioning",{"_index":1337,"title":{},"body":{"license.html":{}}}],["functions",{"_index":750,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":926,"title":{},"body":{"license.html":{}}}],["further",{"_index":1273,"title":{},"body":{"license.html":{}}}],["future",{"_index":949,"title":{},"body":{"license.html":{}}}],["game",{"_index":762,"title":{},"body":{"index.html":{}}}],["general",{"_index":812,"title":{},"body":{"license.html":{}}}],["generally",{"_index":1102,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1096,"title":{},"body":{"license.html":{}}}],["gerado",{"_index":548,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":240,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":219,"title":{},"body":{"controllers/CardController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/CardController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":695,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["github",{"_index":1710,"title":{},"body":{"todo.html":{}}}],["give",{"_index":1203,"title":{},"body":{"license.html":{}}}],["given",{"_index":1131,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1218,"title":{},"body":{"license.html":{}}}],["giving",{"_index":902,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":811,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1373,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":896,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1398,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1122,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1456,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":886,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1639,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":849,"title":{},"body":{"license.html":{}}}],["gui",{"_index":1668,"title":{},"body":{"license.html":{}}}],["handleerror",{"_index":262,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["having",{"_index":1141,"title":{},"body":{"license.html":{}}}],["here",{"_index":774,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":1501,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":775,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1428,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1380,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1703,"title":{},"body":{"todo.html":{}}}],["hope",{"_index":1651,"title":{},"body":{"license.html":{}}}],["hosts",{"_index":1284,"title":{},"body":{"license.html":{}}}],["household",{"_index":1308,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://fsf.org",{"_index":825,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":1674,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1683,"title":{},"body":{"license.html":{}}}],["httpstatus",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["huayra",{"_index":358,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["huayra'})@isstring",{"_index":344,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["hypothetical",{"_index":1666,"title":{},"body":{"license.html":{}}}],["id",{"_index":187,"title":{},"body":{"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifiable",{"_index":1529,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":532,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imageurl",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["implement",{"_index":1083,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1084,"title":{},"body":{"license.html":{}}}],["implements",{"_index":609,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1556,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["importing",{"_index":1493,"title":{},"body":{"license.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["impose",{"_index":1408,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1558,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1614,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1617,"title":{},"body":{"license.html":{}}}],["inc",{"_index":824,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1611,"title":{},"body":{"license.html":{}}}],["include",{"_index":1073,"title":{},"body":{"license.html":{}}}],["included",{"_index":1075,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1015,"title":{},"body":{"license.html":{}}}],["including",{"_index":1097,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1237,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":927,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1675,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1311,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1404,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1225,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1460,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1418,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1235,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":936,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1325,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":604,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inform",{"_index":1292,"title":{},"body":{"license.html":{}}}],["information",{"_index":1329,"title":{},"body":{"license.html":{}}}],["infringe",{"_index":1458,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1490,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1007,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1483,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inside",{"_index":923,"title":{},"body":{"license.html":{}}}],["install",{"_index":922,"title":{},"body":{"license.html":{}}}],["installation",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["installed",{"_index":1350,"title":{},"body":{"license.html":{}}}],["installrunning",{"_index":783,"title":{},"body":{"index.html":{}}}],["instead",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["intact",{"_index":1197,"title":{},"body":{"license.html":{}}}],["intended",{"_index":848,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1185,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1025,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1030,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1252,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1477,"title":{},"body":{"license.html":{}}}],["interface",{"_index":1031,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":1063,"title":{},"body":{"license.html":{}}}],["interfered",{"_index":1339,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":1625,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1094,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1113,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["invalidate",{"_index":1219,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":1124,"title":{},"body":{"license.html":{}}}],["isadmin",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":451,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":452,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":397,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":373,"title":{},"body":{"classes/CreateCollectionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnumber",{"_index":353,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":354,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring",{"_index":355,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":543,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":540,"title":{},"body":{"classes/LoginDto.html":{}}}],["isurl",{"_index":453,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["item",{"_index":1051,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1356,"title":{},"body":{"license.html":{}}}],["jane",{"_index":1706,"title":{},"body":{"todo.html":{}}}],["javascript",{"_index":794,"title":{},"body":{"index.html":{}}}],["jira",{"_index":1712,"title":{},"body":{"todo.html":{}}}],["john",{"_index":1699,"title":{},"body":{"todo.html":{}}}],["june",{"_index":817,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":530,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":135,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":1196,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1087,"title":{},"body":{"license.html":{}}}],["key",{"_index":1366,"title":{},"body":{"license.html":{}}}],["keys",{"_index":1332,"title":{},"body":{"license.html":{}}}],["kind",{"_index":1021,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":837,"title":{},"body":{"license.html":{}}}],["know",{"_index":869,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1517,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1526,"title":{},"body":{"license.html":{}}}],["language",{"_index":1067,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1229,"title":{},"body":{"license.html":{}}}],["later",{"_index":1582,"title":{},"body":{"license.html":{}}}],["law",{"_index":1009,"title":{},"body":{"license.html":{}}}],["laws",{"_index":979,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1488,"title":{},"body":{"license.html":{}}}],["legal",{"_index":903,"title":{},"body":{"license.html":{}}}],["length",{"_index":398,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{}}}],["length(13",{"_index":457,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(3",{"_index":400,"title":{},"body":{"classes/CreateDeckDto.html":{}}}],["leonardo",{"_index":803,"title":{},"body":{"index.html":{}}}],["lesser",{"_index":1680,"title":{},"body":{"license.html":{}}}],["level",{"_index":335,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["lgpl.html",{"_index":1684,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1383,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1006,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1071,"title":{},"body":{"license.html":{}}}],["library",{"_index":1301,"title":{},"body":{"license.html":{}}}],["license",{"_index":807,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["licensee",{"_index":985,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":987,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":839,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1462,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1396,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1454,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1186,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1607,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1594,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1382,"title":{},"body":{"license.html":{}}}],["line",{"_index":1647,"title":{},"body":{"license.html":{}}}],["link",{"_index":792,"title":{},"body":{"index.html":{},"license.html":{}}}],["link.com/image.jpg",{"_index":468,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["link.com/image.jpg'})@isstring()@isurl",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["linked",{"_index":1109,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1678,"title":{},"body":{"license.html":{}}}],["list",{"_index":1046,"title":{},"body":{"license.html":{}}}],["literal",{"_index":520,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1484,"title":{},"body":{"license.html":{}}}],["local",{"_index":737,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["locally",{"_index":779,"title":{},"body":{"index.html":{}}}],["logged",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":87,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":117,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["long",{"_index":1137,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1615,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1618,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1242,"title":{},"body":{"license.html":{}}}],["made",{"_index":1340,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1658,"title":{},"body":{"license.html":{}}}],["mail/cpf",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{}}}],["maintain",{"_index":1278,"title":{},"body":{"license.html":{}}}],["major",{"_index":1078,"title":{},"body":{"license.html":{}}}],["make",{"_index":852,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1157,"title":{},"body":{"license.html":{}}}],["making",{"_index":993,"title":{},"body":{"license.html":{}}}],["manner",{"_index":1502,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":925,"title":{},"body":{"license.html":{}}}],["marcelo",{"_index":805,"title":{},"body":{"index.html":{}}}],["march",{"_index":1553,"title":{},"body":{"license.html":{}}}],["marked",{"_index":913,"title":{},"body":{"license.html":{}}}],["market",{"_index":765,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1402,"title":{},"body":{"license.html":{}}}],["masks",{"_index":981,"title":{},"body":{"license.html":{}}}],["matches",{"_index":459,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1146,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1357,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1412,"title":{},"body":{"license.html":{}}}],["means",{"_index":978,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1165,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1179,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":767,"title":{},"body":{"index.html":{}}}],["medium",{"_index":1192,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1206,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1052,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1049,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1595,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1024,"title":{},"body":{"license.html":{}}}],["merging",{"_index":1473,"title":{},"body":{"license.html":{}}}],["message",{"_index":329,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/UsersService.html":{}}}],["message:'the",{"_index":461,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["met",{"_index":1126,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["miscellaneous",{"_index":749,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1391,"title":{},"body":{"license.html":{}}}],["mit",{"_index":809,"title":{},"body":{"index.html":{}}}],["mode",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":1259,"title":{},"body":{"license.html":{}}}],["modification",{"_index":974,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1056,"title":{},"body":{"license.html":{}}}],["modified",{"_index":912,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1210,"title":{},"body":{"license.html":{}}}],["modify",{"_index":882,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1013,"title":{},"body":{"license.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":1261,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1440,"title":{},"body":{"license.html":{}}}],["name",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":1395,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1226,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1603,"title":{},"body":{"license.html":{}}}],["need",{"_index":873,"title":{},"body":{"license.html":{}}}],["needed",{"_index":950,"title":{},"body":{"license.html":{}}}],["nest",{"_index":808,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":797,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeckController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PackController.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["network",{"_index":1027,"title":{},"body":{"license.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{}}}],["next",{"_index":1281,"title":{},"body":{"license.html":{}}}],["nodejs",{"_index":795,"title":{},"body":{"index.html":{}}}],["non",{"_index":969,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":1267,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1076,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1306,"title":{},"body":{"license.html":{}}}],["notfounderror",{"_index":265,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notfounderror(collection",{"_index":326,"title":{},"body":{"injectables/CollectionService.html":{}}}],["notfounderror(data",{"_index":272,"title":{},"body":{"injectables/CardService.html":{},"injectables/DeckService.html":{},"miscellaneous/functions.html":{}}}],["notfounderror(user",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["nothing",{"_index":1455,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1040,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1034,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1441,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1435,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1377,"title":{},"body":{"license.html":{}}}],["npm",{"_index":782,"title":{},"body":{"index.html":{}}}],["number",{"_index":190,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{},"license.html":{}}}],["numbered",{"_index":1581,"title":{},"body":{"license.html":{}}}],["o",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["obj",{"_index":757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1057,"title":{},"body":{"license.html":{}}}],["obligate",{"_index":1565,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1286,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1167,"title":{},"body":{"license.html":{}}}],["occasionally",{"_index":1266,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1452,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":933,"title":{},"body":{"license.html":{}}}],["offer",{"_index":901,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1295,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1270,"title":{},"body":{"license.html":{}}}],["official",{"_index":1059,"title":{},"body":{"license.html":{}}}],["one",{"_index":1068,"title":{},"body":{"license.html":{}}}],["online",{"_index":760,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":602,"title":{},"body":{"injectables/PrismaService.html":{}}}],["operate",{"_index":1621,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1275,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1090,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1187,"title":{},"body":{"license.html":{}}}],["option",{"_index":1375,"title":{},"body":{"license.html":{}}}],["optional",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1048,"title":{},"body":{"license.html":{}}}],["order",{"_index":1450,"title":{},"body":{"license.html":{}}}],["organization",{"_index":1470,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":988,"title":{},"body":{"license.html":{}}}],["origin",{"_index":1392,"title":{},"body":{"license.html":{}}}],["original",{"_index":1393,"title":{},"body":{"license.html":{}}}],["others",{"_index":875,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1138,"title":{},"body":{"license.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1130,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1151,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1688,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1498,"title":{},"body":{"license.html":{}}}],["pack",{"_index":370,"title":{"classes/Pack.html":{}},"body":{"classes/CreateCollectionDto.html":{},"classes/CreatePackDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"coverage.html":{}}}],["pack.controller",{"_index":582,"title":{},"body":{"modules/PackModule.html":{}}}],["pack.dto",{"_index":570,"title":{},"body":{"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/UpdatePackDto.html":{}}}],["pack.dto.ts",{"_index":406,"title":{},"body":{"classes/CreatePackDto.html":{},"classes/UpdatePackDto.html":{},"coverage.html":{}}}],["pack.dto.ts:11",{"_index":412,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["pack.dto.ts:19",{"_index":409,"title":{},"body":{"classes/CreatePackDto.html":{}}}],["pack.price",{"_index":592,"title":{},"body":{"injectables/PackService.html":{}}}],["pack.service",{"_index":569,"title":{},"body":{"controllers/PackController.html":{},"modules/PackModule.html":{}}}],["pack/pack.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["package",{"_index":722,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":1217,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1077,"title":{},"body":{"license.html":{}}}],["packcontroller",{"_index":560,"title":{"controllers/PackController.html":{}},"body":{"controllers/PackController.html":{},"modules/PackModule.html":{},"coverage.html":{}}}],["packmodule",{"_index":47,"title":{"modules/PackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PackModule.html":{},"modules.html":{},"overview.html":{}}}],["packnumber",{"_index":279,"title":{},"body":{"classes/Collection.html":{},"classes/CreateCollectionDto.html":{}}}],["packservice",{"_index":568,"title":{"injectables/PackService.html":{}},"body":{"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"coverage.html":{},"overview.html":{}}}],["pagani",{"_index":343,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["paper",{"_index":1657,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1425,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1510,"title":{},"body":{"license.html":{}}}],["param",{"_index":228,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":990,"title":{},"body":{"license.html":{}}}],["partial",{"_index":275,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":614,"title":{},"body":{"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcarddto",{"_index":615,"title":{},"body":{"classes/UpdateCardDto.html":{}}}],["partialtype(createcollectiondto",{"_index":617,"title":{},"body":{"classes/UpdateCollectionDto.html":{}}}],["partialtype(createdeckdto",{"_index":619,"title":{},"body":{"classes/UpdateDeckDto.html":{}}}],["partialtype(createpackdto",{"_index":621,"title":{},"body":{"classes/UpdatePackDto.html":{}}}],["partialtype(createuserdto",{"_index":625,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1065,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1023,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1117,"title":{},"body":{"license.html":{}}}],["party",{"_index":1276,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1475,"title":{},"body":{"license.html":{}}}],["pass",{"_index":888,"title":{},"body":{"license.html":{}}}],["passaword",{"_index":443,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["passport",{"_index":526,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":523,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["patch",{"_index":227,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":243,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["patent",{"_index":1424,"title":{},"body":{"license.html":{}}}],["patents",{"_index":954,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":931,"title":{},"body":{"license.html":{}}}],["payload",{"_index":522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":1546,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1290,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1293,"title":{},"body":{"license.html":{}}}],["pelo",{"_index":549,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["performance",{"_index":1599,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1103,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1433,"title":{},"body":{"license.html":{}}}],["permission",{"_index":904,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1121,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":1199,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1236,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1414,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":827,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1345,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1304,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1563,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1246,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1264,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":868,"title":{},"body":{"license.html":{}}}],["place",{"_index":1272,"title":{},"body":{"license.html":{}}}],["players",{"_index":769,"title":{},"body":{"index.html":{}}}],["please",{"_index":1681,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1478,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":1648,"title":{},"body":{"license.html":{}}}],["portion",{"_index":1298,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":1260,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1214,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1624,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1640,"title":{},"body":{"license.html":{}}}],["post",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":387,"title":{},"body":{"classes/CreateDeckDto.html":{},"license.html":{}}}],["practical",{"_index":840,"title":{},"body":{"license.html":{}}}],["practice",{"_index":940,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":835,"title":{},"body":{"license.html":{}}}],["precise",{"_index":970,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":937,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1476,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1054,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["present",{"_index":1575,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1045,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1386,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":874,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1338,"title":{},"body":{"license.html":{}}}],["previous",{"_index":918,"title":{},"body":{"license.html":{}}}],["price",{"_index":407,"title":{},"body":{"classes/CreatePackDto.html":{},"classes/Pack.html":{},"license.html":{}}}],["primarily",{"_index":1548,"title":{},"body":{"license.html":{}}}],["prior",{"_index":1436,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":598,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":608,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":600,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":48,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":156,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["problems",{"_index":915,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1330,"title":{},"body":{"license.html":{}}}],["process.env.jwt_secret",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procuring",{"_index":1535,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1093,"title":{},"body":{"license.html":{}}}],["product",{"_index":1247,"title":{},"body":{"license.html":{}}}],["production",{"_index":789,"title":{},"body":{"index.html":{}}}],["products",{"_index":935,"title":{},"body":{"license.html":{}}}],["profile",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["program",{"_index":851,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1191,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1671,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1066,"title":{},"body":{"license.html":{}}}],["programs",{"_index":861,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1709,"title":{},"body":{"todo.html":{}}}],["prohibit",{"_index":939,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1177,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1542,"title":{},"body":{"license.html":{}}}],["prominent",{"_index":1050,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1037,"title":{},"body":{"license.html":{}}}],["promise",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{}}}],["propagate",{"_index":1001,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1459,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1014,"title":{},"body":{"license.html":{}}}],["properties",{"_index":183,"title":{"properties.html":{}},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":1305,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":965,"title":{},"body":{"license.html":{}}}],["protect",{"_index":871,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":929,"title":{},"body":{"license.html":{}}}],["protection",{"_index":905,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1362,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1600,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1143,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1043,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["provision",{"_index":948,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1430,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1586,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1588,"title":{},"body":{"license.html":{}}}],["public",{"_index":813,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1394,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1364,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1195,"title":{},"body":{"license.html":{}}}],["published",{"_index":1583,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":958,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1309,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1532,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":1447,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1598,"title":{},"body":{"license.html":{}}}],["quantity",{"_index":384,"title":{},"body":{"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/Pack.html":{}}}],["ranking",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["rarity",{"_index":188,"title":{},"body":{"classes/Card.html":{},"classes/CreateCardDto.html":{}}}],["raw",{"_index":1694,"title":{},"body":{"todo.html":{}}}],["read",{"_index":1682,"title":{},"body":{"license.html":{}}}],["readable",{"_index":1243,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1519,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1368,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":946,"title":{},"body":{"license.html":{}}}],["realizar",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["reason",{"_index":1530,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1262,"title":{},"body":{"license.html":{}}}],["recebendo",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":1445,"title":{},"body":{"license.html":{}}}],["receive",{"_index":866,"title":{},"body":{"license.html":{}}}],["received",{"_index":892,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1464,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1537,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1344,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1528,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":889,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1060,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":1642,"title":{},"body":{"license.html":{}}}],["referring",{"_index":863,"title":{},"body":{"license.html":{}}}],["refers",{"_index":977,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":1567,"title":{},"body":{"license.html":{}}}],["regard",{"_index":1374,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1216,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1118,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1429,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1152,"title":{},"body":{"license.html":{}}}],["released",{"_index":857,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1208,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1415,"title":{},"body":{"license.html":{}}}],["relying",{"_index":1518,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1285,"title":{},"body":{"license.html":{}}}],["remains",{"_index":854,"title":{},"body":{"license.html":{}}}],["removal",{"_index":1376,"title":{},"body":{"license.html":{}}}],["remove",{"_index":213,"title":{},"body":{"controllers/CardController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["remove(@param('id",{"_index":655,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":644,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["render",{"_index":968,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1616,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1605,"title":{},"body":{"license.html":{}}}],["repo",{"_index":1711,"title":{},"body":{"todo.html":{}}}],["represent",{"_index":1327,"title":{},"body":{"license.html":{}}}],["request",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1112,"title":{},"body":{"license.html":{}}}],["required",{"_index":1333,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1209,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":776,"title":{},"body":{"index.html":{},"license.html":{}}}],["requires",{"_index":911,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":992,"title":{},"body":{"license.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":1316,"title":{},"body":{"license.html":{}}}],["respect",{"_index":883,"title":{},"body":{"license.html":{}}}],["response.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":547,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":553,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":551,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":881,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1466,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":957,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1178,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1413,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1410,"title":{},"body":{"license.html":{}}}],["result",{"_index":1589,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":995,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1348,"title":{},"body":{"license.html":{}}}],["retorna",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":1628,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1573,"title":{},"body":{"license.html":{}}}],["right",{"_index":1342,"title":{},"body":{"license.html":{}}}],["rights",{"_index":872,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1597,"title":{},"body":{"license.html":{}}}],["rom",{"_index":1351,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":1482,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1361,"title":{},"body":{"license.html":{}}}],["run",{"_index":778,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"license.html":{}}}],["runs",{"_index":1091,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["safest",{"_index":1644,"title":{},"body":{"license.html":{}}}],["sake",{"_index":910,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1492,"title":{},"body":{"license.html":{}}}],["same",{"_index":890,"title":{},"body":{"license.html":{}}}],["santos",{"_index":806,"title":{},"body":{"index.html":{}}}],["satisfy",{"_index":1288,"title":{},"body":{"license.html":{}}}],["saying",{"_index":1282,"title":{},"body":{"license.html":{}}}],["school",{"_index":1672,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1541,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1098,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1005,"title":{},"body":{"license.html":{}}}],["secret",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1156,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1240,"title":{},"body":{"license.html":{}}}],["see",{"_index":1653,"title":{},"body":{"license.html":{}}}],["select",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["sell",{"_index":1507,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1491,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":980,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1297,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1224,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1220,"title":{},"body":{"license.html":{}}}],["server",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"license.html":{}}}],["serves",{"_index":1081,"title":{},"body":{"license.html":{}}}],["service",{"_index":1353,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":1604,"title":{},"body":{"license.html":{}}}],["shall",{"_index":1161,"title":{},"body":{"license.html":{}}}],["share",{"_index":845,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1107,"title":{},"body":{"license.html":{}}}],["short",{"_index":1660,"title":{},"body":{"license.html":{}}}],["show",{"_index":893,"title":{},"body":{"license.html":{}}}],["shows",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["sign",{"_index":1673,"title":{},"body":{"license.html":{}}}],["significant",{"_index":1328,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["similar",{"_index":1176,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1562,"title":{},"body":{"license.html":{}}}],["single",{"_index":220,"title":{},"body":{"controllers/CardController.html":{},"license.html":{}}}],["software",{"_index":822,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1310,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1140,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1154,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"modules/CardModule.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"modules/DeckModule.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"modules/PackModule.html":{},"injectables/PackService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCardDto.html":{},"classes/UpdateCollectionDto.html":{},"classes/UpdateDeckDto.html":{},"classes/UpdatePackDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["spare",{"_index":1257,"title":{},"body":{"license.html":{}}}],["speak",{"_index":862,"title":{},"body":{"license.html":{}}}],["special",{"_index":961,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1089,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1111,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1064,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1580,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1584,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1574,"title":{},"body":{"license.html":{}}}],["sports",{"_index":349,"title":{},"body":{"classes/CreateCardDto.html":{}}}],["src/.../handle",{"_index":752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../not",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":546,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":539,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":542,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":545,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":516,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":521,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":518,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/card/card.controller.ts",{"_index":201,"title":{},"body":{"controllers/CardController.html":{},"coverage.html":{}}}],["src/card/card.controller.ts:29",{"_index":209,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:37",{"_index":217,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:45",{"_index":221,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:55",{"_index":226,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.controller.ts:65",{"_index":214,"title":{},"body":{"controllers/CardController.html":{}}}],["src/card/card.module.ts",{"_index":252,"title":{},"body":{"modules/CardModule.html":{}}}],["src/card/card.service.ts",{"_index":254,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/card/card.service.ts:10",{"_index":255,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:12",{"_index":256,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:16",{"_index":259,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:24",{"_index":260,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:32",{"_index":261,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/card.service.ts:43",{"_index":258,"title":{},"body":{"injectables/CardService.html":{}}}],["src/card/dto/create",{"_index":332,"title":{},"body":{"classes/CreateCardDto.html":{},"coverage.html":{}}}],["src/card/dto/update",{"_index":613,"title":{},"body":{"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["src/card/entities/card.entity.ts",{"_index":182,"title":{},"body":{"classes/Card.html":{},"coverage.html":{}}}],["src/card/entities/card.entity.ts:10",{"_index":199,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:2",{"_index":195,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:3",{"_index":196,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:4",{"_index":198,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:5",{"_index":191,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:6",{"_index":192,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:7",{"_index":197,"title":{},"body":{"classes/Card.html":{}}}],["src/card/entities/card.entity.ts:9",{"_index":194,"title":{},"body":{"classes/Card.html":{}}}],["src/collection/collection.controller.ts",{"_index":287,"title":{},"body":{"controllers/CollectionController.html":{},"coverage.html":{}}}],["src/collection/collection.controller.ts:25",{"_index":290,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:32",{"_index":294,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:39",{"_index":296,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:46",{"_index":299,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.controller.ts:53",{"_index":292,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/collection/collection.module.ts",{"_index":313,"title":{},"body":{"modules/CollectionModule.html":{}}}],["src/collection/collection.service.ts",{"_index":315,"title":{},"body":{"injectables/CollectionService.html":{},"coverage.html":{}}}],["src/collection/collection.service.ts:10",{"_index":316,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:13",{"_index":318,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:19",{"_index":320,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:23",{"_index":321,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:36",{"_index":322,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/collection.service.ts:52",{"_index":319,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/collection/dto/create",{"_index":363,"title":{},"body":{"classes/CreateCollectionDto.html":{},"coverage.html":{}}}],["src/collection/dto/update",{"_index":616,"title":{},"body":{"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["src/collection/entities/collection.entity.ts",{"_index":277,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["src/collection/entities/collection.entity.ts:2",{"_index":282,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:3",{"_index":283,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:4",{"_index":284,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:5",{"_index":280,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:7",{"_index":281,"title":{},"body":{"classes/Collection.html":{}}}],["src/collection/entities/collection.entity.ts:8",{"_index":285,"title":{},"body":{"classes/Collection.html":{}}}],["src/deck/deck.controller.ts",{"_index":481,"title":{},"body":{"controllers/DeckController.html":{},"coverage.html":{}}}],["src/deck/deck.controller.ts:25",{"_index":482,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:30",{"_index":484,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:35",{"_index":485,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:40",{"_index":487,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.controller.ts:45",{"_index":483,"title":{},"body":{"controllers/DeckController.html":{}}}],["src/deck/deck.module.ts",{"_index":501,"title":{},"body":{"modules/DeckModule.html":{}}}],["src/deck/deck.service.ts",{"_index":503,"title":{},"body":{"injectables/DeckService.html":{},"coverage.html":{}}}],["src/deck/deck.service.ts:11",{"_index":505,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:15",{"_index":507,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:23",{"_index":508,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:33",{"_index":509,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:46",{"_index":506,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/deck.service.ts:9",{"_index":504,"title":{},"body":{"injectables/DeckService.html":{}}}],["src/deck/dto/create",{"_index":378,"title":{},"body":{"classes/CreateDeckDto.html":{},"coverage.html":{}}}],["src/deck/dto/update",{"_index":618,"title":{},"body":{"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["src/deck/entities/deck.entity.ts",{"_index":472,"title":{},"body":{"classes/Deck.html":{},"coverage.html":{}}}],["src/deck/entities/deck.entity.ts:10",{"_index":479,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:2",{"_index":477,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:4",{"_index":478,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:5",{"_index":473,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:6",{"_index":475,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:7",{"_index":476,"title":{},"body":{"classes/Deck.html":{}}}],["src/deck/entities/deck.entity.ts:9",{"_index":474,"title":{},"body":{"classes/Deck.html":{}}}],["src/main.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pack/dto/create",{"_index":405,"title":{},"body":{"classes/CreatePackDto.html":{},"coverage.html":{}}}],["src/pack/dto/update",{"_index":620,"title":{},"body":{"classes/UpdatePackDto.html":{},"coverage.html":{}}}],["src/pack/entities/pack.entity.ts",{"_index":554,"title":{},"body":{"classes/Pack.html":{},"coverage.html":{}}}],["src/pack/entities/pack.entity.ts:2",{"_index":556,"title":{},"body":{"classes/Pack.html":{}}}],["src/pack/entities/pack.entity.ts:4",{"_index":558,"title":{},"body":{"classes/Pack.html":{}}}],["src/pack/entities/pack.entity.ts:5",{"_index":557,"title":{},"body":{"classes/Pack.html":{}}}],["src/pack/entities/pack.entity.ts:7",{"_index":555,"title":{},"body":{"classes/Pack.html":{}}}],["src/pack/entities/pack.entity.ts:8",{"_index":559,"title":{},"body":{"classes/Pack.html":{}}}],["src/pack/pack.controller.ts",{"_index":561,"title":{},"body":{"controllers/PackController.html":{},"coverage.html":{}}}],["src/pack/pack.controller.ts:25",{"_index":562,"title":{},"body":{"controllers/PackController.html":{}}}],["src/pack/pack.controller.ts:30",{"_index":564,"title":{},"body":{"controllers/PackController.html":{}}}],["src/pack/pack.controller.ts:35",{"_index":565,"title":{},"body":{"controllers/PackController.html":{}}}],["src/pack/pack.controller.ts:42",{"_index":567,"title":{},"body":{"controllers/PackController.html":{}}}],["src/pack/pack.controller.ts:49",{"_index":563,"title":{},"body":{"controllers/PackController.html":{}}}],["src/pack/pack.module.ts",{"_index":581,"title":{},"body":{"modules/PackModule.html":{}}}],["src/pack/pack.service.ts",{"_index":583,"title":{},"body":{"injectables/PackService.html":{},"coverage.html":{}}}],["src/pack/pack.service.ts:12",{"_index":585,"title":{},"body":{"injectables/PackService.html":{}}}],["src/pack/pack.service.ts:24",{"_index":587,"title":{},"body":{"injectables/PackService.html":{}}}],["src/pack/pack.service.ts:32",{"_index":588,"title":{},"body":{"injectables/PackService.html":{}}}],["src/pack/pack.service.ts:42",{"_index":589,"title":{},"body":{"injectables/PackService.html":{}}}],["src/pack/pack.service.ts:54",{"_index":586,"title":{},"body":{"injectables/PackService.html":{}}}],["src/pack/pack.service.ts:9",{"_index":584,"title":{},"body":{"injectables/PackService.html":{}}}],["src/prisma/prisma.module",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":596,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":599,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":605,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":607,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":623,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":626,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":632,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":629,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":637,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":631,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":634,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":630,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":635,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":628,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":633,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":627,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":636,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":639,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":641,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":642,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":643,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":646,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":645,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":660,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":662,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":663,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:121",{"_index":667,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":664,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:47",{"_index":665,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:65",{"_index":666,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:90",{"_index":668,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/handle",{"_index":263,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/not",{"_index":266,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stand",{"_index":945,"title":{},"body":{"license.html":{}}}],["standard",{"_index":1058,"title":{},"body":{"license.html":{}}}],["standards",{"_index":1061,"title":{},"body":{"license.html":{}}}],["start",{"_index":785,"title":{},"body":{"index.html":{},"license.html":{}}}],["start:dev",{"_index":788,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":790,"title":{},"body":{"index.html":{}}}],["started",{"_index":696,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":1661,"title":{},"body":{"license.html":{}}}],["state",{"_index":1645,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1125,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1417,"title":{},"body":{"license.html":{}}}],["statements",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":955,"title":{},"body":{"license.html":{}}}],["stating",{"_index":1198,"title":{},"body":{"license.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"license.html":{}}}],["steps",{"_index":898,"title":{},"body":{"license.html":{}}}],["storage",{"_index":1231,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["sub",{"_index":1707,"title":{},"body":{"todo.html":{}}}],["subdividing",{"_index":1472,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1465,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1503,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1155,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1110,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1676,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":1268,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1323,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":943,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["sucessfully",{"_index":330,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/DeckService.html":{}}}],["such",{"_index":884,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1516,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1335,"title":{},"body":{"license.html":{}}}],["summary",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{}}}],["super",{"_index":529,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["supplement",{"_index":1369,"title":{},"body":{"license.html":{}}}],["support",{"_index":1205,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":1277,"title":{},"body":{"license.html":{}}}],["sure",{"_index":853,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":878,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1416,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1619,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1686,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":746,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["system",{"_index":766,"title":{},"body":{"index.html":{},"license.html":{}}}],["systematic",{"_index":930,"title":{},"body":{"license.html":{}}}],["table",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":842,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1303,"title":{},"body":{"license.html":{}}}],["task",{"_index":1708,"title":{},"body":{"todo.html":{}}}],["technological",{"_index":1164,"title":{},"body":{"license.html":{}}}],["tells",{"_index":1041,"title":{},"body":{"license.html":{}}}],["term",{"_index":1123,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1659,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1423,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1446,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1432,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1420,"title":{},"body":{"license.html":{}}}],["terms",{"_index":894,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":879,"title":{},"body":{"license.html":{}}}],["things",{"_index":870,"title":{},"body":{"license.html":{}}}],["third",{"_index":1190,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":610,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":611,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus('http://localhost:3000",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardservice.create(dto",{"_index":238,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.delete(id",{"_index":248,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.findall",{"_index":239,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.findone(id",{"_index":242,"title":{},"body":{"controllers/CardController.html":{}}}],["this.cardservice.update(id",{"_index":245,"title":{},"body":{"controllers/CardController.html":{}}}],["this.collectionservice.create(dto",{"_index":305,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.delete(id",{"_index":309,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.findall",{"_index":306,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.findone(id",{"_index":307,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.collectionservice.update(id",{"_index":308,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.deckservice.create(dto",{"_index":493,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.delete(id",{"_index":497,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.findall",{"_index":494,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.findone(id",{"_index":495,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.deckservice.update(id",{"_index":496,"title":{},"body":{"controllers/DeckController.html":{}}}],["this.jwtservice.sign",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.packservice.create(dto",{"_index":573,"title":{},"body":{"controllers/PackController.html":{}}}],["this.packservice.delete(id",{"_index":577,"title":{},"body":{"controllers/PackController.html":{}}}],["this.packservice.findall",{"_index":574,"title":{},"body":{"controllers/PackController.html":{}}}],["this.packservice.findone(id",{"_index":575,"title":{},"body":{"controllers/PackController.html":{}}}],["this.packservice.update(id",{"_index":576,"title":{},"body":{"controllers/PackController.html":{}}}],["this.prisma.card",{"_index":273,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.create",{"_index":268,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.findmany().catch(handleerror",{"_index":271,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.card.findunique",{"_index":276,"title":{},"body":{"injectables/CardService.html":{}}}],["this.prisma.collection",{"_index":324,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.collection.findmany().catch(handleerror",{"_index":325,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.collection.findunique",{"_index":328,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.prisma.deck",{"_index":513,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.create",{"_index":510,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.delete",{"_index":515,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.findmany().catch(handleerror",{"_index":511,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.deck.findunique",{"_index":514,"title":{},"body":{"injectables/DeckService.html":{}}}],["this.prisma.pack",{"_index":591,"title":{},"body":{"injectables/PackService.html":{}}}],["this.prisma.user",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":671,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":651,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":652,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":653,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":656,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":654,"title":{},"body":{"controllers/UsersController.html":{}}}],["those",{"_index":941,"title":{},"body":{"license.html":{}}}],["though",{"_index":1372,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":952,"title":{},"body":{"license.html":{}}}],["three",{"_index":1255,"title":{},"body":{"license.html":{}}}],["through",{"_index":1026,"title":{},"body":{"license.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["thus",{"_index":1147,"title":{},"body":{"license.html":{}}}],["time",{"_index":1442,"title":{},"body":{"license.html":{}}}],["tinoco",{"_index":804,"title":{},"body":{"index.html":{}}}],["todo",{"_index":799,"title":{"todo.html":{}},"body":{"index.html":{},"todo.html":{}}}],["todo.md",{"_index":1693,"title":{},"body":{"todo.html":{}}}],["token",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":550,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["tools",{"_index":1101,"title":{},"body":{"license.html":{}}}],["top",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["trade",{"_index":1400,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1399,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1401,"title":{},"body":{"license.html":{}}}],["trading",{"_index":761,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1341,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1028,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":1343,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1469,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["transmission",{"_index":1291,"title":{},"body":{"license.html":{}}}],["treated",{"_index":1371,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1171,"title":{},"body":{"license.html":{}}}],["true",{"_index":471,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["true})@isboolean",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trump",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["trunfo",{"_index":759,"title":{},"body":{"index.html":{}}}],["two",{"_index":897,"title":{},"body":{"license.html":{}}}],["type",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Card.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Collection.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/Deck.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Pack.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["typescript",{"_index":796,"title":{},"body":{"index.html":{}}}],["typical",{"_index":1318,"title":{},"body":{"license.html":{}}}],["ui",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["unacceptable",{"_index":938,"title":{},"body":{"license.html":{}}}],["unauthorizedexception",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["under",{"_index":983,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1695,"title":{},"body":{"todo.html":{}}}],["unique",{"_index":764,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":257,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DeckService.html":{},"injectables/JwtStrategy.html":{},"injectables/PackService.html":{},"injectables/UsersService.html":{}}}],["unless",{"_index":1326,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1692,"title":{},"body":{"properties.html":{}}}],["unlimited",{"_index":1129,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1000,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1158,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1367,"title":{},"body":{"license.html":{}}}],["until",{"_index":1431,"title":{},"body":{"license.html":{}}}],["update",{"_index":205,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":244,"title":{},"body":{"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":222,"title":{},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/DeckController.html":{},"injectables/DeckService.html":{},"controllers/PackController.html":{},"injectables/PackService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecarddto",{"_index":223,"title":{"classes/UpdateCardDto.html":{}},"body":{"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/UpdateCardDto.html":{},"coverage.html":{}}}],["updatecollectiondto",{"_index":297,"title":{"classes/UpdateCollectionDto.html":{}},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/UpdateCollectionDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":189,"title":{},"body":{"classes/Card.html":{},"classes/Collection.html":{},"classes/Deck.html":{},"classes/Pack.html":{},"classes/User.html":{}}}],["updatedeckdto",{"_index":486,"title":{"classes/UpdateDeckDto.html":{}},"body":{"controllers/DeckController.html":{},"injectables/DeckService.html":{},"classes/UpdateDeckDto.html":{},"coverage.html":{}}}],["updatepackdto",{"_index":566,"title":{"classes/UpdatePackDto.html":{}},"body":{"controllers/PackController.html":{},"injectables/PackService.html":{},"classes/UpdatePackDto.html":{},"coverage.html":{}}}],["updates",{"_index":1354,"title":{},"body":{"license.html":{}}}],["updateuserdto",{"_index":622,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["used",{"_index":967,"title":{},"body":{"license.html":{}}}],["useful",{"_index":1652,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CollectionController.html":{},"controllers/DeckController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':id",{"_index":291,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':id')@apioperation({summary",{"_index":212,"title":{},"body":{"controllers/CardController.html":{}}}],["useguards(undefined)@apibearerauth()@get",{"_index":293,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':id",{"_index":295,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':id",{"_index":298,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/PackController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':id')@apioperation({summary",{"_index":224,"title":{},"body":{"controllers/CardController.html":{}}}],["useguards(undefined)@apibearerauth()@post",{"_index":289,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/PackController.html":{}}}],["useguards(undefined)@apibearerauth()@post()@apioperation({summary",{"_index":208,"title":{},"body":{"controllers/CardController.html":{}}}],["user",{"_index":98,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user.cpf",{"_index":677,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.decorator",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":624,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:21",{"_index":442,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":445,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:50",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:58",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:66",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:74",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:81",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":674,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user`s",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["usercpf",{"_index":676,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercpf.length",{"_index":681,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail",{"_index":672,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail.length",{"_index":679,"title":{},"body":{"injectables/UsersService.html":{}}}],["userlist",{"_index":670,"title":{},"body":{"injectables/UsersService.html":{}}}],["userlist.filter((user",{"_index":673,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":464,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["users.controller",{"_index":661,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":648,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":638,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":49,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":647,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":1320,"title":{},"body":{"license.html":{}}}],["using",{"_index":1289,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["valid",{"_index":1254,"title":{},"body":{"license.html":{}}}],["validate",{"_index":517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":519,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":356,"title":{},"body":{"classes/CreateCardDto.html":{},"classes/CreateCollectionDto.html":{},"classes/CreateDeckDto.html":{},"classes/CreatePackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1715,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":830,"title":{},"body":{"license.html":{}}}],["version",{"_index":814,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":850,"title":{},"body":{"license.html":{}}}],["view",{"_index":1044,"title":{},"body":{"license.html":{},"todo.html":{}}}],["vinhas",{"_index":802,"title":{},"body":{"index.html":{}}}],["violates",{"_index":1360,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1427,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1038,"title":{},"body":{"license.html":{}}}],["void",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["volume",{"_index":1230,"title":{},"body":{"license.html":{}}}],["w",{"_index":1663,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1180,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1633,"title":{},"body":{"license.html":{}}}],["want",{"_index":777,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranties",{"_index":1042,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":908,"title":{},"body":{"license.html":{}}}],["watch",{"_index":786,"title":{},"body":{"index.html":{}}}],["way",{"_index":858,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1244,"title":{},"body":{"license.html":{}}}],["website",{"_index":1696,"title":{},"body":{"todo.html":{}}}],["welcome",{"_index":1664,"title":{},"body":{"license.html":{}}}],["well",{"_index":1019,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1474,"title":{},"body":{"license.html":{}}}],["whether",{"_index":885,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1074,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1299,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1069,"title":{},"body":{"license.html":{}}}],["window",{"_index":1088,"title":{},"body":{"license.html":{}}}],["winter",{"_index":367,"title":{},"body":{"classes/CreateCollectionDto.html":{}}}],["wipo",{"_index":1170,"title":{},"body":{"license.html":{}}}],["wish",{"_index":865,"title":{},"body":{"license.html":{}}}],["within",{"_index":1411,"title":{},"body":{"license.html":{}}}],["without",{"_index":1003,"title":{},"body":{"license.html":{}}}],["work",{"_index":856,"title":{},"body":{"license.html":{},"todo.html":{}}}],["work's",{"_index":1100,"title":{},"body":{"license.html":{}}}],["working",{"_index":1070,"title":{},"body":{"license.html":{}}}],["works",{"_index":838,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1506,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1592,"title":{},"body":{"license.html":{}}}],["written",{"_index":1253,"title":{},"body":{"license.html":{}}}],["years",{"_index":1256,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":1523,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/CollectionModule.html":{},"modules/DeckModule.html":{},"modules/PackModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: Shows application status})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: `Shows application status`,\n  })\n  getStatus() {\n    return this.appService.getStatus('http://localhost:3000');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCardModule\n\nCardModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nDeckModule\n\nDeckModule\n\nAppModule -->\n\nDeckModule->AppModule\n\n\n\n\n\nPackModule\n\nPackModule\n\nAppModule -->\n\nPackModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CardModule\n                        \n                        \n                            CollectionModule\n                        \n                        \n                            DeckModule\n                        \n                        \n                            PackModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { DeckModule } from './deck/deck.module';\nimport { CardModule } from './card/card.module';\nimport { CollectionModule } from './collection/collection.module';\nimport { PackModule } from './pack/pack.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    UsersModule,\n    AuthModule,\n    DeckModule,\n    CardModule,\n    CollectionModule,\n    PackModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string) {\n    return {\n      status: 'Top trump is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { user: User; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return { user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/entities/card.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardAttack\n                            \n                            \n                                cardDef\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rarity\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rarity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/card/entities/card.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Card {\n  id?: string;\n  name: string;\n  type: string;\n  cardAttack: number;\n  cardDef: number;\n  rarity: string;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CardController.html":{"url":"controllers/CardController.html","title":"controller - CardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                card\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCardDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post()@ApiOperation({summary: 'Create a card'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')@ApiOperation({summary: 'Remove a card by its ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all the cards in a collection'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a single card by its ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateCardDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')@ApiOperation({summary: 'Edit a card by ID'})\n                \n            \n\n            \n                \n                    Defined in src/card/card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CardService } from './card.service';\nimport { CreateCardDto } from './dto/create-card.dto';\nimport { UpdateCardDto } from './dto/update-card.dto';\nimport { Card } from './entities/card.entity';\n\n@ApiTags('card')\n@Controller('card')\nexport class CardController {\n  constructor(private readonly cardService: CardService) {}\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  @ApiOperation({\n    summary: 'Create a card',\n  })\n  create(@Body() dto: CreateCardDto) {\n    return this.cardService.create(dto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all the cards in a collection',\n  })\n  findAll(): Promise {\n    return this.cardService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Get a single card by its ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.cardService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Edit a card by ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateCardDto) {\n    return this.cardService.update(id, dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remove a card by its ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.cardService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CardModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nPrismaModule->CardModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/card/card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CardService } from './card.service';\nimport { CardController } from './card.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [CardController],\n  providers: [CardService],\n})\nexport class CardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/card/card.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCardDto)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateCardDto)\n                \n            \n\n\n            \n                \n                    Defined in src/card/card.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateCardDto } from './dto/create-card.dto';\nimport { UpdateCardDto } from './dto/update-card.dto';\nimport { Card } from './entities/card.entity';\n\n@Injectable()\nexport class CardService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(dto: CreateCardDto) {\n    return await this.prisma.card.create({ data: dto }).catch(handleError);\n  }\n\n  async findAll(): Promise {\n    const data = await this.prisma.card.findMany().catch(handleError);\n\n    notFoundError(data, 'the cards');\n\n    return data;\n  }\n\n  async findOne(id: string) {\n    const data = await this.prisma.card\n      .findUnique({ where: { id } })\n      .catch(handleError);\n    notFoundError(data, `this card (${id})`);\n    return data;\n  }\n\n  async update(id: string, dto: UpdateCardDto) {\n    const data: Partial = { ...dto };\n    notFoundError(\n      this.prisma.card.findUnique({ where: { id } }),\n      `this card (${id})`,\n    );\n    return await this.prisma.card\n      .update({ where: { id }, data })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    const data = await this.prisma.card\n      .delete({ where: { id } })\n      .catch(handleError);\n    notFoundError(\n      this.prisma.card.findUnique({ where: { id } }),\n      `this card (${id})`,\n    );\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/entities/collection.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardNumber\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                packNumber\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        packNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/collection/entities/collection.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Collection {\n  id?: string;\n  name: string;\n  packNumber: number;\n  cardNumber: number;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CollectionController.html":{"url":"controllers/CollectionController.html","title":"controller - CollectionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CollectionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/collection.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                collection\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCollectionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post()\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateCollectionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/collection/collection.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { CollectionService } from './collection.service';\nimport { CreateCollectionDto } from './dto/create-collection.dto';\nimport { UpdateCollectionDto } from './dto/update-collection.dto';\n\n@ApiTags('collection')\n@Controller('collection')\nexport class CollectionController {\n  constructor(private readonly collectionService: CollectionService) {}\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  create(@Body() dto: CreateCollectionDto) {\n    return this.collectionService.create(dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  findAll() {\n    return this.collectionService.findAll();\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.collectionService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() dto: UpdateCollectionDto) {\n    return this.collectionService.update(id, dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  delete(@Param('id') id: string) {\n    return this.collectionService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectionModule.html":{"url":"modules/CollectionModule.html","title":"module - CollectionModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_CollectionModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCollectionModule\n\nCollectionModule\n\nCollectionModule -->\n\nPrismaModule->CollectionModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/collection/collection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CollectionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CollectionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CollectionService } from './collection.service';\nimport { CollectionController } from './collection.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [CollectionController],\n  providers: [CollectionService],\n})\nexport class CollectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionService.html":{"url":"injectables/CollectionService.html","title":"injectable - CollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/collection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/collection/collection.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCollectionDto: CreateCollectionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCollectionDto\n                                    \n                                                CreateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateCollectionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/collection/collection.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCollectionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateCollectionDto } from './dto/create-collection.dto';\nimport { UpdateCollectionDto } from './dto/update-collection.dto';\nimport { Collection } from './entities/collection.entity';\n\n@Injectable()\nexport class CollectionService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(createCollectionDto: CreateCollectionDto) {\n    return await this.prisma.collection\n      .create({ data: createCollectionDto })\n      .catch(handleError);\n  }\n\n  async findAll() {\n    return await this.prisma.collection.findMany().catch(handleError);\n  }\n\n  async findOne(id: string) {\n    const collection = await this.prisma.collection\n      .findUnique({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n\n    notFoundError(collection, 'the collections');\n    return collection;\n  }\n\n  async update(id: string, dto: UpdateCollectionDto) {\n    const data: Partial = { ...dto };\n\n    notFoundError(\n      this.prisma.collection.findUnique({ where: { id } }),\n      `this collection (${id})`,\n    );\n\n    return this.prisma.collection\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.prisma.collection\n      .delete({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n    notFoundError(\n      this.prisma.collection.findUnique({ where: { id } }),\n      `this collection (${id})`,\n    );\n    return { message: 'Sucessfully deleted' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardDto.html":{"url":"classes/CreateCardDto.html","title":"class - CreateCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/dto/create-card.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardAttack\n                            \n                            \n                                cardDef\n                            \n                            \n                                name\n                            \n                            \n                                rarity\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card level of attack', example: 110})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card level of defense', example: 95})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of a card.', example: 'Pagani Huayra'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rarity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card rarity', example: 'common'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the element in the card', example: 'Sports car'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/card/dto/create-card.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive, IsString } from 'class-validator';\n\nexport class CreateCardDto {\n  @ApiProperty({\n    description: 'Name of a card.',\n    example: 'Pagani Huayra',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'Type of the element in the card',\n    example: 'Sports car',\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: 'Card level of attack',\n    example: 110,\n  })\n  @IsNumber()\n  @IsPositive()\n  cardAttack: number;\n\n  @ApiProperty({\n    description: 'Card level of defense',\n    example: 95,\n  })\n  @IsNumber()\n  @IsPositive()\n  cardDef: number;\n\n  @ApiProperty({\n    description: 'Card rarity',\n    example: 'common',\n  })\n  @IsString()\n  rarity: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCollectionDto.html":{"url":"classes/CreateCollectionDto.html","title":"class - CreateCollectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCollectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/dto/create-collection.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardNumber\n                            \n                            \n                                name\n                            \n                            \n                                packNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Card number', example: '7'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/collection/dto/create-collection.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Collection name', example: 'Winter 2022'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/collection/dto/create-collection.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        packNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pack number', example: '13'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/collection/dto/create-collection.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateCollectionDto {\n  @ApiProperty({\n    description: 'Collection name',\n    example: 'Winter 2022',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Pack number',\n    example: '13',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  packNumber: number;\n\n  @ApiProperty({\n    description: 'Card number',\n    example: '7',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  cardNumber: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeckDto.html":{"url":"classes/CreateDeckDto.html","title":"class - CreateDeckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/dto/create-deck.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardQuantity\n                            \n                            \n                                deckAttack\n                            \n                            \n                                deckDefense\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Deck´s Card quantity', example: 6})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/deck/dto/create-deck.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deckAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Attack power from deck', example: 17})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/deck/dto/create-deck.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deckDefense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Defense power from deck', example: 23})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/deck/dto/create-deck.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name your deck', example: 'The Best of the bests'})@IsString()@Length(3, 25)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/deck/dto/create-deck.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, Length } from 'class-validator';\n\nexport class CreateDeckDto {\n  @ApiProperty({\n    description: 'Name your deck',\n    example: 'The Best of the bests',\n  })\n  @IsString()\n  @Length(3, 25)\n  name: string;\n\n  @ApiProperty({\n    description: 'Attack power from deck',\n    example: 17,\n  })\n  @IsInt()\n  @IsPositive()\n  deckAttack: number;\n\n  @ApiProperty({\n    description: 'Deck´s Card quantity',\n    example: 6,\n  })\n  @IsInt()\n  @IsPositive()\n  cardQuantity: number;\n\n  @ApiProperty({\n    description: 'Defense power from deck',\n    example: 23,\n  })\n  @IsInt()\n  @IsPositive()\n  deckDefense: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePackDto.html":{"url":"classes/CreatePackDto.html","title":"class - CreatePackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pack/dto/create-pack.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Price of the pack', example: '12.99'})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pack/dto/create-pack.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount of cards in the pack', example: '15'})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pack/dto/create-pack.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNumber, IsPositive } from 'class-validator';\n\nexport class CreatePackDto {\n  @ApiProperty({\n    description: 'Amount of cards in the pack',\n    example: '15',\n  })\n  @IsInt()\n  @IsPositive()\n  quantity: number;\n\n  @ApiProperty({\n    description: 'Price of the pack',\n    example: '12.99',\n  })\n  @IsNumber()\n  @IsPositive()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                CPF\n                            \n                            \n                                email\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                ranking\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users balance', example: '1000.52'})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s CPF number', example: '123.123.123-12'})@Length(13, 14)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s Email', example: 'admin@blue.com.br'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users avatar', example: 'link.com/image.jpg'})@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is admin of server', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s name', example: 'Admin'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s Passaword', example: 'Admin2022'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Users ranking. Select a number from 1 to 2000', example: '463'})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'User`s name',\n    example: 'Admin',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'User`s Email',\n    example: 'admin@blue.com.br',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'User`s Passaword',\n    example: 'Admin2022',\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    description: 'User`s CPF number',\n    example: '123.123.123-12',\n  })\n  @Length(13, 14)\n  @IsString()\n  @IsNotEmpty()\n  // @Matches( (^\\d{3}\\x2E\\d{3}\\x2E\\d{3}\\x2D\\d{2}$), {\n  //   message:'the first character of the username must not be a number. Username must contains at least 4 characters',\n  // })\n  CPF: string;\n\n  @ApiProperty({\n    description: 'Users avatar',\n    example: 'link.com/image.jpg',\n  })\n  @IsString()\n  @IsUrl()\n  imageUrl: string;\n\n  @ApiProperty({\n    description: 'Users ranking. Select a number from 1 to 2000',\n    example: '463',\n  })\n  @IsInt()\n  @IsPositive()\n  ranking: number;\n\n  @ApiProperty({\n    description: 'Users balance',\n    example: '1000.52',\n  })\n  @IsNumber()\n  @IsPositive()\n  balance: number;\n\n  @ApiProperty({\n    description: 'If user is admin of server',\n    example: true,\n  })\n  @IsBoolean()\n  isAdmin?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deck.html":{"url":"classes/Deck.html","title":"class - Deck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/entities/deck.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cardQuantity\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                deckAttack\n                            \n                            \n                                deckDefense\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cardQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deckAttack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deckDefense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/deck/entities/deck.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Deck {\n  id?: string;\n\n  name: string;\n  cardQuantity?: number;\n  deckAttack: number;\n  deckDefense: number;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeckController.html":{"url":"controllers/DeckController.html","title":"controller - DeckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/deck.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                deck\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateDeckDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateDeckDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/deck/deck.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { DeckService } from './deck.service';\nimport { CreateDeckDto } from './dto/create-deck.dto';\nimport { UpdateDeckDto } from './dto/update-deck.dto';\n\n@ApiTags('deck')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('deck')\nexport class DeckController {\n  constructor(private readonly deckService: DeckService) {}\n\n  @Post()\n  create(@Body() dto: CreateDeckDto) {\n    return this.deckService.create(dto);\n  }\n\n  @Get()\n  findAll() {\n    return this.deckService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.deckService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() dto: UpdateDeckDto) {\n    return this.deckService.update(id, dto);\n  }\n\n  @Delete(':id')\n  delete(@Param('id') id: string) {\n    return this.deckService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeckModule.html":{"url":"modules/DeckModule.html","title":"module - DeckModule","body":"\n                   \n\n\n\n\n    Modules\n    DeckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeckModule\n\n\n\ncluster_DeckModule_imports\n\n\n\ncluster_DeckModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nDeckModule\n\nDeckModule\n\nDeckModule -->\n\nPrismaModule->DeckModule\n\n\n\n\n\nDeckService\n\nDeckService\n\nDeckModule -->\n\nDeckService->DeckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/deck/deck.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeckController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeckService } from './deck.service';\nimport { DeckController } from './deck.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [DeckController],\n  providers: [DeckService],\n})\nexport class DeckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeckService.html":{"url":"injectables/DeckService.html","title":"injectable - DeckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/deck.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/deck/deck.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateDeckDto)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateDeckDto)\n                \n            \n\n\n            \n                \n                    Defined in src/deck/deck.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDeckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreateDeckDto } from './dto/create-deck.dto';\nimport { UpdateDeckDto } from './dto/update-deck.dto';\n\n@Injectable()\nexport class DeckService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(dto: CreateDeckDto) {\n    return await this.prisma.deck.create({ data: dto });\n  }\n\n  async findAll() {\n    const data = await this.prisma.deck.findMany().catch(handleError);\n\n    notFoundError(data, 'the decks');\n\n    return data;\n  }\n\n  async findOne(id: string) {\n    const data = await this.prisma.deck\n      .findUnique({ where: { id } })\n      .catch(handleError);\n\n    notFoundError(data, 'this deck');\n\n    return data;\n  }\n\n  async update(id: string, dto: UpdateDeckDto) {\n    const data = await this.prisma.deck\n      .update({ where: { id }, data: dto })\n      .catch(handleError);\n\n    notFoundError(\n      this.prisma.deck.findUnique({ where: { id } }),\n      `this deck (${id})`,\n    );\n\n    return data;\n  }\n\n  async delete(id: string) {\n    this.prisma.deck.delete({ where: { id } }).catch(handleError);\n\n    notFoundError(\n      this.prisma.deck.findUnique({ where: { id } }),\n      `this deck (${id})`,\n    );\n\n    return { message: 'Sucessfully deleted' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Either the user doesn`t exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User`s email address', example: 'admin@blue.com.br'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User`s password for authentication', example: 'Admin2022'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'User`s email address',\n    example: 'admin@blue.com.br',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'User`s password for authentication',\n    example: 'Admin2022',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pack.html":{"url":"classes/Pack.html","title":"class - Pack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pack/entities/pack.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/pack/entities/pack.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/pack/entities/pack.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/pack/entities/pack.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/pack/entities/pack.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/pack/entities/pack.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Pack {\n  id?: string;\n\n  quantity: number;\n  price: number;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PackController.html":{"url":"controllers/PackController.html","title":"controller - PackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pack/pack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreatePackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post()\n                \n            \n\n            \n                \n                    Defined in src/pack/pack.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/pack/pack.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/pack/pack.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/pack/pack.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdatePackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/pack/pack.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { PackService } from './pack.service';\nimport { CreatePackDto } from './dto/create-pack.dto';\nimport { UpdatePackDto } from './dto/update-pack.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('pack')\n@Controller('pack')\nexport class PackController {\n  constructor(private readonly packService: PackService) {}\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post()\n  create(@Body() dto: CreatePackDto) {\n    return this.packService.create(dto);\n  }\n\n  @Get()\n  findAll() {\n    return this.packService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.packService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() dto: UpdatePackDto) {\n    return this.packService.update(id, dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  delete(@Param('id') id: string) {\n    return this.packService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PackModule.html":{"url":"modules/PackModule.html","title":"module - PackModule","body":"\n                   \n\n\n\n\n    Modules\n    PackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PackModule\n\n\n\ncluster_PackModule_providers\n\n\n\ncluster_PackModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nPackModule\n\nPackModule\n\nPackModule -->\n\nPrismaModule->PackModule\n\n\n\n\n\nPackService\n\nPackService\n\nPackModule -->\n\nPackService->PackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pack/pack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PackService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PackService } from './pack.service';\nimport { PackController } from './pack.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [PackController],\n  providers: [PackService],\n})\nexport class PackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackService.html":{"url":"injectables/PackService.html","title":"injectable - PackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pack/pack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/pack/pack.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreatePackDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pack/pack.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pack/pack.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/pack/pack.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pack/pack.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdatePackDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pack/pack.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdatePackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { CreatePackDto } from './dto/create-pack.dto';\nimport { UpdatePackDto } from './dto/update-pack.dto';\n\n@Injectable()\nexport class PackService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreatePackDto) {\n    const pack = await this.prisma.pack\n      .create({ data: dto })\n      .catch(handleError);\n\n    if (pack.price \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardDto.html":{"url":"classes/UpdateCardDto.html","title":"class - UpdateCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/card/dto/update-card.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCardDto } from './create-card.dto';\n\nexport class UpdateCardDto extends PartialType(CreateCardDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCollectionDto.html":{"url":"classes/UpdateCollectionDto.html","title":"class - UpdateCollectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCollectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/collection/dto/update-collection.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCollectionDto } from './create-collection.dto';\n\nexport class UpdateCollectionDto extends PartialType(CreateCollectionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeckDto.html":{"url":"classes/UpdateDeckDto.html","title":"class - UpdateDeckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deck/dto/update-deck.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeckDto } from './create-deck.dto';\n\nexport class UpdateDeckDto extends PartialType(CreateDeckDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePackDto.html":{"url":"classes/UpdatePackDto.html","title":"class - UpdatePackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pack/dto/update-pack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePackDto } from './create-pack.dto';\n\nexport class UpdatePackDto extends PartialType(CreatePackDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                CPF\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                ranking\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  CPF: string;\n  isAdmin?: boolean;\n  balance: number;\n  ranking: number;\n  imageUrl: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { notFoundError } from 'src/utils/not-found.util';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const userList = await this.prisma.user.findMany();\n\n    const userEmail = userList.filter((user) => user.email === dto.email);\n\n    const userCPF = userList.filter((user) => user.CPF === dto.CPF);\n\n    if (userEmail.length > 0 || userCPF.length > 0) {\n      throw new BadRequestException('This e-mail/CPF is already in use.');\n    }\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return await this.prisma.user\n      .create({\n        data,\n        select: {\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          imageUrl: false,\n          balance: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll() {\n    return await this.prisma.user\n      .findMany({\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: false,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: false,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findOne(id: string) {\n    const user = await this.prisma.user\n      .findUnique({\n        where: {\n          id,\n        },\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: true,\n        },\n      })\n      .catch(handleError);\n\n    notFoundError(user, `this user (${id})`);\n\n    return user;\n  }\n\n  async update(id: string, dto: UpdateUserDto) {\n    const data: Partial = { ...dto };\n\n    notFoundError(\n      await this.prisma.user.findUnique({ where: { id } }),\n      `this user (${id})`,\n    );\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          CPF: true,\n          isAdmin: true,\n          password: false,\n          ranking: true,\n          balance: true,\n          imageUrl: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string) {\n    notFoundError(\n      await this.prisma.user.findUnique({ where: { id } }),\n      `this user (${id})`,\n    );\n\n    await this.prisma.user\n      .delete({\n        where: {\n          id,\n        },\n      })\n      .catch(handleError);\n    return { message: 'User successfully deleted!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/card/card.controller.ts\n            \n            controller\n            CardController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/card/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/card/dto/create-card.dto.ts\n            \n            class\n            CreateCardDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/card/dto/update-card.dto.ts\n            \n            class\n            UpdateCardDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/card/entities/card.entity.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/collection/collection.controller.ts\n            \n            controller\n            CollectionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/collection/collection.service.ts\n            \n            injectable\n            CollectionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/collection/dto/create-collection.dto.ts\n            \n            class\n            CreateCollectionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/collection/dto/update-collection.dto.ts\n            \n            class\n            UpdateCollectionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/collection/entities/collection.entity.ts\n            \n            class\n            Collection\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/deck/deck.controller.ts\n            \n            controller\n            DeckController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/deck/deck.service.ts\n            \n            injectable\n            DeckService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/deck/dto/create-deck.dto.ts\n            \n            class\n            CreateDeckDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/deck/dto/update-deck.dto.ts\n            \n            class\n            UpdateDeckDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/deck/entities/deck.entity.ts\n            \n            class\n            Deck\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pack/dto/create-pack.dto.ts\n            \n            class\n            CreatePackDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pack/dto/update-pack.dto.ts\n            \n            class\n            UpdatePackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pack/entities/pack.entity.ts\n            \n            class\n            Pack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/pack/pack.controller.ts\n            \n            controller\n            PackController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/pack/pack.service.ts\n            \n            injectable\n            PackService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/not-found.util.ts\n            \n            function\n            notFoundError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                        \n                            notFoundError   (src/.../not-found.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/not-found.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notFoundError\n                        \n                    \n                \n            \n            \n                \nnotFoundError(data: any, obj: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    obj\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSuper Trunfo\nSuper trunfo is an online Trading Card Game that has its own currency, and an unique market system.\nIt also has a ranking mechanism, allowing players to face challenging matches.\n🚀 Deploy\nDeploy can be found here:\nHeroku deploy\n📋 Requirements\nIf you want to run it locally instead:\n🔧 Installation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod📦 Documentation\nDocumentation can be found below:\nLINK\n🛠️ Built with:\n\nJavaScript\nNodeJs\nTypeScript\nNestJs\nSwagger\nCompodocs\n\n📌 CHANGELOG / TODO\n\nChangelog.\nTodo.\n\n✒️ Authored by:\n\nDaniel Vinhas\nLeonardo Tinoco\nMarcelo Santos\n\n📄 License\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_DeckModule\n\n\n\ncluster_DeckModule_providers\n\n\n\ncluster_PackModule\n\n\n\ncluster_PackModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCardModule\n\nCardModule\n\nAppModule -->\n\nCardModule->AppModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nDeckModule\n\nDeckModule\n\nAppModule -->\n\nDeckModule->AppModule\n\n\n\n\n\nPackModule\n\nPackModule\n\nAppModule -->\n\nPackModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nCardModule -->\n\nPrismaModule->CardModule\n\n\n\nCollectionModule -->\n\nPrismaModule->CollectionModule\n\n\n\nDeckModule -->\n\nPrismaModule->DeckModule\n\n\n\nPackModule -->\n\nPrismaModule->PackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\nDeckService\n\nDeckService\n\nDeckModule -->\n\nDeckService->DeckModule\n\n\n\n\n\nPackService\n\nPackService\n\nPackModule -->\n\nPackService->PackModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nExample of TODO.md\nThis is an example of TODO.md\nView the raw content of this file to understand the format.\nTodo\n\n Work on the website ~3d #feat @john 2020-03-20\n Fix the homepage ~1d #bug @jane\n Sub-task or description\n\n\n\nIn Progress\n\n Work on Github Repo [JIRA-345]\n\nDone ✓\n\n Create my first TODO.md\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
